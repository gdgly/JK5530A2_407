; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\tm1650.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\tm1650.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\tm1650.crf --no_multibyte_chars ..\drive\TM1650.c]
                          THUMB

                          AREA ||i.IIc_Ack||, CODE, READONLY, ALIGN=2

                  IIc_Ack PROC
;;;178    **********************************************************************************************************/
;;;179    void IIc_Ack(void)
000000  b510              PUSH     {r4,lr}
;;;180    {
;;;181    	TM1650_SDA_0();	/* CPUȽ֯SDA = 0 */
000002  f44f7180          MOV      r1,#0x100
000006  480c              LDR      r0,|L1.56|
000008  f7fffffe          BL       GPIO_ResetBits
;;;182    	IIc_Delay();
00000c  f7fffffe          BL       IIc_Delay
;;;183    	TM1650_SCL_1();	/* CPUӺʺ1ٶʱד */
000010  f44f7100          MOV      r1,#0x200
000014  4808              LDR      r0,|L1.56|
000016  f7fffffe          BL       GPIO_SetBits
;;;184    	IIc_Delay();
00001a  f7fffffe          BL       IIc_Delay
;;;185    	TM1650_SCL_0();
00001e  f44f7100          MOV      r1,#0x200
000022  4805              LDR      r0,|L1.56|
000024  f7fffffe          BL       GPIO_ResetBits
;;;186    	IIc_Delay();
000028  f7fffffe          BL       IIc_Delay
;;;187    	TM1650_SDA_1();	/* CPUˍ؅SDA؜П */
00002c  f44f7180          MOV      r1,#0x100
000030  4801              LDR      r0,|L1.56|
000032  f7fffffe          BL       GPIO_SetBits
;;;188    }
000036  bd10              POP      {r4,pc}
;;;189    
                          ENDP

                  |L1.56|
                          DCD      0x40020800

                          AREA ||i.IIc_Delay||, CODE, READONLY, ALIGN=1

                  IIc_Delay PROC
;;;50     **********************************************************************************************************/
;;;51     static void IIc_Delay(void)
000000  b508              PUSH     {r3,lr}
;;;52     {
;;;53     	vu8 i;
;;;54     	for (i = 0; i < 200; i++);
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
000006  e004              B        |L2.18|
                  |L2.8|
000008  f89d0000          LDRB     r0,[sp,#0]
00000c  1c40              ADDS     r0,r0,#1
00000e  b2c0              UXTB     r0,r0
000010  9000              STR      r0,[sp,#0]
                  |L2.18|
000012  f89d0000          LDRB     r0,[sp,#0]
000016  28c8              CMP      r0,#0xc8
000018  dbf6              BLT      |L2.8|
;;;55     }
00001a  bd08              POP      {r3,pc}
;;;56     /**********************************************************************************************************
                          ENDP


                          AREA ||i.IIc_NAck||, CODE, READONLY, ALIGN=2

                  IIc_NAck PROC
;;;195    **********************************************************************************************************/
;;;196    void IIc_NAck(void)
000000  b510              PUSH     {r4,lr}
;;;197    {
;;;198    	TM1650_SDA_1();	/* CPUȽ֯SDA = 1 */
000002  f44f7180          MOV      r1,#0x100
000006  480a              LDR      r0,|L3.48|
000008  f7fffffe          BL       GPIO_SetBits
;;;199    	IIc_Delay();
00000c  f7fffffe          BL       IIc_Delay
;;;200    	TM1650_SCL_1();	/* CPUӺʺ1ٶʱד */
000010  f44f7100          MOV      r1,#0x200
000014  4806              LDR      r0,|L3.48|
000016  f7fffffe          BL       GPIO_SetBits
;;;201    	IIc_Delay();
00001a  f7fffffe          BL       IIc_Delay
;;;202    	TM1650_SCL_0();
00001e  f44f7100          MOV      r1,#0x200
000022  4803              LDR      r0,|L3.48|
000024  f7fffffe          BL       GPIO_ResetBits
;;;203    	IIc_Delay();	
000028  f7fffffe          BL       IIc_Delay
;;;204    }
00002c  bd10              POP      {r4,pc}
;;;205    /**********************************************************************************************************
                          ENDP

00002e  0000              DCW      0x0000
                  |L3.48|
                          DCD      0x40020800

                          AREA ||i.IIc_ReadByte||, CODE, READONLY, ALIGN=2

                  IIc_ReadByte PROC
;;;125    **********************************************************************************************************/
;;;126    vu8 IIc_ReadByte(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;127    {
;;;128    	vu8 i;
;;;129    	vu8 value;
;;;130    
;;;131    	/*接受一个8位数据 */
;;;132    	value = 0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;133    	for (i = 0; i < 8; i++)
000006  9001              STR      r0,[sp,#4]
000008  e022              B        |L4.80|
                  |L4.10|
;;;134    	{
;;;135    		value <<= 1;
00000a  f89d0000          LDRB     r0,[sp,#0]
00000e  0640              LSLS     r0,r0,#25
000010  0e00              LSRS     r0,r0,#24
000012  9000              STR      r0,[sp,#0]
;;;136    		TM1650_SCL_1();
000014  f44f7100          MOV      r1,#0x200
000018  4811              LDR      r0,|L4.96|
00001a  f7fffffe          BL       GPIO_SetBits
;;;137    		IIc_Delay();
00001e  f7fffffe          BL       IIc_Delay
;;;138    		if (TM1650_SDA_READ())
000022  f44f7180          MOV      r1,#0x100
000026  480e              LDR      r0,|L4.96|
000028  f7fffffe          BL       GPIO_ReadInputDataBit
00002c  b120              CBZ      r0,|L4.56|
;;;139    		{
;;;140    			value++;
00002e  f89d0000          LDRB     r0,[sp,#0]
000032  1c40              ADDS     r0,r0,#1
000034  b2c0              UXTB     r0,r0
000036  9000              STR      r0,[sp,#0]
                  |L4.56|
;;;141    		}
;;;142    		TM1650_SCL_0();
000038  f44f7100          MOV      r1,#0x200
00003c  4808              LDR      r0,|L4.96|
00003e  f7fffffe          BL       GPIO_ResetBits
;;;143    		IIc_Delay();
000042  f7fffffe          BL       IIc_Delay
000046  f89d0004          LDRB     r0,[sp,#4]            ;133
00004a  1c40              ADDS     r0,r0,#1              ;133
00004c  b2c0              UXTB     r0,r0                 ;133
00004e  9001              STR      r0,[sp,#4]            ;133
                  |L4.80|
000050  f89d0004          LDRB     r0,[sp,#4]            ;133
000054  2808              CMP      r0,#8                 ;133
000056  dbd8              BLT      |L4.10|
;;;144    	}
;;;145    	return value;
000058  f89d0000          LDRB     r0,[sp,#0]
;;;146    }
00005c  bd1c              POP      {r2-r4,pc}
;;;147    /**********************************************************************************************************
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      0x40020800

                          AREA ||i.IIc_SendByte||, CODE, READONLY, ALIGN=2

                  IIc_SendByte PROC
;;;92     **********************************************************************************************************/
;;;93     void IIc_SendByte(vu8 _ucByte)
000000  b501              PUSH     {r0,lr}
;;;94     {
000002  b082              SUB      sp,sp,#8
;;;95     	vu8 i;
;;;96     
;;;97     	/* 发送一个8位数据 */
;;;98     	for (i = 0; i < 8; i++)
000004  2000              MOVS     r0,#0
000006  9001              STR      r0,[sp,#4]
000008  e032              B        |L5.112|
                  |L5.10|
;;;99     	{		
;;;100    		if (_ucByte & 0x80)
00000a  f89d0008          LDRB     r0,[sp,#8]
00000e  f0000080          AND      r0,r0,#0x80
000012  b128              CBZ      r0,|L5.32|
;;;101    		{
;;;102    			TM1650_SDA_1();
000014  f44f7180          MOV      r1,#0x100
000018  4818              LDR      r0,|L5.124|
00001a  f7fffffe          BL       GPIO_SetBits
00001e  e004              B        |L5.42|
                  |L5.32|
;;;103    		}
;;;104    		else
;;;105    		{
;;;106    			TM1650_SDA_0();
000020  f44f7180          MOV      r1,#0x100
000024  4815              LDR      r0,|L5.124|
000026  f7fffffe          BL       GPIO_ResetBits
                  |L5.42|
;;;107    		}
;;;108    		IIc_Delay();
00002a  f7fffffe          BL       IIc_Delay
;;;109    		TM1650_SCL_1();
00002e  f44f7100          MOV      r1,#0x200
000032  4812              LDR      r0,|L5.124|
000034  f7fffffe          BL       GPIO_SetBits
;;;110    		IIc_Delay();	
000038  f7fffffe          BL       IIc_Delay
;;;111    		TM1650_SCL_0();
00003c  f44f7100          MOV      r1,#0x200
000040  480e              LDR      r0,|L5.124|
000042  f7fffffe          BL       GPIO_ResetBits
;;;112    		if (i == 7)
000046  f89d0004          LDRB     r0,[sp,#4]
00004a  2807              CMP      r0,#7
00004c  d104              BNE      |L5.88|
;;;113    		{
;;;114    			 TM1650_SDA_1(); // 置高
00004e  f44f7180          MOV      r1,#0x100
000052  480a              LDR      r0,|L5.124|
000054  f7fffffe          BL       GPIO_SetBits
                  |L5.88|
;;;115    		}
;;;116    		_ucByte <<= 1;	/* 先送高位 */
000058  f89d0008          LDRB     r0,[sp,#8]
00005c  0640              LSLS     r0,r0,#25
00005e  0e00              LSRS     r0,r0,#24
000060  9002              STR      r0,[sp,#8]
;;;117    		IIc_Delay();
000062  f7fffffe          BL       IIc_Delay
000066  f89d0004          LDRB     r0,[sp,#4]            ;98
00006a  1c40              ADDS     r0,r0,#1              ;98
00006c  b2c0              UXTB     r0,r0                 ;98
00006e  9001              STR      r0,[sp,#4]            ;98
                  |L5.112|
000070  f89d0004          LDRB     r0,[sp,#4]            ;98
000074  2808              CMP      r0,#8                 ;98
000076  dbc8              BLT      |L5.10|
;;;118    	}
;;;119    }
000078  bd0e              POP      {r1-r3,pc}
;;;120    /**********************************************************************************************************
                          ENDP

00007a  0000              DCW      0x0000
                  |L5.124|
                          DCD      0x40020800

                          AREA ||i.IIc_Start||, CODE, READONLY, ALIGN=2

                  IIc_Start PROC
;;;61     **********************************************************************************************************/
;;;62     void IIc_Start(void)
000000  b510              PUSH     {r4,lr}
;;;63     {
;;;64     	/* 启动IIC */
;;;65     	TM1650_SCL_1();
000002  f44f7100          MOV      r1,#0x200
000006  480c              LDR      r0,|L6.56|
000008  f7fffffe          BL       GPIO_SetBits
;;;66     	TM1650_SDA_1();
00000c  f44f7180          MOV      r1,#0x100
000010  4809              LDR      r0,|L6.56|
000012  f7fffffe          BL       GPIO_SetBits
;;;67     	IIc_Delay();
000016  f7fffffe          BL       IIc_Delay
;;;68     	TM1650_SDA_0();
00001a  f44f7180          MOV      r1,#0x100
00001e  4806              LDR      r0,|L6.56|
000020  f7fffffe          BL       GPIO_ResetBits
;;;69     	IIc_Delay();
000024  f7fffffe          BL       IIc_Delay
;;;70     	TM1650_SCL_0();
000028  f44f7100          MOV      r1,#0x200
00002c  4802              LDR      r0,|L6.56|
00002e  f7fffffe          BL       GPIO_ResetBits
;;;71     	IIc_Delay();
000032  f7fffffe          BL       IIc_Delay
;;;72     }
000036  bd10              POP      {r4,pc}
;;;73     /**********************************************************************************************************
                          ENDP

                  |L6.56|
                          DCD      0x40020800

                          AREA ||i.IIc_Stop||, CODE, READONLY, ALIGN=2

                  IIc_Stop PROC
;;;78     **********************************************************************************************************/
;;;79     void IIc_Stop(void)
000000  b510              PUSH     {r4,lr}
;;;80     {
;;;81     	/* 发送停止位 */
;;;82     	TM1650_SDA_0();
000002  f44f7180          MOV      r1,#0x100
000006  4808              LDR      r0,|L7.40|
000008  f7fffffe          BL       GPIO_ResetBits
;;;83     	TM1650_SCL_1();
00000c  f44f7100          MOV      r1,#0x200
000010  4805              LDR      r0,|L7.40|
000012  f7fffffe          BL       GPIO_SetBits
;;;84     	IIc_Delay();
000016  f7fffffe          BL       IIc_Delay
;;;85     	TM1650_SDA_1();
00001a  f44f7180          MOV      r1,#0x100
00001e  4802              LDR      r0,|L7.40|
000020  f7fffffe          BL       GPIO_SetBits
;;;86     }
000024  bd10              POP      {r4,pc}
;;;87     /**********************************************************************************************************
                          ENDP

000026  0000              DCW      0x0000
                  |L7.40|
                          DCD      0x40020800

                          AREA ||i.IIc_WaitAck||, CODE, READONLY, ALIGN=2

                  IIc_WaitAck PROC
;;;152    **********************************************************************************************************/
;;;153    vu8 IIc_WaitAck(void)
000000  b508              PUSH     {r3,lr}
;;;154    {
;;;155    	vu8 re;
;;;156    
;;;157    	TM1650_SDA_1();	/*  */
000002  f44f7180          MOV      r1,#0x100
000006  4810              LDR      r0,|L8.72|
000008  f7fffffe          BL       GPIO_SetBits
;;;158    	IIc_Delay();
00000c  f7fffffe          BL       IIc_Delay
;;;159    	TM1650_SCL_1();	/*  */
000010  f44f7100          MOV      r1,#0x200
000014  480c              LDR      r0,|L8.72|
000016  f7fffffe          BL       GPIO_SetBits
;;;160    	IIc_Delay();
00001a  f7fffffe          BL       IIc_Delay
;;;161    	if (TM1650_SDA_READ())	/* 读取ACK */
00001e  f44f7180          MOV      r1,#0x100
000022  4809              LDR      r0,|L8.72|
000024  f7fffffe          BL       GPIO_ReadInputDataBit
000028  b110              CBZ      r0,|L8.48|
;;;162    	{
;;;163    		re = 1;
00002a  2001              MOVS     r0,#1
00002c  9000              STR      r0,[sp,#0]
00002e  e001              B        |L8.52|
                  |L8.48|
;;;164    	}
;;;165    	else
;;;166    	{
;;;167    		re = 0;
000030  2000              MOVS     r0,#0
000032  9000              STR      r0,[sp,#0]
                  |L8.52|
;;;168    	}
;;;169    	TM1650_SCL_0();
000034  f44f7100          MOV      r1,#0x200
000038  4803              LDR      r0,|L8.72|
00003a  f7fffffe          BL       GPIO_ResetBits
;;;170    	IIc_Delay();
00003e  f7fffffe          BL       IIc_Delay
;;;171    	return re;
000042  f89d0000          LDRB     r0,[sp,#0]
;;;172    }
000046  bd08              POP      {r3,pc}
;;;173    /**********************************************************************************************************
                          ENDP

                  |L8.72|
                          DCD      0x40020800

                          AREA ||i.TM1650_GPIO_INT||, CODE, READONLY, ALIGN=2

                  TM1650_GPIO_INT PROC
;;;32     **********************************************************************************************************/
;;;33     void TM1650_GPIO_INT(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;34     {
;;;35     	GPIO_InitTypeDef GPIO_InitStructure;//
;;;36     
;;;37     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);//
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;38     
;;;39     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8|GPIO_Pin_9;//
00000a  f44f7040          MOV      r0,#0x300
00000e  9000              STR      r0,[sp,#0]
;;;40     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000010  2001              MOVS     r0,#1
000012  f88d0004          STRB     r0,[sp,#4]
;;;41     	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;//开漏输出
000016  f88d0006          STRB     r0,[sp,#6]
;;;42     	GPIO_InitStructure.GPIO_Speed =GPIO_Speed_50MHz;//
00001a  2002              MOVS     r0,#2
00001c  f88d0005          STRB     r0,[sp,#5]
;;;43     	GPIO_Init(GPIOC, &GPIO_InitStructure);//
000020  4669              MOV      r1,sp
000022  4802              LDR      r0,|L9.44|
000024  f7fffffe          BL       GPIO_Init
;;;44     }
000028  bd1c              POP      {r2-r4,pc}
;;;45     /**********************************************************************************************************
                          ENDP

00002a  0000              DCW      0x0000
                  |L9.44|
                          DCD      0x40020800

                          AREA ||i.TM1650_Read_KEY||, CODE, READONLY, ALIGN=1

                  TM1650_Read_KEY PROC
;;;210    **********************************************************************************************************/
;;;211    vu8 TM1650_Read_KEY(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;212    {
;;;213    	vu8 ucAck;
;;;214    	vu8 key;
;;;215    
;;;216    	IIc_Start();		/* 开始*/
000002  f7fffffe          BL       IIc_Start
;;;217    
;;;218    	/* 发送地址 */
;;;219    	IIc_SendByte(0x49);//读按键命令
000006  2049              MOVS     r0,#0x49
000008  f7fffffe          BL       IIc_SendByte
;;;220    	ucAck = IIc_WaitAck();	/* 等待ACK*/
00000c  f7fffffe          BL       IIc_WaitAck
000010  9001              STR      r0,[sp,#4]
;;;221    	IIc_Delay();
000012  f7fffffe          BL       IIc_Delay
;;;222    	key=IIc_ReadByte();//读取键值
000016  f7fffffe          BL       IIc_ReadByte
00001a  9000              STR      r0,[sp,#0]
;;;223    	IIc_Stop();			/* 读完停止 */
00001c  f7fffffe          BL       IIc_Stop
;;;224    
;;;225    	return key;
000020  f89d0000          LDRB     r0,[sp,#0]
;;;226    }
000024  bd1c              POP      {r2-r4,pc}
;;;227    /**********************************************************************************************************
                          ENDP


                          AREA ||i.TM1650_SET_LED||, CODE, READONLY, ALIGN=1

                  TM1650_SET_LED PROC
;;;232    **********************************************************************************************************/
;;;233    void TM1650_SET_LED(vu8 addr,vu8 dat)
000000  b503              PUSH     {r0,r1,lr}
;;;234    {
000002  b081              SUB      sp,sp,#4
;;;235    	vu8 ucAck;
;;;236    	IIc_Start();		/* 开始*/
000004  f7fffffe          BL       IIc_Start
;;;237    	IIc_SendByte(addr);
000008  f89d0004          LDRB     r0,[sp,#4]
00000c  f7fffffe          BL       IIc_SendByte
;;;238    	ucAck = IIc_WaitAck();	/* 等待ACK*/
000010  f7fffffe          BL       IIc_WaitAck
000014  9000              STR      r0,[sp,#0]
;;;239    	IIc_SendByte(dat);
000016  f89d0008          LDRB     r0,[sp,#8]
00001a  f7fffffe          BL       IIc_SendByte
;;;240    	ucAck = IIc_WaitAck();	/* 等待ACK*/
00001e  f7fffffe          BL       IIc_WaitAck
000022  9000              STR      r0,[sp,#0]
;;;241    	IIc_Stop();			/* 读完停止 */
000024  f7fffffe          BL       IIc_Stop
;;;242    }
000028  bd0e              POP      {r1-r3,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\drive\\TM1650.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_TM1650_c_840ba131____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_TM1650_c_840ba131____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_TM1650_c_840ba131____REVSH|
#line 144
|__asm___8_TM1650_c_840ba131____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
