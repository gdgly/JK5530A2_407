; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\syssetting_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\syssetting_face.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\syssetting_face.crf --no_multibyte_chars ..\APP\syssetting_Face.c]
                          THUMB

                          AREA ||i.Box_Data_Location||, CODE, READONLY, ALIGN=2

                  Box_Data_Location PROC
;;;523    //根据 值/id 找位置
;;;524    int Box_Data_Location( int _k_d, char _k_v[], vu8 _type)
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;525    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;526    	int _i = 0, _loc = 0;
000006  2400              MOVS     r4,#0
000008  2700              MOVS     r7,#0
;;;527    	
;;;528    	for( _i = 0; _i < sizeof( BoxData_List ) / sizeof( BoxData_List[0]); _i++ )
00000a  bf00              NOP      
00000c  e020              B        |L1.80|
                  |L1.14|
;;;529    	{
;;;530    		if( BoxData_List[_i].d_ID == _k_d )
00000e  eb0400c4          ADD      r0,r4,r4,LSL #3
000012  4912              LDR      r1,|L1.92|
000014  f8510030          LDR      r0,[r1,r0,LSL #3]
000018  42a8              CMP      r0,r5
00001a  d118              BNE      |L1.78|
;;;531    		{
;;;532    			if( ( _type == 0 && strcmp( _k_v, BoxData_List[_i].f_EName ) == 0 ) || ( _type == 1 && _i == atoi(_k_v) ) )
00001c  f89d0008          LDRB     r0,[sp,#8]
000020  b950              CBNZ     r0,|L1.56|
000022  eb0400c4          ADD      r0,r4,r4,LSL #3
000026  460a              MOV      r2,r1
000028  eb0200c0          ADD      r0,r2,r0,LSL #3
00002c  f1000120          ADD      r1,r0,#0x20
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       strcmp
000036  b140              CBZ      r0,|L1.74|
                  |L1.56|
000038  f89d0008          LDRB     r0,[sp,#8]
00003c  2801              CMP      r0,#1
00003e  d106              BNE      |L1.78|
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       atoi
000046  42a0              CMP      r0,r4
000048  d101              BNE      |L1.78|
                  |L1.74|
;;;533    			{	
;;;534    				_loc = _i;
00004a  4627              MOV      r7,r4
;;;535    				
;;;536    				break;
00004c  e002              B        |L1.84|
                  |L1.78|
00004e  1c64              ADDS     r4,r4,#1              ;528
                  |L1.80|
000050  2c0d              CMP      r4,#0xd               ;528
000052  d3dc              BCC      |L1.14|
                  |L1.84|
000054  bf00              NOP      
;;;537    			}
;;;538    		}			
;;;539    	}
;;;540    	
;;;541    	return _loc;
000056  4638              MOV      r0,r7
;;;542    	
;;;543    }
000058  bdfe              POP      {r1-r7,pc}
;;;544    
                          ENDP

00005a  0000              DCW      0x0000
                  |L1.92|
                          DCD      BoxData_List

                          AREA ||i.CreateSysSetting||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  CreateSysSetting PROC
;;;219    WM_HWIN CreateSysSetting(void);
;;;220    WM_HWIN CreateSysSetting(void){
000000  b5fe              PUSH     {r1-r7,lr}
;;;221    	
;;;222    	int dlen = 0, _n = 0;
000002  2600              MOVS     r6,#0
000004  2500              MOVS     r5,#0
;;;223    	char _t[1];
;;;224    	int *key_loc;
;;;225    	
;;;226    	if( FLAG_FIRSTWIN[5] ){
000006  48bf              LDR      r0,|L2.772|
000008  7940              LDRB     r0,[r0,#5]  ; FLAG_FIRSTWIN
00000a  2800              CMP      r0,#0
00000c  d07e              BEQ      |L2.268|
;;;227    		
;;;228    		if( CLists.SYS_Comparator 	 	!=	0xffffff ){	
00000e  48be              LDR      r0,|L2.776|
000010  f89000f9          LDRB     r0,[r0,#0xf9]  ; CLists
000014  f06f417f          MVN      r1,#0xff000000
000018  4288              CMP      r0,r1
00001a  d019              BEQ      |L2.80|
;;;229    			
;;;230    			
;;;231    			if( CLists.SYS_Comparator  == 1 ){
00001c  48ba              LDR      r0,|L2.776|
00001e  f89000f9          LDRB     r0,[r0,#0xf9]  ; CLists
000022  2801              CMP      r0,#1
000024  d109              BNE      |L2.58|
;;;232    				
;;;233    				strcpy( SGhListSYS[1].f_SName, BoxData_List[0].f_SName ); 		
000026  49b9              LDR      r1,|L2.780|
000028  48b9              LDR      r0,|L2.784|
00002a  f7fffffe          BL       strcpy
;;;234    				strcpy( SGhListSYS[1].f_EName, BoxData_List[0].f_SName ); 		
00002e  49b7              LDR      r1,|L2.780|
000030  48b7              LDR      r0,|L2.784|
000032  3014              ADDS     r0,r0,#0x14
000034  f7fffffe          BL       strcpy
000038  e00a              B        |L2.80|
                  |L2.58|
;;;235    				
;;;236    			}else{
;;;237    				
;;;238    				strcpy( SGhListSYS[1].f_SName, BoxData_List[1].f_SName ); 		
00003a  49b4              LDR      r1,|L2.780|
00003c  3148              ADDS     r1,r1,#0x48
00003e  48b4              LDR      r0,|L2.784|
000040  f7fffffe          BL       strcpy
;;;239    				strcpy( SGhListSYS[1].f_EName, BoxData_List[1].f_EName ); 
000044  49b1              LDR      r1,|L2.780|
000046  315c              ADDS     r1,r1,#0x5c
000048  48b1              LDR      r0,|L2.784|
00004a  3014              ADDS     r0,r0,#0x14
00004c  f7fffffe          BL       strcpy
                  |L2.80|
;;;240    			}
;;;241    				
;;;242    		}
;;;243    		
;;;244    		if( CLists.SYS_Overflow 	  	!=	0xffffff ){	
000050  48ad              LDR      r0,|L2.776|
000052  f89000fa          LDRB     r0,[r0,#0xfa]  ; CLists
000056  f06f417f          MVN      r1,#0xff000000
00005a  4288              CMP      r0,r1
00005c  d01d              BEQ      |L2.154|
;;;245    		
;;;246    			if( CLists.SYS_Overflow == 1 ) {
00005e  48aa              LDR      r0,|L2.776|
000060  f89000fa          LDRB     r0,[r0,#0xfa]  ; CLists
000064  2801              CMP      r0,#1
000066  d10c              BNE      |L2.130|
;;;247    				
;;;248    				strcpy( SGhListSYS[3].f_SName , BoxData_List[2].f_SName  ); 		
000068  49a8              LDR      r1,|L2.780|
00006a  3190              ADDS     r1,r1,#0x90
00006c  48a8              LDR      r0,|L2.784|
00006e  3090              ADDS     r0,r0,#0x90
000070  f7fffffe          BL       strcpy
;;;249    				strcpy( SGhListSYS[3].f_EName , BoxData_List[2].f_EName  ); 	
000074  49a5              LDR      r1,|L2.780|
000076  31a4              ADDS     r1,r1,#0xa4
000078  48a5              LDR      r0,|L2.784|
00007a  30a4              ADDS     r0,r0,#0xa4
00007c  f7fffffe          BL       strcpy
000080  e00b              B        |L2.154|
                  |L2.130|
;;;250    				
;;;251    			}else{
;;;252    				
;;;253    				strcpy( SGhListSYS[3].f_SName , BoxData_List[3].f_SName  ); 		
000082  49a2              LDR      r1,|L2.780|
000084  31d8              ADDS     r1,r1,#0xd8
000086  48a2              LDR      r0,|L2.784|
000088  3090              ADDS     r0,r0,#0x90
00008a  f7fffffe          BL       strcpy
;;;254    				strcpy( SGhListSYS[3].f_EName , BoxData_List[3].f_EName ); 
00008e  499f              LDR      r1,|L2.780|
000090  31ec              ADDS     r1,r1,#0xec
000092  489f              LDR      r0,|L2.784|
000094  30a4              ADDS     r0,r0,#0xa4
000096  f7fffffe          BL       strcpy
                  |L2.154|
;;;255    			}
;;;256    						
;;;257    		}
;;;258    		
;;;259    		if( CLists.SYS_Beep 	  		!=	0xffffff ){	
00009a  489b              LDR      r0,|L2.776|
00009c  f89000fb          LDRB     r0,[r0,#0xfb]  ; CLists
0000a0  f06f417f          MVN      r1,#0xff000000
0000a4  4288              CMP      r0,r1
0000a6  d01a              BEQ      |L2.222|
;;;260    		
;;;261    			if( CLists.SYS_Beep == 1 ) {
0000a8  4897              LDR      r0,|L2.776|
0000aa  f89000fb          LDRB     r0,[r0,#0xfb]  ; CLists
0000ae  2801              CMP      r0,#1
0000b0  d10a              BNE      |L2.200|
;;;262    				
;;;263    				strcpy( SGhListSYS[5].f_SName , BoxData_List[4].f_SName ); 		
0000b2  4998              LDR      r1,|L2.788|
0000b4  4898              LDR      r0,|L2.792|
0000b6  f7fffffe          BL       strcpy
;;;264    				strcpy( SGhListSYS[5].f_EName , BoxData_List[4].f_EName  ); 		
0000ba  4996              LDR      r1,|L2.788|
0000bc  3114              ADDS     r1,r1,#0x14
0000be  4896              LDR      r0,|L2.792|
0000c0  3014              ADDS     r0,r0,#0x14
0000c2  f7fffffe          BL       strcpy
0000c6  e00a              B        |L2.222|
                  |L2.200|
;;;265    			}else{
;;;266    				
;;;267    				strcpy( SGhListSYS[5].f_SName , BoxData_List[5].f_SName ); 		
0000c8  4992              LDR      r1,|L2.788|
0000ca  3148              ADDS     r1,r1,#0x48
0000cc  4892              LDR      r0,|L2.792|
0000ce  f7fffffe          BL       strcpy
;;;268    				strcpy( SGhListSYS[5].f_EName , BoxData_List[5].f_EName  ); 		
0000d2  4990              LDR      r1,|L2.788|
0000d4  315c              ADDS     r1,r1,#0x5c
0000d6  4890              LDR      r0,|L2.792|
0000d8  3014              ADDS     r0,r0,#0x14
0000da  f7fffffe          BL       strcpy
                  |L2.222|
;;;269    				
;;;270    			}
;;;271    				
;;;272    		}
;;;273    		
;;;274    		if( CLists.SYS_UL_V 	  		!=	0xffffff ){	
0000de  488a              LDR      r0,|L2.776|
0000e0  f8d000fc          LDR      r0,[r0,#0xfc]  ; CLists
0000e4  f06f417f          MVN      r1,#0xff000000
0000e8  4288              CMP      r0,r1
0000ea  d013              BEQ      |L2.276|
;;;275    		
;;;276    			strcpy( SGhListSYS[7].f_SName , Read_Data_Parse(4) ); 		
0000ec  2004              MOVS     r0,#4
0000ee  f7fffffe          BL       Read_Data_Parse
0000f2  4607              MOV      r7,r0
0000f4  4639              MOV      r1,r7
0000f6  4888              LDR      r0,|L2.792|
0000f8  3090              ADDS     r0,r0,#0x90
0000fa  f7fffffe          BL       strcpy
;;;277    			strcpy( SGhListSYS[7].f_EName , Read_Data_Parse(4) ); 			
0000fe  2004              MOVS     r0,#4
000100  f7fffffe          BL       Read_Data_Parse
000104  4607              MOV      r7,r0
000106  4639              MOV      r1,r7
000108  4883              LDR      r0,|L2.792|
00010a  e000              B        |L2.270|
                  |L2.268|
00010c  e0ce              B        |L2.684|
                  |L2.270|
00010e  30a4              ADDS     r0,r0,#0xa4
000110  f7fffffe          BL       strcpy
                  |L2.276|
;;;278    		}
;;;279    		
;;;280    		if( CLists.SYS_LL_V 	  	  	!=	0xffffff ){	
000114  487c              LDR      r0,|L2.776|
000116  f8d00100          LDR      r0,[r0,#0x100]  ; CLists
00011a  f06f417f          MVN      r1,#0xff000000
00011e  4288              CMP      r0,r1
000120  d010              BEQ      |L2.324|
;;;281    		
;;;282    			strcpy( SGhListSYS[10].f_SName , Read_Data_Parse(5) ); 		
000122  2005              MOVS     r0,#5
000124  f7fffffe          BL       Read_Data_Parse
000128  4607              MOV      r7,r0
00012a  4639              MOV      r1,r7
00012c  487b              LDR      r0,|L2.796|
00012e  f7fffffe          BL       strcpy
;;;283    			strcpy( SGhListSYS[10].f_EName , Read_Data_Parse(5) ); 			
000132  2005              MOVS     r0,#5
000134  f7fffffe          BL       Read_Data_Parse
000138  4607              MOV      r7,r0
00013a  4639              MOV      r1,r7
00013c  4877              LDR      r0,|L2.796|
00013e  3014              ADDS     r0,r0,#0x14
000140  f7fffffe          BL       strcpy
                  |L2.324|
;;;284    		}
;;;285    		
;;;286    		if( CLists.SYS_UL_II 	  		!=	0xffffff ){	
000144  4870              LDR      r0,|L2.776|
000146  f8b00104          LDRH     r0,[r0,#0x104]  ; CLists
00014a  f06f417f          MVN      r1,#0xff000000
00014e  4288              CMP      r0,r1
000150  d011              BEQ      |L2.374|
;;;287    		
;;;288    			strcpy( SGhListSYS[13].f_SName , Read_Data_Parse(6) ); 		
000152  2006              MOVS     r0,#6
000154  f7fffffe          BL       Read_Data_Parse
000158  4607              MOV      r7,r0
00015a  4639              MOV      r1,r7
00015c  486f              LDR      r0,|L2.796|
00015e  30d8              ADDS     r0,r0,#0xd8
000160  f7fffffe          BL       strcpy
;;;289    			strcpy( SGhListSYS[13].f_EName , Read_Data_Parse(6) ); 			
000164  2006              MOVS     r0,#6
000166  f7fffffe          BL       Read_Data_Parse
00016a  4607              MOV      r7,r0
00016c  4639              MOV      r1,r7
00016e  486b              LDR      r0,|L2.796|
000170  30ec              ADDS     r0,r0,#0xec
000172  f7fffffe          BL       strcpy
                  |L2.374|
;;;290    		}
;;;291    		
;;;292    		if( CLists.SYS_LL_IR 	  		!=	0xffffff ){	
000176  4864              LDR      r0,|L2.776|
000178  f8b00106          LDRH     r0,[r0,#0x106]  ; CLists
00017c  f06f417f          MVN      r1,#0xff000000
000180  4288              CMP      r0,r1
000182  d010              BEQ      |L2.422|
;;;293    		
;;;294    			strcpy( SGhListSYS[17].f_SName , Read_Data_Parse(7) ); 		
000184  2007              MOVS     r0,#7
000186  f7fffffe          BL       Read_Data_Parse
00018a  4607              MOV      r7,r0
00018c  4639              MOV      r1,r7
00018e  4864              LDR      r0,|L2.800|
000190  f7fffffe          BL       strcpy
;;;295    			strcpy( SGhListSYS[17].f_EName , Read_Data_Parse(7) ); 			
000194  2007              MOVS     r0,#7
000196  f7fffffe          BL       Read_Data_Parse
00019a  4607              MOV      r7,r0
00019c  4639              MOV      r1,r7
00019e  4860              LDR      r0,|L2.800|
0001a0  3014              ADDS     r0,r0,#0x14
0001a2  f7fffffe          BL       strcpy
                  |L2.422|
;;;296    		}
;;;297    		
;;;298    		if( CLists.SYS_UL_Overflow 	  	!=	0xffffff ){	
0001a6  4858              LDR      r0,|L2.776|
0001a8  f8b00108          LDRH     r0,[r0,#0x108]  ; CLists
0001ac  f06f417f          MVN      r1,#0xff000000
0001b0  4288              CMP      r0,r1
0001b2  d010              BEQ      |L2.470|
;;;299    		
;;;300    			strcpy( SGhListSYS[21].f_SName , Read_Data_Parse(8) ); 		
0001b4  2008              MOVS     r0,#8
0001b6  f7fffffe          BL       Read_Data_Parse
0001ba  4607              MOV      r7,r0
0001bc  4639              MOV      r1,r7
0001be  4859              LDR      r0,|L2.804|
0001c0  f7fffffe          BL       strcpy
;;;301    			strcpy( SGhListSYS[21].f_EName , Read_Data_Parse(8) ); 			
0001c4  2008              MOVS     r0,#8
0001c6  f7fffffe          BL       Read_Data_Parse
0001ca  4607              MOV      r7,r0
0001cc  4639              MOV      r1,r7
0001ce  4855              LDR      r0,|L2.804|
0001d0  3014              ADDS     r0,r0,#0x14
0001d2  f7fffffe          BL       strcpy
                  |L2.470|
;;;302    		}
;;;303    		
;;;304    		if( CLists.SYS_LL_Overflow 	  	!=	0xffffff ){	
0001d6  484c              LDR      r0,|L2.776|
0001d8  f8b0010a          LDRH     r0,[r0,#0x10a]  ; CLists
0001dc  f06f417f          MVN      r1,#0xff000000
0001e0  4288              CMP      r0,r1
0001e2  d011              BEQ      |L2.520|
;;;305    		
;;;306    			strcpy( SGhListSYS[24].f_SName , Read_Data_Parse(9) ); 		
0001e4  2009              MOVS     r0,#9
0001e6  f7fffffe          BL       Read_Data_Parse
0001ea  4607              MOV      r7,r0
0001ec  4639              MOV      r1,r7
0001ee  484d              LDR      r0,|L2.804|
0001f0  30d8              ADDS     r0,r0,#0xd8
0001f2  f7fffffe          BL       strcpy
;;;307    			strcpy( SGhListSYS[24].f_EName , Read_Data_Parse(9) ); 			
0001f6  2009              MOVS     r0,#9
0001f8  f7fffffe          BL       Read_Data_Parse
0001fc  4607              MOV      r7,r0
0001fe  4639              MOV      r1,r7
000200  4848              LDR      r0,|L2.804|
000202  30ec              ADDS     r0,r0,#0xec
000204  f7fffffe          BL       strcpy
                  |L2.520|
;;;308    		}
;;;309    		
;;;310    		if( CLists.SYS_BatteryType 	 	!=	0xffffff ){	
000208  483f              LDR      r0,|L2.776|
00020a  f890010c          LDRB     r0,[r0,#0x10c]  ; CLists
00020e  f06f417f          MVN      r1,#0xff000000
000212  4288              CMP      r0,r1
000214  d023              BEQ      |L2.606|
;;;311    		
;;;312    			sprintf(_t, "%d", CLists.SYS_BatteryType);
000216  483c              LDR      r0,|L2.776|
000218  f890210c          LDRB     r2,[r0,#0x10c]  ; CLists
00021c  a142              ADR      r1,|L2.808|
00021e  a802              ADD      r0,sp,#8
000220  f7fffffe          BL       __2sprintf
;;;313    			
;;;314    			_n = Box_Data_Location( 25, _t, 1);
000224  2201              MOVS     r2,#1
000226  a902              ADD      r1,sp,#8
000228  2019              MOVS     r0,#0x19
00022a  f7fffffe          BL       Box_Data_Location
00022e  4605              MOV      r5,r0
;;;315    			
;;;316     			strcpy( SGhListSYS[27].f_SName , BoxData_List[_n].f_SName); 		
000230  eb0500c5          ADD      r0,r5,r5,LSL #3
000234  4a35              LDR      r2,|L2.780|
000236  3a0c              SUBS     r2,r2,#0xc
000238  eb0200c0          ADD      r0,r2,r0,LSL #3
00023c  f100010c          ADD      r1,r0,#0xc
000240  483a              LDR      r0,|L2.812|
000242  f7fffffe          BL       strcpy
;;;317     			strcpy( SGhListSYS[27].f_EName , BoxData_List[_n].f_EName); 	
000246  eb0500c5          ADD      r0,r5,r5,LSL #3
00024a  4a30              LDR      r2,|L2.780|
00024c  3a0c              SUBS     r2,r2,#0xc
00024e  eb0200c0          ADD      r0,r2,r0,LSL #3
000252  f1000120          ADD      r1,r0,#0x20
000256  4835              LDR      r0,|L2.812|
000258  3014              ADDS     r0,r0,#0x14
00025a  f7fffffe          BL       strcpy
                  |L2.606|
;;;318    		}
;;;319    		
;;;320    		if( CLists.SYS_LANUGAGE 	  	!=	0xffffff ){	
00025e  482a              LDR      r0,|L2.776|
000260  f890010d          LDRB     r0,[r0,#0x10d]  ; CLists
000264  f06f417f          MVN      r1,#0xff000000
000268  4288              CMP      r0,r1
00026a  d01c              BEQ      |L2.678|
;;;321    		
;;;322    			if( CLists.SYS_LANUGAGE == 1 ){
00026c  4826              LDR      r0,|L2.776|
00026e  f890010d          LDRB     r0,[r0,#0x10d]  ; CLists
000272  2801              CMP      r0,#1
000274  d10b              BNE      |L2.654|
;;;323    				
;;;324    				strcpy( SGhListSYS[29].f_SName ,  BoxData_List[12].f_SName); 		
000276  492e              LDR      r1,|L2.816|
000278  482c              LDR      r0,|L2.812|
00027a  3090              ADDS     r0,r0,#0x90
00027c  f7fffffe          BL       strcpy
;;;325    				strcpy( SGhListSYS[29].f_EName ,  BoxData_List[12].f_EName); 		
000280  492b              LDR      r1,|L2.816|
000282  3114              ADDS     r1,r1,#0x14
000284  4829              LDR      r0,|L2.812|
000286  30a4              ADDS     r0,r0,#0xa4
000288  f7fffffe          BL       strcpy
00028c  e00b              B        |L2.678|
                  |L2.654|
;;;326    				
;;;327    			}else{
;;;328    				
;;;329    				strcpy( SGhListSYS[29].f_SName ,  BoxData_List[11].f_SName); 		
00028e  4928              LDR      r1,|L2.816|
000290  3948              SUBS     r1,r1,#0x48
000292  4826              LDR      r0,|L2.812|
000294  3090              ADDS     r0,r0,#0x90
000296  f7fffffe          BL       strcpy
;;;330    				strcpy( SGhListSYS[29].f_EName ,  BoxData_List[11].f_EName); 
00029a  4925              LDR      r1,|L2.816|
00029c  3934              SUBS     r1,r1,#0x34
00029e  4823              LDR      r0,|L2.812|
0002a0  30a4              ADDS     r0,r0,#0xa4
0002a2  f7fffffe          BL       strcpy
                  |L2.678|
;;;331    				
;;;332    			}		
;;;333    		}
;;;334    		FLAG_FIRSTWIN[5] = 0;	
0002a6  2000              MOVS     r0,#0
0002a8  4916              LDR      r1,|L2.772|
0002aa  7148              STRB     r0,[r1,#5]
                  |L2.684|
;;;335    	} 	
;;;336    	
;;;337    	
;;;338    	dlen = sizeof(SGhListSYS) / sizeof(SGhListSYS[0]);
0002ac  261e              MOVS     r6,#0x1e
;;;339    	
;;;340    	key_loc = get_id_index( SGhListSYS, dlen);
0002ae  4631              MOV      r1,r6
0002b0  4817              LDR      r0,|L2.784|
0002b2  3854              SUBS     r0,r0,#0x54
0002b4  f7fffffe          BL       get_id_index
0002b8  4604              MOV      r4,r0
;;;341    	
;;;342    	memset( displayStr, '\0', sizeof(displayStr));
0002ba  2114              MOVS     r1,#0x14
0002bc  481d              LDR      r0,|L2.820|
0002be  f7fffffe          BL       __aeabi_memclr
;;;343    	
;;;344    	if( *key_loc != 2 ){
0002c2  6820              LDR      r0,[r4,#0]
0002c4  2802              CMP      r0,#2
0002c6  d00b              BEQ      |L2.736|
;;;345    
;;;346    		SGhListSYS[*key_loc].focusType = 0;	
0002c8  2000              MOVS     r0,#0
0002ca  6821              LDR      r1,[r4,#0]
0002cc  eb0101c1          ADD      r1,r1,r1,LSL #3
0002d0  4a0f              LDR      r2,|L2.784|
0002d2  3a54              SUBS     r2,r2,#0x54
0002d4  eb0201c1          ADD      r1,r2,r1,LSL #3
0002d8  6048              STR      r0,[r1,#4]
;;;347    		
;;;348    		SGhListSYS[1].focusType = 1;
0002da  2101              MOVS     r1,#1
0002dc  4610              MOV      r0,r2
0002de  64c1              STR      r1,[r0,#0x4c]
                  |L2.736|
;;;349    	}
;;;350    	
;;;351    	sysSettingWin = GUI_CreateDialogBox(_aDialogCreatesys, GUI_COUNTOF(_aDialogCreatesys), _cbDialogsys, WM_HBKWIN, 0, 0);
0002e0  f7fffffe          BL       WM_GetDesktopWindow
0002e4  4607              MOV      r7,r0
0002e6  2000              MOVS     r0,#0
0002e8  9000              STR      r0,[sp,#0]
0002ea  463b              MOV      r3,r7
0002ec  4a12              LDR      r2,|L2.824|
0002ee  2106              MOVS     r1,#6
0002f0  9001              STR      r0,[sp,#4]
0002f2  4812              LDR      r0,|L2.828|
0002f4  f7fffffe          BL       GUI_CreateDialogBox
0002f8  4911              LDR      r1,|L2.832|
0002fa  6008              STR      r0,[r1,#0]  ; sysSettingWin
;;;352    	
;;;353    	return sysSettingWin;	
0002fc  4608              MOV      r0,r1
0002fe  6800              LDR      r0,[r0,#0]  ; sysSettingWin
;;;354    }
000300  bdfe              POP      {r1-r7,pc}
;;;355    
                          ENDP

000302  0000              DCW      0x0000
                  |L2.772|
                          DCD      FLAG_FIRSTWIN
                  |L2.776|
                          DCD      CLists
                  |L2.780|
                          DCD      BoxData_List+0xc
                  |L2.784|
                          DCD      SGhListSYS+0x54
                  |L2.788|
                          DCD      BoxData_List+0x12c
                  |L2.792|
                          DCD      SGhListSYS+0x174
                  |L2.796|
                          DCD      SGhListSYS+0x2dc
                  |L2.800|
                          DCD      SGhListSYS+0x4d4
                  |L2.804|
                          DCD      SGhListSYS+0x5f4
                  |L2.808|
000328  256400            DCB      "%d",0
00032b  00                DCB      0
                  |L2.812|
                          DCD      SGhListSYS+0x7a4
                  |L2.816|
                          DCD      BoxData_List+0x36c
                  |L2.820|
                          DCD      displayStr
                  |L2.824|
                          DCD      _cbDialogsys
                  |L2.828|
                          DCD      _aDialogCreatesys
                  |L2.832|
                          DCD      sysSettingWin

                          AREA ||i.KEY_DOWN_SYSSET||, CODE, READONLY, ALIGN=2

                  KEY_DOWN_SYSSET PROC
;;;356    
;;;357    void KEY_DOWN_SYSSET( int handle){
000000  e92d5ffc          PUSH     {r2-r12,lr}
000004  4607              MOV      r7,r0
;;;358    	
;;;359    	int i,temp = 0,t = 0;
000006  2000              MOVS     r0,#0
000008  9001              STR      r0,[sp,#4]
00000a  4680              MOV      r8,r0
;;;360    	
;;;361    	int *key_loc, *sumCorres;
;;;362    	
;;;363    	int get_nextid = 0, nowid = 0, nowid_index = 0, dlen = 0;  
00000c  4682              MOV      r10,r0
00000e  2600              MOVS     r6,#0
000010  4683              MOV      r11,r0
000012  9000              STR      r0,[sp,#0]
;;;364    	
;;;365    	dlen = sizeof(SGhListSYS) / sizeof(SGhListSYS[0]);
000014  201e              MOVS     r0,#0x1e
000016  9000              STR      r0,[sp,#0]
;;;366    	
;;;367    	key_loc = get_id_index( SGhListSYS, dlen);
000018  484c              LDR      r0,|L3.332|
00001a  9900              LDR      r1,[sp,#0]
00001c  f7fffffe          BL       get_id_index
000020  4681              MOV      r9,r0
;;;368    	
;;;369    	nowid = *key_loc;
000022  f8d96000          LDR      r6,[r9,#0]
;;;370    	
;;;371    	nowid_index = *(key_loc + 1);
000026  f8d9b004          LDR      r11,[r9,#4]
;;;372    	
;;;373    	if( nowid == 0x194 )
00002a  f5b67fca          CMP      r6,#0x194
00002e  d103              BNE      |L3.56|
;;;374    			
;;;375    		SGhListSYS[1].focusType = 1;
000030  2101              MOVS     r1,#1
000032  4846              LDR      r0,|L3.332|
000034  64c1              STR      r1,[r0,#0x4c]
000036  e082              B        |L3.318|
                  |L3.56|
;;;376    	else
;;;377    	{	
;;;378    	
;;;379    		if( FLAG_INPUTAUTH == 0)    //不可输入状态  
000038  4845              LDR      r0,|L3.336|
00003a  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
00003c  bb98              CBNZ     r0,|L3.166|
;;;380    		{	
;;;381    			get_nextid = get_nextindex( nowid, WINST_id_DataLists, handle);
00003e  463a              MOV      r2,r7
000040  4944              LDR      r1,|L3.340|
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       get_nextindex
000048  4682              MOV      r10,r0
;;;382    			
;;;383    			if( get_nextid != 0xFF )
00004a  f1ba0fff          CMP      r10,#0xff
00004e  d076              BEQ      |L3.318|
;;;384    			{
;;;385    				SGhListSYS[nowid_index].focusType = 0;	
000050  2000              MOVS     r0,#0
000052  eb0b01cb          ADD      r1,r11,r11,LSL #3
000056  4a3d              LDR      r2,|L3.332|
000058  eb0201c1          ADD      r1,r2,r1,LSL #3
00005c  6048              STR      r0,[r1,#4]
;;;386    					
;;;387    				for	( i = 0; i < dlen; i++)
00005e  2400              MOVS     r4,#0
000060  e01d              B        |L3.158|
                  |L3.98|
;;;388    				{
;;;389    					if( SGhListSYS[i].d_ID == get_nextid && (SGhListSYS[i].t_Type == T_THref || SGhListSYS[i].t_Type == T_TLISTBOX) )
000062  eb0400c4          ADD      r0,r4,r4,LSL #3
000066  4939              LDR      r1,|L3.332|
000068  f8510030          LDR      r0,[r1,r0,LSL #3]
00006c  4550              CMP      r0,r10
00006e  d115              BNE      |L3.156|
000070  eb0400c4          ADD      r0,r4,r4,LSL #3
000074  eb0100c0          ADD      r0,r1,r0,LSL #3
000078  6880              LDR      r0,[r0,#8]
00007a  2801              CMP      r0,#1
00007c  d006              BEQ      |L3.140|
00007e  eb0400c4          ADD      r0,r4,r4,LSL #3
000082  eb0100c0          ADD      r0,r1,r0,LSL #3
000086  6880              LDR      r0,[r0,#8]
000088  2803              CMP      r0,#3
00008a  d107              BNE      |L3.156|
                  |L3.140|
;;;390    					{				
;;;391    						  SGhListSYS[i].focusType = 1;	
00008c  2001              MOVS     r0,#1
00008e  eb0401c4          ADD      r1,r4,r4,LSL #3
000092  4a2e              LDR      r2,|L3.332|
000094  eb0201c1          ADD      r1,r2,r1,LSL #3
000098  6048              STR      r0,[r1,#4]
;;;392    						  break;
00009a  e003              B        |L3.164|
                  |L3.156|
00009c  1c64              ADDS     r4,r4,#1              ;387
                  |L3.158|
00009e  9800              LDR      r0,[sp,#0]            ;387
0000a0  4284              CMP      r4,r0                 ;387
0000a2  dbde              BLT      |L3.98|
                  |L3.164|
0000a4  e04b              B        |L3.318|
                  |L3.166|
0000a6  e7ff              B        |L3.168|
                  |L3.168|
;;;393    					}
;;;394    				}	
;;;395    			}
;;;396    		}
;;;397    		else if( FLAG_INPUTAUTH == 1 )  //可输入状态
0000a8  4829              LDR      r0,|L3.336|
0000aa  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
0000ac  2801              CMP      r0,#1
0000ae  d146              BNE      |L3.318|
;;;398    		{
;;;399    			if( SGhListSYS[nowid_index].t_Type == T_TLISTBOX )   //下拉框 
0000b0  eb0b00cb          ADD      r0,r11,r11,LSL #3
0000b4  4925              LDR      r1,|L3.332|
0000b6  eb0100c0          ADD      r0,r1,r0,LSL #3
0000ba  6880              LDR      r0,[r0,#8]
0000bc  2803              CMP      r0,#3
0000be  d13e              BNE      |L3.318|
;;;400    			{
;;;401    				sumCorres = sum_box_corres( nowid );
0000c0  4630              MOV      r0,r6
0000c2  f7fffffe          BL       sum_box_corres
0000c6  4605              MOV      r5,r0
;;;402    				
;;;403    				if( *sumCorres == *(sumCorres+1) )
0000c8  e9d50100          LDRD     r0,r1,[r5,#0]
0000cc  4288              CMP      r0,r1
0000ce  d102              BNE      |L3.214|
;;;404    						
;;;405    					temp = 1;
0000d0  2001              MOVS     r0,#1
0000d2  9001              STR      r0,[sp,#4]
0000d4  e002              B        |L3.220|
                  |L3.214|
;;;406    				else
;;;407    					
;;;408    					temp = *(sumCorres+1) + 1;
0000d6  6868              LDR      r0,[r5,#4]
0000d8  1c40              ADDS     r0,r0,#1
0000da  9001              STR      r0,[sp,#4]
                  |L3.220|
;;;409    				
;;;410    				for( i = 0; i < sizeof( BoxData_List ) / sizeof( BoxData_List[0] ); i++)
0000dc  2400              MOVS     r4,#0
0000de  e02c              B        |L3.314|
                  |L3.224|
;;;411    				{		
;;;412    					if( BoxData_List[i].d_ID == nowid )
0000e0  eb0400c4          ADD      r0,r4,r4,LSL #3
0000e4  491c              LDR      r1,|L3.344|
0000e6  f8510030          LDR      r0,[r1,r0,LSL #3]
0000ea  42b0              CMP      r0,r6
0000ec  d124              BNE      |L3.312|
;;;413    					{							
;;;414    						t++;
0000ee  f1080801          ADD      r8,r8,#1
;;;415    							
;;;416    						if( BoxData_List[i].focusType == 1 ){
0000f2  eb0400c4          ADD      r0,r4,r4,LSL #3
0000f6  eb0100c0          ADD      r0,r1,r0,LSL #3
0000fa  6840              LDR      r0,[r0,#4]
0000fc  2801              CMP      r0,#1
0000fe  d10b              BNE      |L3.280|
;;;417    								
;;;418    							BoxData_List[i].focusType = 0;
000100  2000              MOVS     r0,#0
000102  eb0401c4          ADD      r1,r4,r4,LSL #3
000106  4a14              LDR      r2,|L3.344|
000108  eb0201c1          ADD      r1,r2,r1,LSL #3
00010c  6048              STR      r0,[r1,#4]
;;;419    								
;;;420    							BoxData_List[i].d_BKColor = 0x0;
00010e  eb0401c4          ADD      r1,r4,r4,LSL #3
000112  eb0201c1          ADD      r1,r2,r1,LSL #3
000116  6388              STR      r0,[r1,#0x38]
                  |L3.280|
;;;421    						}
;;;422    							
;;;423    						if( t == temp ){
000118  9801              LDR      r0,[sp,#4]
00011a  4580              CMP      r8,r0
00011c  d10c              BNE      |L3.312|
;;;424    								
;;;425    							BoxData_List[i].focusType = 1;
00011e  2001              MOVS     r0,#1
000120  eb0401c4          ADD      r1,r4,r4,LSL #3
000124  4a0c              LDR      r2,|L3.344|
000126  eb0201c1          ADD      r1,r2,r1,LSL #3
00012a  6048              STR      r0,[r1,#4]
;;;426    								
;;;427    							BoxData_List[i].d_BKColor = 0x00F0FFFF;
00012c  480b              LDR      r0,|L3.348|
00012e  eb0401c4          ADD      r1,r4,r4,LSL #3
000132  eb0201c1          ADD      r1,r2,r1,LSL #3
000136  6388              STR      r0,[r1,#0x38]
                  |L3.312|
000138  1c64              ADDS     r4,r4,#1              ;410
                  |L3.314|
00013a  2c0d              CMP      r4,#0xd               ;410
00013c  d3d0              BCC      |L3.224|
                  |L3.318|
;;;428    						}				
;;;429    					}
;;;430    				}						
;;;431    			}		
;;;432    		}	
;;;433    	}
;;;434    	WM_InvalidateWindow(sysSettingWin);	
00013e  4808              LDR      r0,|L3.352|
000140  6800              LDR      r0,[r0,#0]  ; sysSettingWin
000142  f7fffffe          BL       WM_InvalidateWindow
;;;435    }
000146  e8bd9ffc          POP      {r2-r12,pc}
;;;436     
                          ENDP

00014a  0000              DCW      0x0000
                  |L3.332|
                          DCD      SGhListSYS
                  |L3.336|
                          DCD      FLAG_INPUTAUTH
                  |L3.340|
                          DCD      WINST_id_DataLists
                  |L3.344|
                          DCD      BoxData_List
                  |L3.348|
                          DCD      0x00f0ffff
                  |L3.352|
                          DCD      sysSettingWin

                          AREA ||i.KEY_SYSSET_INPUT||, CODE, READONLY, ALIGN=2

                  KEY_SYSSET_INPUT PROC
;;;463    
;;;464    void KEY_SYSSET_INPUT(char *strx){
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;465    	
;;;466    	int *key_loc;
;;;467    	int i, dlen, flen;
;;;468    	int dot_loc = 1024;
000006  f44f6880          MOV      r8,#0x400
;;;469    	
;;;470    	dlen = sizeof( SGhListSYS ) / sizeof( SGhListSYS[0] );
00000a  271e              MOVS     r7,#0x1e
;;;471    	
;;;472    	key_loc = get_id_index( SGhListSYS, dlen);
00000c  4639              MOV      r1,r7
00000e  483c              LDR      r0,|L4.256|
000010  f7fffffe          BL       get_id_index
000014  4604              MOV      r4,r0
;;;473    	
;;;474    	if( *key_loc == 0x194 )
000016  6820              LDR      r0,[r4,#0]
000018  f5b07fca          CMP      r0,#0x194
00001c  d103              BNE      |L4.38|
;;;475    			
;;;476    		 SGhListSYS[1].focusType = 1;
00001e  2101              MOVS     r1,#1
000020  4837              LDR      r0,|L4.256|
000022  64c1              STR      r1,[r0,#0x4c]
000024  e069              B        |L4.250|
                  |L4.38|
;;;477    	else
;;;478    	{
;;;479    		if( displayStr[0] == '\0' && *strx == 0x2e ) 
000026  4837              LDR      r0,|L4.260|
000028  7800              LDRB     r0,[r0,#0]  ; displayStr
00002a  b938              CBNZ     r0,|L4.60|
00002c  7830              LDRB     r0,[r6,#0]
00002e  282e              CMP      r0,#0x2e
000030  d104              BNE      |L4.60|
;;;480    			
;;;481    			  strcat( displayStr, "0.");
000032  a135              ADR      r1,|L4.264|
000034  4833              LDR      r0,|L4.260|
000036  f7fffffe          BL       strcat
00003a  e02a              B        |L4.146|
                  |L4.60|
;;;482    		else
;;;483    		{
;;;484    			for ( i = 0; i < strlen(displayStr); i++)
00003c  2500              MOVS     r5,#0
00003e  e00d              B        |L4.92|
                  |L4.64|
;;;485    			{
;;;486    				if( displayStr[i] == 0x2e )
000040  4830              LDR      r0,|L4.260|
000042  5d40              LDRB     r0,[r0,r5]
000044  282e              CMP      r0,#0x2e
000046  d100              BNE      |L4.74|
;;;487    					
;;;488    					dot_loc = i;
000048  46a8              MOV      r8,r5
                  |L4.74|
;;;489    				
;;;490    				if( displayStr[i] == 0x2e && *strx == 0x2e )
00004a  482e              LDR      r0,|L4.260|
00004c  5d40              LDRB     r0,[r0,r5]
00004e  282e              CMP      r0,#0x2e
000050  d103              BNE      |L4.90|
000052  7830              LDRB     r0,[r6,#0]
000054  282e              CMP      r0,#0x2e
000056  d100              BNE      |L4.90|
;;;491    					
;;;492    					goto stmore_point;
000058  e04b              B        |L4.242|
                  |L4.90|
00005a  1c6d              ADDS     r5,r5,#1              ;484
                  |L4.92|
00005c  4829              LDR      r0,|L4.260|
00005e  f7fffffe          BL       strlen
000062  42a8              CMP      r0,r5                 ;484
000064  d8ec              BHI      |L4.64|
;;;493    			}
;;;494    			if( dot_loc == 1024 ){
000066  f5b86f80          CMP      r8,#0x400
00006a  d109              BNE      |L4.128|
;;;495    				
;;;496    				if( strlen(displayStr) < 4 )
00006c  4825              LDR      r0,|L4.260|
00006e  f7fffffe          BL       strlen
000072  2804              CMP      r0,#4
000074  d20d              BCS      |L4.146|
;;;497    					
;;;498    					strcat( displayStr, strx);
000076  4631              MOV      r1,r6
000078  4822              LDR      r0,|L4.260|
00007a  f7fffffe          BL       strcat
00007e  e008              B        |L4.146|
                  |L4.128|
;;;499    			}
;;;500    			else
;;;501    			{
;;;502    				if( strlen(displayStr) < 6 )
000080  4820              LDR      r0,|L4.260|
000082  f7fffffe          BL       strlen
000086  2806              CMP      r0,#6
000088  d203              BCS      |L4.146|
;;;503    					
;;;504    					strcat( displayStr, strx);
00008a  4631              MOV      r1,r6
00008c  481d              LDR      r0,|L4.260|
00008e  f7fffffe          BL       strcat
                  |L4.146|
;;;505    			}
;;;506    		}
;;;507    
;;;508    		if( SGhListSYS[*(key_loc+1)].focusType == 1 && (SGhListSYS[*(key_loc+1)].t_Type == T_THref || SGhListSYS[*(key_loc+1)].t_Type == T_TLISTBOX ))
000092  6860              LDR      r0,[r4,#4]
000094  eb0000c0          ADD      r0,r0,r0,LSL #3
000098  4919              LDR      r1,|L4.256|
00009a  eb0100c0          ADD      r0,r1,r0,LSL #3
00009e  6840              LDR      r0,[r0,#4]
0000a0  2801              CMP      r0,#1
0000a2  d125              BNE      |L4.240|
0000a4  6860              LDR      r0,[r4,#4]
0000a6  eb0000c0          ADD      r0,r0,r0,LSL #3
0000aa  eb0100c0          ADD      r0,r1,r0,LSL #3
0000ae  6880              LDR      r0,[r0,#8]
0000b0  2801              CMP      r0,#1
0000b2  d007              BEQ      |L4.196|
0000b4  6860              LDR      r0,[r4,#4]
0000b6  eb0000c0          ADD      r0,r0,r0,LSL #3
0000ba  eb0100c0          ADD      r0,r1,r0,LSL #3
0000be  6880              LDR      r0,[r0,#8]
0000c0  2803              CMP      r0,#3
0000c2  d115              BNE      |L4.240|
                  |L4.196|
;;;509    		{	
;;;510    			strcpy( SGhListSYS[*(key_loc+1)].f_SName, displayStr );	
0000c4  6861              LDR      r1,[r4,#4]
0000c6  eb0101c1          ADD      r1,r1,r1,LSL #3
0000ca  4a0d              LDR      r2,|L4.256|
0000cc  eb0201c1          ADD      r1,r2,r1,LSL #3
0000d0  f101000c          ADD      r0,r1,#0xc
0000d4  490b              LDR      r1,|L4.260|
0000d6  f7fffffe          BL       strcpy
;;;511    					 
;;;512    			strcpy( SGhListSYS[*(key_loc+1)].f_EName, displayStr );
0000da  6861              LDR      r1,[r4,#4]
0000dc  eb0101c1          ADD      r1,r1,r1,LSL #3
0000e0  4a07              LDR      r2,|L4.256|
0000e2  eb0201c1          ADD      r1,r2,r1,LSL #3
0000e6  f1010020          ADD      r0,r1,#0x20
0000ea  4906              LDR      r1,|L4.260|
0000ec  f7fffffe          BL       strcpy
                  |L4.240|
;;;513    		}	
;;;514    	stmore_point:	
0000f0  bf00              NOP      
                  |L4.242|
;;;515    		WM_InvalidateWindow(sysSettingWin);
0000f2  4806              LDR      r0,|L4.268|
0000f4  6800              LDR      r0,[r0,#0]  ; sysSettingWin
0000f6  f7fffffe          BL       WM_InvalidateWindow
                  |L4.250|
;;;516    	
;;;517    	}
;;;518    	
;;;519    	
;;;520    	
;;;521    }
0000fa  e8bd81f0          POP      {r4-r8,pc}
;;;522    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L4.256|
                          DCD      SGhListSYS
                  |L4.260|
                          DCD      displayStr
                  |L4.264|
000108  302e00            DCB      "0.",0
00010b  00                DCB      0
                  |L4.268|
                          DCD      sysSettingWin

                          AREA ||i.Sysset_delete_input||, CODE, READONLY, ALIGN=2

                  Sysset_delete_input PROC
;;;766    /*  删除  */
;;;767    void Sysset_delete_input(){
000000  b570              PUSH     {r4-r6,lr}
;;;768    	
;;;769    	int dlen = 0;
000002  2500              MOVS     r5,#0
;;;770    	
;;;771    	int *key_loc;
;;;772    
;;;773    	if( FLAG_INPUTAUTH  ){	
000004  4827              LDR      r0,|L5.164|
000006  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
000008  2800              CMP      r0,#0
00000a  d049              BEQ      |L5.160|
;;;774    	
;;;775    		dlen = sizeof( SGhListSYS ) / sizeof(SGhListSYS[0]);
00000c  251e              MOVS     r5,#0x1e
;;;776    		
;;;777    		key_loc = get_id_index( SGhListSYS, dlen);
00000e  4629              MOV      r1,r5
000010  4825              LDR      r0,|L5.168|
000012  f7fffffe          BL       get_id_index
000016  4604              MOV      r4,r0
;;;778    		
;;;779    		if( *key_loc == 0x194 )
000018  6820              LDR      r0,[r4,#0]
00001a  f5b07fca          CMP      r0,#0x194
00001e  d103              BNE      |L5.40|
;;;780    			
;;;781    		   SGhListSYS[1].focusType = 1;
000020  2101              MOVS     r1,#1
000022  4821              LDR      r0,|L5.168|
000024  64c1              STR      r1,[r0,#0x4c]
000026  e03b              B        |L5.160|
                  |L5.40|
;;;782    			
;;;783    		else
;;;784    		{		
;;;785    			strcpy( displayStr , SGhListSYS[*(key_loc+1)].f_EName );
000028  6860              LDR      r0,[r4,#4]
00002a  eb0000c0          ADD      r0,r0,r0,LSL #3
00002e  4a1e              LDR      r2,|L5.168|
000030  eb0200c0          ADD      r0,r2,r0,LSL #3
000034  f1000120          ADD      r1,r0,#0x20
000038  481c              LDR      r0,|L5.172|
00003a  f7fffffe          BL       strcpy
;;;786    			
;;;787    			if( SGhListSYS[*key_loc].t_Type == T_THref && ( strlen( displayStr) != 0 || displayStr[0] != '\0' ) )
00003e  6820              LDR      r0,[r4,#0]
000040  eb0000c0          ADD      r0,r0,r0,LSL #3
000044  4918              LDR      r1,|L5.168|
000046  eb0100c0          ADD      r0,r1,r0,LSL #3
00004a  6880              LDR      r0,[r0,#8]
00004c  2801              CMP      r0,#1
00004e  d127              BNE      |L5.160|
000050  4816              LDR      r0,|L5.172|
000052  f7fffffe          BL       strlen
000056  b910              CBNZ     r0,|L5.94|
000058  4814              LDR      r0,|L5.172|
00005a  7800              LDRB     r0,[r0,#0]  ; displayStr
00005c  b300              CBZ      r0,|L5.160|
                  |L5.94|
;;;788    			{
;;;789    				displayStr[ strlen( displayStr) - 1 ] = '\0'; 
00005e  4813              LDR      r0,|L5.172|
000060  f7fffffe          BL       strlen
000064  1e40              SUBS     r0,r0,#1
000066  4911              LDR      r1,|L5.172|
000068  2200              MOVS     r2,#0
00006a  540a              STRB     r2,[r1,r0]
;;;790    					
;;;791    				strcpy( SGhListSYS[*(key_loc+1)].f_SName, displayStr );	
00006c  6861              LDR      r1,[r4,#4]
00006e  eb0101c1          ADD      r1,r1,r1,LSL #3
000072  4a0d              LDR      r2,|L5.168|
000074  eb0201c1          ADD      r1,r2,r1,LSL #3
000078  f101000c          ADD      r0,r1,#0xc
00007c  490b              LDR      r1,|L5.172|
00007e  f7fffffe          BL       strcpy
;;;792    					
;;;793    				strcpy( SGhListSYS[*(key_loc+1)].f_EName, displayStr );	
000082  6861              LDR      r1,[r4,#4]
000084  eb0101c1          ADD      r1,r1,r1,LSL #3
000088  4a07              LDR      r2,|L5.168|
00008a  eb0201c1          ADD      r1,r2,r1,LSL #3
00008e  f1010020          ADD      r0,r1,#0x20
000092  4906              LDR      r1,|L5.172|
000094  f7fffffe          BL       strcpy
;;;794    					
;;;795    				WM_InvalidateWindow(sysSettingWin);				
000098  4805              LDR      r0,|L5.176|
00009a  6800              LDR      r0,[r0,#0]  ; sysSettingWin
00009c  f7fffffe          BL       WM_InvalidateWindow
                  |L5.160|
;;;796    			}
;;;797    		}
;;;798    
;;;799    	}
;;;800    
;;;801    }
0000a0  bd70              POP      {r4-r6,pc}
;;;802    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L5.164|
                          DCD      FLAG_INPUTAUTH
                  |L5.168|
                          DCD      SGhListSYS
                  |L5.172|
                          DCD      displayStr
                  |L5.176|
                          DCD      sysSettingWin

                          AREA ||i.Sysset_ent||, CODE, READONLY, ALIGN=2

                  Sysset_ent PROC
;;;545    //确认键
;;;546    void Sysset_ent( ){
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;547    	
;;;548    	int i = 0, num = 0, dlen, flag = 0;
000004  2400              MOVS     r4,#0
000006  2700              MOVS     r7,#0
000008  46a2              MOV      r10,r4
;;;549    	int *key_loc;	
;;;550    	int key_id = 0, key_index = 0;
00000a  2600              MOVS     r6,#0
00000c  2500              MOVS     r5,#0
;;;551    	
;;;552    	dlen = sizeof( SGhListSYS ) / sizeof( SGhListSYS[0] );
00000e  f04f091e          MOV      r9,#0x1e
;;;553    	
;;;554    	key_loc = get_id_index( SGhListSYS, dlen);
000012  4649              MOV      r1,r9
000014  48e7              LDR      r0,|L6.948|
000016  f7fffffe          BL       get_id_index
00001a  4680              MOV      r8,r0
;;;555    	
;;;556    	memset( displayStr, '\0', sizeof(displayStr));
00001c  2114              MOVS     r1,#0x14
00001e  48e6              LDR      r0,|L6.952|
000020  f7fffffe          BL       __aeabi_memclr
;;;557    	
;;;558    	if( *key_loc == 0x194 )
000024  f8d80000          LDR      r0,[r8,#0]
000028  f5b07fca          CMP      r0,#0x194
00002c  d103              BNE      |L6.54|
;;;559    			
;;;560    		 SGhListSYS[1].focusType = 1;
00002e  2101              MOVS     r1,#1
000030  48e0              LDR      r0,|L6.948|
000032  64c1              STR      r1,[r0,#0x4c]
000034  e1bb              B        |L6.942|
                  |L6.54|
;;;561    	else
;;;562    	{
;;;563    		key_id = *key_loc;
000036  f8d86000          LDR      r6,[r8,#0]
;;;564    		
;;;565    		key_index = *(key_loc + 1);
00003a  f8d85004          LDR      r5,[r8,#4]
;;;566    		
;;;567    		switch( SGhListSYS[key_index].t_Type )
00003e  eb0500c5          ADD      r0,r5,r5,LSL #3
000042  49dc              LDR      r1,|L6.948|
000044  eb0100c0          ADD      r0,r1,r0,LSL #3
000048  6880              LDR      r0,[r0,#8]
00004a  2801              CMP      r0,#1
00004c  d07d              BEQ      |L6.330|
00004e  2803              CMP      r0,#3
000050  d17c              BNE      |L6.332|
;;;568    		{
;;;569    			case T_TLISTBOX:{    //下拉列表
;;;570    				
;;;571    				if( !FLAG_INPUTAUTH )
000052  48da              LDR      r0,|L6.956|
000054  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
000056  2800              CMP      r0,#0
000058  d179              BNE      |L6.334|
;;;572    				{
;;;573    					FLAG_INPUTAUTH = 1;	
00005a  2001              MOVS     r0,#1
00005c  49d7              LDR      r1,|L6.956|
00005e  7008              STRB     r0,[r1,#0]
;;;574    					
;;;575    					//初始化界面
;;;576    					for( i = 0; i < sizeof( BoxData_List ) / sizeof( BoxData_List[0]); i++)
000060  2400              MOVS     r4,#0
000062  e091              B        |L6.392|
                  |L6.100|
;;;577    					{
;;;578    						
;;;579    						if( BoxData_List[i].d_ID == key_id  )
000064  eb0400c4          ADD      r0,r4,r4,LSL #3
000068  49d5              LDR      r1,|L6.960|
00006a  f8510030          LDR      r0,[r1,r0,LSL #3]
00006e  42b0              CMP      r0,r6
000070  d16e              BNE      |L6.336|
;;;580    						{			
;;;581    							//确认显示坐标
;;;582    							if( BoxData_List[i].d_x == 0||BoxData_List[i].d_y == 0 || BoxData_List[i].d_x1 == 0 || BoxData_List[i].d_y1 == 0 ){
000072  eb0400c4          ADD      r0,r4,r4,LSL #3
000076  eb0100c0          ADD      r0,r1,r0,LSL #3
00007a  f8b00040          LDRH     r0,[r0,#0x40]
00007e  b1a0              CBZ      r0,|L6.170|
000080  eb0400c4          ADD      r0,r4,r4,LSL #3
000084  eb0100c0          ADD      r0,r1,r0,LSL #3
000088  f8b00042          LDRH     r0,[r0,#0x42]
00008c  b168              CBZ      r0,|L6.170|
00008e  eb0400c4          ADD      r0,r4,r4,LSL #3
000092  eb0100c0          ADD      r0,r1,r0,LSL #3
000096  f8b00044          LDRH     r0,[r0,#0x44]
00009a  b130              CBZ      r0,|L6.170|
00009c  eb0400c4          ADD      r0,r4,r4,LSL #3
0000a0  eb0100c0          ADD      r0,r1,r0,LSL #3
0000a4  f8b00046          LDRH     r0,[r0,#0x46]
0000a8  bbe0              CBNZ     r0,|L6.292|
                  |L6.170|
;;;583    								
;;;584    								BoxData_List[i].d_x  = SGhListSYS[key_index].d_x;
0000aa  eb0500c5          ADD      r0,r5,r5,LSL #3
0000ae  49c1              LDR      r1,|L6.948|
0000b0  eb0100c0          ADD      r0,r1,r0,LSL #3
0000b4  f8b00040          LDRH     r0,[r0,#0x40]
0000b8  eb0401c4          ADD      r1,r4,r4,LSL #3
0000bc  4ac0              LDR      r2,|L6.960|
0000be  eb0201c1          ADD      r1,r2,r1,LSL #3
0000c2  f8a10040          STRH     r0,[r1,#0x40]
;;;585    								
;;;586    								BoxData_List[i].d_y  = SGhListSYS[key_index].d_y + ( 25 * num );
0000c6  eb0500c5          ADD      r0,r5,r5,LSL #3
0000ca  49ba              LDR      r1,|L6.948|
0000cc  eb0100c0          ADD      r0,r1,r0,LSL #3
0000d0  f8b00042          LDRH     r0,[r0,#0x42]
0000d4  2119              MOVS     r1,#0x19
0000d6  fb010007          MLA      r0,r1,r7,r0
0000da  eb0401c4          ADD      r1,r4,r4,LSL #3
0000de  eb0201c1          ADD      r1,r2,r1,LSL #3
0000e2  f8a10042          STRH     r0,[r1,#0x42]
;;;587    								
;;;588    								BoxData_List[i].d_x1 = SGhListSYS[key_index].d_x + 110 ;
0000e6  eb0500c5          ADD      r0,r5,r5,LSL #3
0000ea  49b2              LDR      r1,|L6.948|
0000ec  eb0100c0          ADD      r0,r1,r0,LSL #3
0000f0  f8b00040          LDRH     r0,[r0,#0x40]
0000f4  306e              ADDS     r0,r0,#0x6e
0000f6  eb0401c4          ADD      r1,r4,r4,LSL #3
0000fa  eb0201c1          ADD      r1,r2,r1,LSL #3
0000fe  f8a10044          STRH     r0,[r1,#0x44]
;;;589    								
;;;590    								BoxData_List[i].d_y1 = SGhListSYS[key_index].d_y + ( 25 * num ) + 17;	
000102  eb0500c5          ADD      r0,r5,r5,LSL #3
000106  49ab              LDR      r1,|L6.948|
000108  eb0100c0          ADD      r0,r1,r0,LSL #3
00010c  f8b00042          LDRH     r0,[r0,#0x42]
000110  2119              MOVS     r1,#0x19
000112  fb010007          MLA      r0,r1,r7,r0
000116  3011              ADDS     r0,r0,#0x11
000118  eb0401c4          ADD      r1,r4,r4,LSL #3
00011c  eb0201c1          ADD      r1,r2,r1,LSL #3
000120  f8a10046          STRH     r0,[r1,#0x46]
                  |L6.292|
;;;591    							}	
;;;592    							
;;;593    							if( strcmp( SGhListSYS[key_index].f_EName ,BoxData_List[i].f_EName) == 0 )	{
000124  eb0402c4          ADD      r2,r4,r4,LSL #3
000128  4ba5              LDR      r3,|L6.960|
00012a  eb0302c2          ADD      r2,r3,r2,LSL #3
00012e  f1020120          ADD      r1,r2,#0x20
000132  eb0502c5          ADD      r2,r5,r5,LSL #3
000136  4b9f              LDR      r3,|L6.948|
000138  eb0302c2          ADD      r2,r3,r2,LSL #3
00013c  f1020020          ADD      r0,r2,#0x20
000140  f7fffffe          BL       strcmp
000144  b990              CBNZ     r0,|L6.364|
;;;594    								
;;;595    									BoxData_List[i].focusType = 1;
000146  2001              MOVS     r0,#1
000148  e003              B        |L6.338|
                  |L6.330|
00014a  e105              B        |L6.856|
                  |L6.332|
00014c  e12d              B        |L6.938|
                  |L6.334|
00014e  e01f              B        |L6.400|
                  |L6.336|
000150  e019              B        |L6.390|
                  |L6.338|
000152  eb0401c4          ADD      r1,r4,r4,LSL #3
000156  4a9a              LDR      r2,|L6.960|
000158  eb0201c1          ADD      r1,r2,r1,LSL #3
00015c  6048              STR      r0,[r1,#4]
;;;596    									
;;;597    									BoxData_List[i].d_BKColor = 0x00F0FFFF;
00015e  4899              LDR      r0,|L6.964|
000160  eb0401c4          ADD      r1,r4,r4,LSL #3
000164  eb0201c1          ADD      r1,r2,r1,LSL #3
000168  6388              STR      r0,[r1,#0x38]
00016a  e00b              B        |L6.388|
                  |L6.364|
;;;598    									
;;;599    							}else{ 
;;;600    							
;;;601    									BoxData_List[i].focusType = 0;
00016c  2000              MOVS     r0,#0
00016e  eb0401c4          ADD      r1,r4,r4,LSL #3
000172  4a93              LDR      r2,|L6.960|
000174  eb0201c1          ADD      r1,r2,r1,LSL #3
000178  6048              STR      r0,[r1,#4]
;;;602    									
;;;603    									BoxData_List[i].d_BKColor = 0x0;									
00017a  eb0401c4          ADD      r1,r4,r4,LSL #3
00017e  eb0201c1          ADD      r1,r2,r1,LSL #3
000182  6388              STR      r0,[r1,#0x38]
                  |L6.388|
;;;604    							}
;;;605    							num++ ;
000184  1c7f              ADDS     r7,r7,#1
                  |L6.390|
000186  1c64              ADDS     r4,r4,#1              ;576
                  |L6.392|
000188  2c0d              CMP      r4,#0xd               ;576
00018a  f4ffaf6b          BCC      |L6.100|
00018e  e0de              B        |L6.846|
                  |L6.400|
;;;606    						}	
;;;607    					}	
;;;608    					
;;;609    				}
;;;610    				else
;;;611    				{
;;;612    					FLAG_INPUTAUTH = 0;
000190  2000              MOVS     r0,#0
000192  498a              LDR      r1,|L6.956|
000194  7008              STRB     r0,[r1,#0]
;;;613    						
;;;614    					for( i = 0; i < sizeof( BoxData_List ) / sizeof( BoxData_List[0]); i++ )
000196  2400              MOVS     r4,#0
000198  e0d4              B        |L6.836|
                  |L6.410|
;;;615    					{	
;;;616    						BoxData_List[i].d_BKColor =  0x0;
00019a  2000              MOVS     r0,#0
00019c  eb0401c4          ADD      r1,r4,r4,LSL #3
0001a0  4a87              LDR      r2,|L6.960|
0001a2  eb0201c1          ADD      r1,r2,r1,LSL #3
0001a6  6388              STR      r0,[r1,#0x38]
;;;617    							
;;;618    						if( BoxData_List[i].focusType == 1 && BoxData_List[i].d_ID == key_id  )
0001a8  eb0400c4          ADD      r0,r4,r4,LSL #3
0001ac  4611              MOV      r1,r2
0001ae  eb0100c0          ADD      r0,r1,r0,LSL #3
0001b2  6840              LDR      r0,[r0,#4]
0001b4  2801              CMP      r0,#1
                  |L6.438|
0001b6  d17d              BNE      |L6.692|
0001b8  eb0400c4          ADD      r0,r4,r4,LSL #3
0001bc  f8510030          LDR      r0,[r1,r0,LSL #3]
0001c0  42b0              CMP      r0,r6
0001c2  d1f8              BNE      |L6.438|
;;;619    						{	
;;;620    							strcpy( SGhListSYS[key_index].f_SName, BoxData_List[i].f_SName );
0001c4  eb0402c4          ADD      r2,r4,r4,LSL #3
0001c8  460b              MOV      r3,r1
0001ca  eb0302c2          ADD      r2,r3,r2,LSL #3
0001ce  f102010c          ADD      r1,r2,#0xc
0001d2  eb0502c5          ADD      r2,r5,r5,LSL #3
0001d6  4b77              LDR      r3,|L6.948|
0001d8  eb0302c2          ADD      r2,r3,r2,LSL #3
0001dc  f102000c          ADD      r0,r2,#0xc
0001e0  f7fffffe          BL       strcpy
;;;621    								
;;;622    							strcpy( SGhListSYS[key_index].f_EName, BoxData_List[i].f_EName );
0001e4  eb0402c4          ADD      r2,r4,r4,LSL #3
0001e8  4b75              LDR      r3,|L6.960|
0001ea  eb0302c2          ADD      r2,r3,r2,LSL #3
0001ee  f1020120          ADD      r1,r2,#0x20
0001f2  eb0502c5          ADD      r2,r5,r5,LSL #3
0001f6  4b6f              LDR      r3,|L6.948|
0001f8  eb0302c2          ADD      r2,r3,r2,LSL #3
0001fc  f1020020          ADD      r0,r2,#0x20
000200  f7fffffe          BL       strcpy
;;;623    								
;;;624    							//======================================分选开关========================================
;;;625    							if( key_id == 2 )
000204  2e02              CMP      r6,#2
000206  d11d              BNE      |L6.580|
;;;626    							{	
;;;627    								if( strcmp(SGhListSYS[key_index].f_EName, "ON") == 0 ) 		
000208  eb0501c5          ADD      r1,r5,r5,LSL #3
00020c  4a69              LDR      r2,|L6.948|
00020e  eb0201c1          ADD      r1,r2,r1,LSL #3
000212  f1010020          ADD      r0,r1,#0x20
000216  a16c              ADR      r1,|L6.968|
000218  f7fffffe          BL       strcmp
00021c  b918              CBNZ     r0,|L6.550|
;;;628    										
;;;629    										CLists.SYS_Comparator = 1;
00021e  2001              MOVS     r0,#1
000220  496a              LDR      r1,|L6.972|
000222  f88100f9          STRB     r0,[r1,#0xf9]
                  |L6.550|
;;;630    		
;;;631    								if( strcmp(SGhListSYS[key_index].f_EName, "OFF") == 0 ) 
000226  eb0501c5          ADD      r1,r5,r5,LSL #3
00022a  4a62              LDR      r2,|L6.948|
00022c  eb0201c1          ADD      r1,r2,r1,LSL #3
000230  f1010020          ADD      r0,r1,#0x20
000234  a166              ADR      r1,|L6.976|
000236  f7fffffe          BL       strcmp
00023a  b918              CBNZ     r0,|L6.580|
;;;632    										
;;;633    										CLists.SYS_Comparator = 0;										
00023c  2000              MOVS     r0,#0
00023e  4963              LDR      r1,|L6.972|
000240  f88100f9          STRB     r0,[r1,#0xf9]
                  |L6.580|
;;;634    							}
;;;635    								
;;;636    							//======================================过流测试========================================
;;;637    							if( key_id == 4 )
000244  2e04              CMP      r6,#4
000246  d121              BNE      |L6.652|
;;;638    							{	
;;;639    								if( strcmp(SGhListSYS[key_index].f_EName, "ON") == 0 )  {
000248  eb0501c5          ADD      r1,r5,r5,LSL #3
00024c  4a59              LDR      r2,|L6.948|
00024e  eb0201c1          ADD      r1,r2,r1,LSL #3
000252  f1010020          ADD      r0,r1,#0x20
000256  a15c              ADR      r1,|L6.968|
000258  f7fffffe          BL       strcmp
00025c  b928              CBNZ     r0,|L6.618|
;;;640    					
;;;641    									FLAG_OVTest = 1;
00025e  2001              MOVS     r0,#1
000260  495c              LDR      r1,|L6.980|
000262  7008              STRB     r0,[r1,#0]
;;;642    										
;;;643    									CLists.SYS_Overflow = 1;
000264  4959              LDR      r1,|L6.972|
000266  f88100fa          STRB     r0,[r1,#0xfa]
                  |L6.618|
;;;644    	
;;;645    								}
;;;646    								if( strcmp(SGhListSYS[key_index].f_EName, "OFF") == 0 )  {
00026a  eb0501c5          ADD      r1,r5,r5,LSL #3
00026e  4a51              LDR      r2,|L6.948|
000270  eb0201c1          ADD      r1,r2,r1,LSL #3
000274  f1010020          ADD      r0,r1,#0x20
000278  a155              ADR      r1,|L6.976|
00027a  f7fffffe          BL       strcmp
00027e  b928              CBNZ     r0,|L6.652|
;;;647    										
;;;648    									FLAG_OVTest = 0;	
000280  2000              MOVS     r0,#0
000282  4954              LDR      r1,|L6.980|
000284  7008              STRB     r0,[r1,#0]
;;;649    										
;;;650    									CLists.SYS_Overflow = 0;									
000286  4951              LDR      r1,|L6.972|
000288  f88100fa          STRB     r0,[r1,#0xfa]
                  |L6.652|
;;;651    								}
;;;652    							}
;;;653    								
;;;654    							//======================================报警声音========================================
;;;655    							if( key_id == 6 )
00028c  2e06              CMP      r6,#6
00028e  d11f              BNE      |L6.720|
;;;656    							{	
;;;657    								if( strcmp(SGhListSYS[key_index].f_EName, "ON") == 0 )  	
000290  eb0501c5          ADD      r1,r5,r5,LSL #3
000294  4a47              LDR      r2,|L6.948|
000296  eb0201c1          ADD      r1,r2,r1,LSL #3
00029a  f1010020          ADD      r0,r1,#0x20
00029e  a14a              ADR      r1,|L6.968|
0002a0  f7fffffe          BL       strcmp
0002a4  b918              CBNZ     r0,|L6.686|
;;;658    										
;;;659    									CLists.SYS_Beep = 1;
0002a6  2001              MOVS     r0,#1
0002a8  4948              LDR      r1,|L6.972|
0002aa  f88100fb          STRB     r0,[r1,#0xfb]
                  |L6.686|
;;;660    									
;;;661    								if( strcmp(SGhListSYS[key_index].f_EName, "OFF") == 0 )  
0002ae  eb0501c5          ADD      r1,r5,r5,LSL #3
0002b2  e000              B        |L6.694|
                  |L6.692|
0002b4  e045              B        |L6.834|
                  |L6.694|
0002b6  4a3f              LDR      r2,|L6.948|
0002b8  eb0201c1          ADD      r1,r2,r1,LSL #3
0002bc  f1010020          ADD      r0,r1,#0x20
0002c0  a143              ADR      r1,|L6.976|
0002c2  f7fffffe          BL       strcmp
0002c6  b918              CBNZ     r0,|L6.720|
;;;662    										
;;;663    									CLists.SYS_Beep = 0;									
0002c8  2000              MOVS     r0,#0
0002ca  4940              LDR      r1,|L6.972|
0002cc  f88100fb          STRB     r0,[r1,#0xfb]
                  |L6.720|
;;;664    							}
;;;665    								
;;;666    							//======================================电池类型========================================
;;;667    							if( key_id == 28 )
0002d0  2e1c              CMP      r6,#0x1c
0002d2  d10e              BNE      |L6.754|
;;;668    							{	
;;;669    								num = Box_Data_Location( key_id, SGhListSYS[key_index].f_EName, 0);
0002d4  eb0500c5          ADD      r0,r5,r5,LSL #3
0002d8  4a36              LDR      r2,|L6.948|
0002da  eb0200c0          ADD      r0,r2,r0,LSL #3
0002de  f1000120          ADD      r1,r0,#0x20
0002e2  2200              MOVS     r2,#0
0002e4  4630              MOV      r0,r6
0002e6  f7fffffe          BL       Box_Data_Location
0002ea  4607              MOV      r7,r0
;;;670    									
;;;671    								CLists.SYS_BatteryType = num ;		
0002ec  4937              LDR      r1,|L6.972|
0002ee  f881710c          STRB     r7,[r1,#0x10c]
                  |L6.754|
;;;672    							}
;;;673    								
;;;674    							//=======================================语言===========================================
;;;675    							if( key_id == 30 )
0002f2  2e1e              CMP      r6,#0x1e
0002f4  d125              BNE      |L6.834|
;;;676    							{
;;;677    								if( strcmp( SGhListSYS[key_index].f_EName , "English") == 0 )
0002f6  eb0501c5          ADD      r1,r5,r5,LSL #3
0002fa  4a2e              LDR      r2,|L6.948|
0002fc  eb0201c1          ADD      r1,r2,r1,LSL #3
000300  f1010020          ADD      r0,r1,#0x20
000304  a134              ADR      r1,|L6.984|
000306  f7fffffe          BL       strcmp
00030a  b928              CBNZ     r0,|L6.792|
;;;678    								{
;;;679    									FLAG_LANG = 1;
00030c  2001              MOVS     r0,#1
00030e  4934              LDR      r1,|L6.992|
000310  7008              STRB     r0,[r1,#0]
;;;680    										
;;;681    									CLists.SYS_LANUGAGE = 1 ;
000312  492e              LDR      r1,|L6.972|
000314  f881010d          STRB     r0,[r1,#0x10d]
                  |L6.792|
;;;682    								}
;;;683    								if( strcmp( SGhListSYS[key_index].f_EName , "Chinese") == 0 )
000318  eb0501c5          ADD      r1,r5,r5,LSL #3
00031c  4a25              LDR      r2,|L6.948|
00031e  eb0201c1          ADD      r1,r2,r1,LSL #3
000322  f1010020          ADD      r0,r1,#0x20
000326  a12f              ADR      r1,|L6.996|
000328  f7fffffe          BL       strcmp
00032c  b928              CBNZ     r0,|L6.826|
;;;684    								{
;;;685    										
;;;686    									FLAG_LANG = 0;
00032e  2000              MOVS     r0,#0
000330  492b              LDR      r1,|L6.992|
000332  7008              STRB     r0,[r1,#0]
;;;687    										
;;;688    									CLists.SYS_LANUGAGE = 0 ;
000334  4925              LDR      r1,|L6.972|
000336  f881010d          STRB     r0,[r1,#0x10d]
                  |L6.826|
;;;689    								}
;;;690    															
;;;691    								delteWindow();
00033a  f7fffffe          BL       delteWindow
;;;692    									
;;;693    								CreateSysSetting();
00033e  f7fffffe          BL       CreateSysSetting
                  |L6.834|
000342  1c64              ADDS     r4,r4,#1              ;614
                  |L6.836|
000344  2c0d              CMP      r4,#0xd               ;614
000346  f4ffaf28          BCC      |L6.410|
;;;694    							}					
;;;695    						}					
;;;696    					}
;;;697    					Write_Flash_Bytes();					
00034a  f7fffffe          BL       Write_Flash_Bytes
                  |L6.846|
;;;698    				}	
;;;699    				WM_InvalidateWindow(sysSettingWin);
00034e  4827              LDR      r0,|L6.1004|
000350  6800              LDR      r0,[r0,#0]  ; sysSettingWin
000352  f7fffffe          BL       WM_InvalidateWindow
;;;700    			}
;;;701    
;;;702    			break;
000356  e029              B        |L6.940|
                  |L6.856|
;;;703    			
;;;704    			case T_THref:{
;;;705    			
;;;706    				if( FLAG_INPUTAUTH ){
000358  4818              LDR      r0,|L6.956|
00035a  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
00035c  b128              CBZ      r0,|L6.874|
;;;707    		
;;;708    					FLAG_INPUTAUTH = 0;
00035e  2000              MOVS     r0,#0
000360  4916              LDR      r1,|L6.956|
000362  7008              STRB     r0,[r1,#0]
;;;709    					
;;;710    					Sysset_value_correct();
000364  f7fffffe          BL       Sysset_value_correct
000368  e01e              B        |L6.936|
                  |L6.874|
;;;711    					
;;;712    				}else{
;;;713    					
;;;714    					FLAG_INPUTAUTH = 1;
00036a  2001              MOVS     r0,#1
00036c  4913              LDR      r1,|L6.956|
00036e  7008              STRB     r0,[r1,#0]
;;;715    					
;;;716    					SGhListSYS[key_index].d_BKColor = 0x00F0FFFF;
000370  4814              LDR      r0,|L6.964|
000372  eb0501c5          ADD      r1,r5,r5,LSL #3
000376  4a0f              LDR      r2,|L6.948|
000378  eb0201c1          ADD      r1,r2,r1,LSL #3
00037c  6388              STR      r0,[r1,#0x38]
;;;717    		
;;;718    					strcpy( SGhListSYS[key_index].f_SName, "");
00037e  eb0500c5          ADD      r0,r5,r5,LSL #3
000382  4611              MOV      r1,r2
000384  eb0100c0          ADD      r0,r1,r0,LSL #3
000388  a119              ADR      r1,|L6.1008|
00038a  7809              LDRB     r1,[r1,#0]
00038c  7301              STRB     r1,[r0,#0xc]
;;;719    		
;;;720    					strcpy( SGhListSYS[key_index].f_EName, "");
00038e  eb0500c5          ADD      r0,r5,r5,LSL #3
000392  4611              MOV      r1,r2
000394  eb0100c0          ADD      r0,r1,r0,LSL #3
000398  a115              ADR      r1,|L6.1008|
00039a  7809              LDRB     r1,[r1,#0]
00039c  f8801020          STRB     r1,[r0,#0x20]
;;;721    		
;;;722    					WM_InvalidateWindow(sysSettingWin);			
0003a0  4812              LDR      r0,|L6.1004|
0003a2  6800              LDR      r0,[r0,#0]  ; sysSettingWin
0003a4  f7fffffe          BL       WM_InvalidateWindow
                  |L6.936|
;;;723    				}	
;;;724    			
;;;725    			}
;;;726    				
;;;727    			break;
0003a8  e000              B        |L6.940|
                  |L6.938|
;;;728    			
;;;729    			default:  break;
0003aa  bf00              NOP      
                  |L6.940|
0003ac  bf00              NOP                            ;702
                  |L6.942|
;;;730    		}
;;;731    	}
;;;732    	
;;;733    }
0003ae  e8bd87f0          POP      {r4-r10,pc}
;;;734    
                          ENDP

0003b2  0000              DCW      0x0000
                  |L6.948|
                          DCD      SGhListSYS
                  |L6.952|
                          DCD      displayStr
                  |L6.956|
                          DCD      FLAG_INPUTAUTH
                  |L6.960|
                          DCD      BoxData_List
                  |L6.964|
                          DCD      0x00f0ffff
                  |L6.968|
0003c8  4f4e00            DCB      "ON",0
0003cb  00                DCB      0
                  |L6.972|
                          DCD      CLists
                  |L6.976|
0003d0  4f464600          DCB      "OFF",0
                  |L6.980|
                          DCD      FLAG_OVTest
                  |L6.984|
0003d8  456e676c          DCB      "English",0
0003dc  69736800
                  |L6.992|
                          DCD      FLAG_LANG
                  |L6.996|
0003e4  4368696e          DCB      "Chinese",0
0003e8  65736500
                  |L6.1004|
                          DCD      sysSettingWin
                  |L6.1008|
0003f0  00                DCB      0
0003f1  00                DCB      0
0003f2  00                DCB      0
0003f3  00                DCB      0

                          AREA ||i.Sysset_value_correct||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  Sysset_value_correct PROC
;;;803    /*  数据格式  */
;;;804    void Sysset_value_correct( )
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;805    	{
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b08d              SUB      sp,sp,#0x34
;;;806    	
;;;807    	int dlen = 0, flen = 0, i = 0, NUM = 0, flag_null = 0; //是否为最小值
00000a  2000              MOVS     r0,#0
00000c  900c              STR      r0,[sp,#0x30]
00000e  900b              STR      r0,[sp,#0x2c]
000010  2500              MOVS     r5,#0
000012  4682              MOV      r10,r0
000014  4681              MOV      r9,r0
;;;808    	int *key_loc;
;;;809    	int temp, dot_loc = 1024;  //是否具有小数点  1024---无   其余---小数点位置
000016  f44f6680          MOV      r6,#0x400
;;;810    	char temp_char[10], int_char[10], float_char[10];
;;;811    	int temp_int, num_int;
;;;812    	float temp_float, num_float;
;;;813    	vu8 flag_dot = 0;
00001a  9001              STR      r0,[sp,#4]
;;;814    	
;;;815    	if( !FLAG_INPUTAUTH ){
00001c  48fb              LDR      r0,|L7.1036|
00001e  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
000020  2800              CMP      r0,#0
000022  d10e              BNE      |L7.66|
;;;816    		
;;;817    		dlen = sizeof( SGhListSYS ) / sizeof( SGhListSYS[0]);
000024  201e              MOVS     r0,#0x1e
000026  900c              STR      r0,[sp,#0x30]
;;;818    		
;;;819    		key_loc = get_id_index( SGhListSYS, dlen);
000028  48f9              LDR      r0,|L7.1040|
00002a  990c              LDR      r1,[sp,#0x30]
00002c  f7fffffe          BL       get_id_index
000030  4683              MOV      r11,r0
;;;820    		
;;;821    		if( *key_loc == 0x194 )
000032  f8db0000          LDR      r0,[r11,#0]
000036  f5b07fca          CMP      r0,#0x194
00003a  d103              BNE      |L7.68|
;;;822    			
;;;823    		   SGhListSYS[1].focusType = 1;
00003c  2101              MOVS     r1,#1
00003e  48f4              LDR      r0,|L7.1040|
000040  64c1              STR      r1,[r0,#0x4c]
                  |L7.66|
000042  e3fc              B        |L7.2110|
                  |L7.68|
;;;824    			
;;;825    		else
;;;826    		{	
;;;827    		
;;;828    			temp = *(key_loc+1);
000044  f8db8004          LDR      r8,[r11,#4]
;;;829    			
;;;830    			strcpy( displayStr , SGhListSYS[temp].f_EName );
000048  eb0800c8          ADD      r0,r8,r8,LSL #3
00004c  4af0              LDR      r2,|L7.1040|
00004e  eb0200c0          ADD      r0,r2,r0,LSL #3
000052  f1000120          ADD      r1,r0,#0x20
000056  48ef              LDR      r0,|L7.1044|
000058  f7fffffe          BL       strcpy
;;;831    			
;;;832    			if( (displayStr[0] == '\0' || strlen(displayStr) == 0) && SGhListSYS[temp].t_Type == T_THref ){
00005c  48ed              LDR      r0,|L7.1044|
00005e  7800              LDRB     r0,[r0,#0]  ; displayStr
000060  b118              CBZ      r0,|L7.106|
000062  48ec              LDR      r0,|L7.1044|
000064  f7fffffe          BL       strlen
000068  b940              CBNZ     r0,|L7.124|
                  |L7.106|
00006a  eb0800c8          ADD      r0,r8,r8,LSL #3
00006e  49e8              LDR      r1,|L7.1040|
000070  eb0100c0          ADD      r0,r1,r0,LSL #3
000074  6880              LDR      r0,[r0,#8]
000076  2801              CMP      r0,#1
000078  d100              BNE      |L7.124|
;;;833    				
;;;834    				flag_null = 1;
00007a  4681              MOV      r9,r0
                  |L7.124|
;;;835    			}
;;;836    			for( i = 0; i < strlen(displayStr); i++  ){  
00007c  2500              MOVS     r5,#0
00007e  e005              B        |L7.140|
                  |L7.128|
;;;837    			
;;;838    				if( displayStr[i] == 0x2e ){		
000080  48e4              LDR      r0,|L7.1044|
000082  5d40              LDRB     r0,[r0,r5]
000084  282e              CMP      r0,#0x2e
000086  d100              BNE      |L7.138|
;;;839    				
;;;840    					dot_loc = i;			//记录小数点位置
000088  462e              MOV      r6,r5
                  |L7.138|
00008a  1c6d              ADDS     r5,r5,#1              ;836
                  |L7.140|
00008c  48e1              LDR      r0,|L7.1044|
00008e  f7fffffe          BL       strlen
000092  42a8              CMP      r0,r5                 ;836
000094  d8f4              BHI      |L7.128|
;;;841    				}			
;;;842    			}	
;;;843    			temp_int = atoi(displayStr);   //转为整数
000096  48df              LDR      r0,|L7.1044|
000098  f7fffffe          BL       atoi
00009c  4604              MOV      r4,r0
;;;844    			
;;;845    			temp_float = atof(displayStr);  //转为浮点数
00009e  48dd              LDR      r0,|L7.1044|
0000a0  f7fffffe          BL       __hardfp_atof
0000a4  eeb09a40          VMOV.F32 s18,s0
0000a8  eef09a60          VMOV.F32 s19,s1
0000ac  ec510b19          VMOV     r0,r1,d9
0000b0  f7fffffe          BL       __aeabi_d2f
0000b4  ee080a10          VMOV     s16,r0
;;;846    			
;;;847    			memset( temp_char, '\0', sizeof(temp_char));
0000b8  2000              MOVS     r0,#0
0000ba  9008              STR      r0,[sp,#0x20]
0000bc  9009              STR      r0,[sp,#0x24]
0000be  900a              STR      r0,[sp,#0x28]
;;;848    			
;;;849    			memset( int_char, '\0', sizeof(int_char));
0000c0  9005              STR      r0,[sp,#0x14]
0000c2  9006              STR      r0,[sp,#0x18]
0000c4  9007              STR      r0,[sp,#0x1c]
;;;850    			
;;;851    			memset( float_char, '\0', sizeof(float_char));
0000c6  9002              STR      r0,[sp,#8]
0000c8  9003              STR      r0,[sp,#0xc]
0000ca  9004              STR      r0,[sp,#0x10]
;;;852    			
;;;853    			sprintf(int_char, "%d", temp_int);
0000cc  4622              MOV      r2,r4
0000ce  a1d2              ADR      r1,|L7.1048|
0000d0  a805              ADD      r0,sp,#0x14
0000d2  f7fffffe          BL       __2sprintf
;;;854    			
;;;855    			sprintf(float_char, "%f", temp_float);
0000d6  ee180a10          VMOV     r0,s16
0000da  f7fffffe          BL       __aeabi_f2d
0000de  ec410b19          VMOV     d9,r0,r1
0000e2  ec532b19          VMOV     r2,r3,d9
0000e6  a1cd              ADR      r1,|L7.1052|
0000e8  a802              ADD      r0,sp,#8
0000ea  f7fffffe          BL       __2sprintf
;;;856    			
;;;857    			for( i = 0; i < strlen(displayStr); i++  ){  
0000ee  2500              MOVS     r5,#0
0000f0  e007              B        |L7.258|
                  |L7.242|
;;;858    			
;;;859    				if( displayStr[i] == 0x2e ){	
0000f2  48c8              LDR      r0,|L7.1044|
0000f4  5d40              LDRB     r0,[r0,r5]
0000f6  282e              CMP      r0,#0x2e
0000f8  d102              BNE      |L7.256|
;;;860    				
;;;861    					flag_dot = 1;	
0000fa  2001              MOVS     r0,#1
0000fc  9001              STR      r0,[sp,#4]
;;;862    					
;;;863    					break;
0000fe  e005              B        |L7.268|
                  |L7.256|
000100  1c6d              ADDS     r5,r5,#1              ;857
                  |L7.258|
000102  48c4              LDR      r0,|L7.1044|
000104  f7fffffe          BL       strlen
000108  42a8              CMP      r0,r5                 ;857
00010a  d8f2              BHI      |L7.242|
                  |L7.268|
00010c  bf00              NOP      
;;;864    				}			
;;;865    			}
;;;866    			for( i = 0; i < strlen(float_char); i++  ){ 
00010e  2500              MOVS     r5,#0
000110  e006              B        |L7.288|
                  |L7.274|
;;;867    			
;;;868    				if( float_char[i] == 0x2e ){	
000112  a802              ADD      r0,sp,#8
000114  5d40              LDRB     r0,[r0,r5]
000116  282e              CMP      r0,#0x2e
000118  d101              BNE      |L7.286|
;;;869    				
;;;870    					dot_loc = i;	
00011a  462e              MOV      r6,r5
;;;871    					
;;;872    					break;
00011c  e005              B        |L7.298|
                  |L7.286|
00011e  1c6d              ADDS     r5,r5,#1              ;866
                  |L7.288|
000120  a802              ADD      r0,sp,#8              ;866
000122  f7fffffe          BL       strlen
000126  42a8              CMP      r0,r5                 ;866
000128  d8f3              BHI      |L7.274|
                  |L7.298|
00012a  bf00              NOP      
;;;873    				}			
;;;874    			}	
;;;875    			switch( SGhListSYS[temp].d_ID ){
00012c  eb0800c8          ADD      r0,r8,r8,LSL #3
000130  49b7              LDR      r1,|L7.1040|
000132  f8510030          LDR      r0,[r1,r0,LSL #3]
000136  2810              CMP      r0,#0x10
000138  d06d              BEQ      |L7.534|
00013a  dc06              BGT      |L7.330|
00013c  2807              CMP      r0,#7
00013e  d009              BEQ      |L7.340|
000140  280a              CMP      r0,#0xa
000142  d069              BEQ      |L7.536|
000144  280d              CMP      r0,#0xd
                  |L7.326|
000146  d140              BNE      |L7.458|
000148  e180              B        |L7.1100|
                  |L7.330|
00014a  2813              CMP      r0,#0x13
00014c  d078              BEQ      |L7.576|
00014e  2816              CMP      r0,#0x16
000150  d1f9              BNE      |L7.326|
000152  e358              B        |L7.2054|
                  |L7.340|
;;;876    				
;;;877    				case 7:   
;;;878    				//======================================07 电压上限========================================
;;;879    					if( flag_null ){   
000154  f1b90f00          CMP      r9,#0
000158  d008              BEQ      |L7.364|
;;;880    					
;;;881    						strcpy( displayStr,"0.000"  );
00015a  a1b1              ADR      r1,|L7.1056|
00015c  48ad              LDR      r0,|L7.1044|
00015e  f7fffffe          BL       strcpy
;;;882    						
;;;883    						CLists.SYS_UL_V = 0 * 1000;
000162  2000              MOVS     r0,#0
000164  49b0              LDR      r1,|L7.1064|
000166  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
00016a  e0a3              B        |L7.692|
                  |L7.364|
;;;884    						
;;;885    					}else{
;;;886    						
;;;887    						num_float = atof( SGhListSYS[10].f_EName );
00016c  48af              LDR      r0,|L7.1068|
00016e  f7fffffe          BL       __hardfp_atof
000172  eeb09a40          VMOV.F32 s18,s0
000176  eef09a60          VMOV.F32 s19,s1
00017a  ec510b19          VMOV     r0,r1,d9
00017e  f7fffffe          BL       __aeabi_d2f
000182  ee080a90          VMOV     s17,r0
;;;888    						
;;;889    						if( temp_float - num_float <= 0 ){
000186  ee380a68          VSUB.F32 s0,s16,s17
00018a  eeb50ac0          VCMPE.F32 s0,#0.0
00018e  eef1fa10          VMRS     APSR_nzcv,FPSCR
000192  d80c              BHI      |L7.430|
;;;890    		
;;;891    							strcpy( SGhListSYS[10].f_SName, "0.000"  );
000194  a1a2              ADR      r1,|L7.1056|
000196  48a5              LDR      r0,|L7.1068|
000198  3814              SUBS     r0,r0,#0x14
00019a  f7fffffe          BL       strcpy
;;;892    							
;;;893    							strcpy( SGhListSYS[10].f_EName, "0.000"  );
00019e  a1a0              ADR      r1,|L7.1056|
0001a0  48a2              LDR      r0,|L7.1068|
0001a2  f7fffffe          BL       strcpy
;;;894    							
;;;895    							CLists.SYS_LL_V = 0 * 1000;
0001a6  2000              MOVS     r0,#0
0001a8  499f              LDR      r1,|L7.1064|
0001aa  f8c10100          STR      r0,[r1,#0x100]  ; CLists
                  |L7.430|
;;;896    						}
;;;897    						
;;;898    						if( !flag_dot ){      	
0001ae  f89d0004          LDRB     r0,[sp,#4]
0001b2  bb78              CBNZ     r0,|L7.532|
;;;899    							
;;;900    							if( temp_int > 60  ){   //最大值
0001b4  2c3c              CMP      r4,#0x3c
0001b6  dd09              BLE      |L7.460|
;;;901    							
;;;902    								strcpy( displayStr, "60.000"  );
0001b8  a19d              ADR      r1,|L7.1072|
0001ba  4896              LDR      r0,|L7.1044|
0001bc  f7fffffe          BL       strcpy
;;;903    								
;;;904    								CLists.SYS_UL_V = 60 * 1000;
0001c0  f64e2060          MOV      r0,#0xea60
0001c4  4998              LDR      r1,|L7.1064|
0001c6  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
                  |L7.458|
;;;905    								
;;;906    								break;
0001ca  e3e9              B        |L7.2464|
                  |L7.460|
;;;907    							}
;;;908    							if( temp_int <= 0 ){    //最小值
0001cc  2c00              CMP      r4,#0
0001ce  dc08              BGT      |L7.482|
;;;909    							
;;;910    								strcpy( displayStr, "0.000"  );
0001d0  a193              ADR      r1,|L7.1056|
0001d2  4890              LDR      r0,|L7.1044|
0001d4  f7fffffe          BL       strcpy
;;;911    								
;;;912    								CLists.SYS_UL_V = 0 * 1000;
0001d8  2000              MOVS     r0,#0
0001da  4993              LDR      r1,|L7.1064|
0001dc  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
;;;913    								
;;;914    								break;
0001e0  e3de              B        |L7.2464|
                  |L7.482|
;;;915    							}						
;;;916    							if( strlen(int_char) > 2){
0001e2  a805              ADD      r0,sp,#0x14
0001e4  f7fffffe          BL       strlen
0001e8  2802              CMP      r0,#2
0001ea  d904              BLS      |L7.502|
;;;917    								
;;;918    								strcat( int_char, ".0");
0001ec  a192              ADR      r1,|L7.1080|
0001ee  a805              ADD      r0,sp,#0x14
0001f0  f7fffffe          BL       strcat
0001f4  e003              B        |L7.510|
                  |L7.502|
;;;919    								
;;;920    							}else{
;;;921    								
;;;922    								strcat( int_char, ".000");
0001f6  a191              ADR      r1,|L7.1084|
0001f8  a805              ADD      r0,sp,#0x14
0001fa  f7fffffe          BL       strcat
                  |L7.510|
;;;923    							}
;;;924    							strcpy( displayStr, int_char );
0001fe  a905              ADD      r1,sp,#0x14
000200  4884              LDR      r0,|L7.1044|
000202  f7fffffe          BL       strcpy
;;;925    							
;;;926    							CLists.SYS_UL_V = temp_int * 1000;
000206  f44f707a          MOV      r0,#0x3e8
00020a  4360              MULS     r0,r4,r0
00020c  4986              LDR      r1,|L7.1064|
00020e  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
000212  e04f              B        |L7.692|
                  |L7.532|
000214  e001              B        |L7.538|
                  |L7.534|
000216  e1bb              B        |L7.1424|
                  |L7.536|
000218  e04d              B        |L7.694|
                  |L7.538|
;;;927    							
;;;928    						}else{
;;;929    
;;;930    							if( temp_float - 60 > 0 ){   //最大值
00021a  ed9f0a8a          VLDR     s0,|L7.1092|
00021e  ee380a40          VSUB.F32 s0,s16,s0
000222  eeb50ac0          VCMPE.F32 s0,#0.0
000226  eef1fa10          VMRS     APSR_nzcv,FPSCR
00022a  dd0a              BLE      |L7.578|
;;;931    							
;;;932    								strcpy( displayStr, "60.000"  );
00022c  a180              ADR      r1,|L7.1072|
00022e  4879              LDR      r0,|L7.1044|
000230  f7fffffe          BL       strcpy
;;;933    								
;;;934    								CLists.SYS_UL_V = 60 * 1000;
000234  f64e2060          MOV      r0,#0xea60
000238  497b              LDR      r1,|L7.1064|
00023a  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
;;;935    								
;;;936    								break;
00023e  e3af              B        |L7.2464|
                  |L7.576|
000240  e226              B        |L7.1680|
                  |L7.578|
;;;937    							}
;;;938    							
;;;939    							if( temp_float <= 0 ){    //最小值
000242  eeb58ac0          VCMPE.F32 s16,#0.0
000246  eef1fa10          VMRS     APSR_nzcv,FPSCR
00024a  d808              BHI      |L7.606|
;;;940    							
;;;941    								strcpy( displayStr, "0.000"  );
00024c  a174              ADR      r1,|L7.1056|
00024e  4871              LDR      r0,|L7.1044|
000250  f7fffffe          BL       strcpy
;;;942    								
;;;943    								CLists.SYS_UL_V = 0 * 1000;
000254  2000              MOVS     r0,#0
000256  4974              LDR      r1,|L7.1064|
000258  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
;;;944    								
;;;945    								break;
00025c  e3a0              B        |L7.2464|
                  |L7.606|
;;;946    							}
;;;947    							NUM = strlen(float_char) - dot_loc - 1;
00025e  a802              ADD      r0,sp,#8
000260  f7fffffe          BL       strlen
000264  1b80              SUBS     r0,r0,r6
000266  f1a00a01          SUB      r10,r0,#1
;;;948    							
;;;949    							for( i = 0; i < 3 - NUM; i++ ){
00026a  2500              MOVS     r5,#0
00026c  e004              B        |L7.632|
                  |L7.622|
;;;950    								
;;;951    								strcat( float_char, "0");
00026e  a16d              ADR      r1,|L7.1060|
000270  a802              ADD      r0,sp,#8
000272  f7fffffe          BL       strcat
000276  1c6d              ADDS     r5,r5,#1              ;949
                  |L7.632|
000278  f1ca0003          RSB      r0,r10,#3             ;949
00027c  42a8              CMP      r0,r5                 ;949
00027e  dcf6              BGT      |L7.622|
;;;952    							}	
;;;953    							NUM = ( dot_loc > 1 ) ? 6 : 5;
000280  2e01              CMP      r6,#1
000282  dd01              BLE      |L7.648|
000284  2006              MOVS     r0,#6
000286  e000              B        |L7.650|
                  |L7.648|
000288  2005              MOVS     r0,#5
                  |L7.650|
00028a  4682              MOV      r10,r0
;;;954    							
;;;955    							strncpy( int_char, float_char, NUM );
00028c  4652              MOV      r2,r10
00028e  a902              ADD      r1,sp,#8
000290  a805              ADD      r0,sp,#0x14
000292  f7fffffe          BL       strncpy
;;;956    							
;;;957    							strcpy( displayStr, int_char );	
000296  a905              ADD      r1,sp,#0x14
000298  485e              LDR      r0,|L7.1044|
00029a  f7fffffe          BL       strcpy
;;;958    							
;;;959    							CLists.SYS_UL_V = temp_float * 1000;
00029e  ed9f0a6a          VLDR     s0,|L7.1096|
0002a2  ee280a00          VMUL.F32 s0,s16,s0
0002a6  eebc0ac0          VCVT.U32.F32 s0,s0
0002aa  ee100a10          VMOV     r0,s0
0002ae  495e              LDR      r1,|L7.1064|
0002b0  f8c100fc          STR      r0,[r1,#0xfc]  ; CLists
                  |L7.692|
;;;960    						}
;;;961    					}
;;;962    				
;;;963    				break;
0002b4  e374              B        |L7.2464|
                  |L7.694|
;;;964    				
;;;965    				case 10:
;;;966    				//======================================10 电压下限========================================
;;;967    					if( flag_null ){   
0002b6  f1b90f00          CMP      r9,#0
0002ba  d008              BEQ      |L7.718|
;;;968    					
;;;969    						strcpy( displayStr,"0.000"  );
0002bc  a158              ADR      r1,|L7.1056|
0002be  4855              LDR      r0,|L7.1044|
0002c0  f7fffffe          BL       strcpy
;;;970    						
;;;971    						CLists.SYS_LL_V = 0 * 1000;
0002c4  2000              MOVS     r0,#0
0002c6  4958              LDR      r1,|L7.1064|
0002c8  f8c10100          STR      r0,[r1,#0x100]  ; CLists
0002cc  e09d              B        |L7.1034|
                  |L7.718|
;;;972    						
;;;973    					}else{
;;;974    
;;;975    						num_float = atof( SGhListSYS[7].f_EName );
0002ce  4857              LDR      r0,|L7.1068|
0002d0  38d8              SUBS     r0,r0,#0xd8
0002d2  f7fffffe          BL       __hardfp_atof
0002d6  eeb09a40          VMOV.F32 s18,s0
0002da  eef09a60          VMOV.F32 s19,s1
0002de  ec510b19          VMOV     r0,r1,d9
0002e2  f7fffffe          BL       __aeabi_d2f
0002e6  ee080a90          VMOV     s17,r0
;;;976    						
;;;977    							if( num_float - temp_float <= 0 ){
0002ea  ee380ac8          VSUB.F32 s0,s17,s16
0002ee  eeb50ac0          VCMPE.F32 s0,#0.0
0002f2  eef1fa10          VMRS     APSR_nzcv,FPSCR
0002f6  d808              BHI      |L7.778|
;;;978    							
;;;979    								strcpy( displayStr, "0.000"  );						
0002f8  a149              ADR      r1,|L7.1056|
0002fa  4846              LDR      r0,|L7.1044|
0002fc  f7fffffe          BL       strcpy
;;;980    									
;;;981    								CLists.SYS_LL_V = 0 * 1000;					
000300  2000              MOVS     r0,#0
000302  4949              LDR      r1,|L7.1064|
000304  f8c10100          STR      r0,[r1,#0x100]  ; CLists
;;;982    								
;;;983    								break;
000308  e34a              B        |L7.2464|
                  |L7.778|
;;;984    						}
;;;985    							
;;;986    						if( !flag_dot ){      	
00030a  f89d0004          LDRB     r0,[sp,#4]
00030e  bb78              CBNZ     r0,|L7.880|
;;;987    						
;;;988    						
;;;989    							if( temp_int > 60  ){   //最大值
000310  2c3c              CMP      r4,#0x3c
000312  dd09              BLE      |L7.808|
;;;990    							
;;;991    								strcpy( displayStr, "60.000"  );
000314  a146              ADR      r1,|L7.1072|
000316  483f              LDR      r0,|L7.1044|
000318  f7fffffe          BL       strcpy
;;;992    								
;;;993    								CLists.SYS_LL_V = 60 * 1000;
00031c  f64e2060          MOV      r0,#0xea60
000320  4941              LDR      r1,|L7.1064|
000322  f8c10100          STR      r0,[r1,#0x100]  ; CLists
;;;994    								
;;;995    								break;
000326  e33b              B        |L7.2464|
                  |L7.808|
;;;996    							}
;;;997    							if( temp_int <= 0 ){    //最小值
000328  2c00              CMP      r4,#0
00032a  dc08              BGT      |L7.830|
;;;998    							
;;;999    								strcpy( displayStr, "0.000"  );
00032c  a13c              ADR      r1,|L7.1056|
00032e  4839              LDR      r0,|L7.1044|
000330  f7fffffe          BL       strcpy
;;;1000   								
;;;1001   								CLists.SYS_LL_V = 0 * 1000;
000334  2000              MOVS     r0,#0
000336  493c              LDR      r1,|L7.1064|
000338  f8c10100          STR      r0,[r1,#0x100]  ; CLists
;;;1002   								
;;;1003   								break;
00033c  e330              B        |L7.2464|
                  |L7.830|
;;;1004   							}						
;;;1005   							if( strlen(int_char) > 2){
00033e  a805              ADD      r0,sp,#0x14
000340  f7fffffe          BL       strlen
000344  2802              CMP      r0,#2
000346  d904              BLS      |L7.850|
;;;1006   								
;;;1007   								strcat( int_char, ".0");
000348  a13b              ADR      r1,|L7.1080|
00034a  a805              ADD      r0,sp,#0x14
00034c  f7fffffe          BL       strcat
000350  e003              B        |L7.858|
                  |L7.850|
;;;1008   								
;;;1009   							}else{
;;;1010   								
;;;1011   								strcat( int_char, ".000");
000352  a13a              ADR      r1,|L7.1084|
000354  a805              ADD      r0,sp,#0x14
000356  f7fffffe          BL       strcat
                  |L7.858|
;;;1012   							}
;;;1013   							strcpy( displayStr, int_char );
00035a  a905              ADD      r1,sp,#0x14
00035c  482d              LDR      r0,|L7.1044|
00035e  f7fffffe          BL       strcpy
;;;1014   							
;;;1015   							CLists.SYS_LL_V = temp_int * 1000;
000362  f44f707a          MOV      r0,#0x3e8
000366  4360              MULS     r0,r4,r0
000368  492f              LDR      r1,|L7.1064|
00036a  f8c10100          STR      r0,[r1,#0x100]  ; CLists
00036e  e04c              B        |L7.1034|
                  |L7.880|
000370  e7ff              B        |L7.882|
                  |L7.882|
;;;1016   							
;;;1017   						}else{
;;;1018   
;;;1019   							if( temp_float - 60 > 0 ){   //最大值
000372  ed9f0a34          VLDR     s0,|L7.1092|
000376  ee380a40          VSUB.F32 s0,s16,s0
00037a  eeb50ac0          VCMPE.F32 s0,#0.0
00037e  eef1fa10          VMRS     APSR_nzcv,FPSCR
000382  dd09              BLE      |L7.920|
;;;1020   							
;;;1021   								strcpy( displayStr, "60.000"  );
000384  a12a              ADR      r1,|L7.1072|
000386  4823              LDR      r0,|L7.1044|
000388  f7fffffe          BL       strcpy
;;;1022   								
;;;1023   								CLists.SYS_LL_V = 60 * 1000;
00038c  f64e2060          MOV      r0,#0xea60
000390  4925              LDR      r1,|L7.1064|
000392  f8c10100          STR      r0,[r1,#0x100]  ; CLists
;;;1024   								
;;;1025   								break;
000396  e303              B        |L7.2464|
                  |L7.920|
;;;1026   							}
;;;1027   							
;;;1028   							if( temp_float <= 0 ){    //最小值
000398  eeb58ac0          VCMPE.F32 s16,#0.0
00039c  eef1fa10          VMRS     APSR_nzcv,FPSCR
0003a0  d808              BHI      |L7.948|
;;;1029   							
;;;1030   								strcpy( displayStr, "0.000"  );
0003a2  a11f              ADR      r1,|L7.1056|
0003a4  481b              LDR      r0,|L7.1044|
0003a6  f7fffffe          BL       strcpy
;;;1031   								
;;;1032   								CLists.SYS_LL_V = 0 * 1000;
0003aa  2000              MOVS     r0,#0
0003ac  491e              LDR      r1,|L7.1064|
0003ae  f8c10100          STR      r0,[r1,#0x100]  ; CLists
;;;1033   								
;;;1034   								break;
0003b2  e2f5              B        |L7.2464|
                  |L7.948|
;;;1035   							}
;;;1036   							NUM = strlen(float_char) - dot_loc - 1;
0003b4  a802              ADD      r0,sp,#8
0003b6  f7fffffe          BL       strlen
0003ba  1b80              SUBS     r0,r0,r6
0003bc  f1a00a01          SUB      r10,r0,#1
;;;1037   							
;;;1038   							for( i = 0; i < 3 - NUM; i++ ){
0003c0  2500              MOVS     r5,#0
0003c2  e004              B        |L7.974|
                  |L7.964|
;;;1039   								
;;;1040   								strcat( float_char, "0");
0003c4  a117              ADR      r1,|L7.1060|
0003c6  a802              ADD      r0,sp,#8
0003c8  f7fffffe          BL       strcat
0003cc  1c6d              ADDS     r5,r5,#1              ;1038
                  |L7.974|
0003ce  f1ca0003          RSB      r0,r10,#3             ;1038
0003d2  42a8              CMP      r0,r5                 ;1038
0003d4  dcf6              BGT      |L7.964|
;;;1041   							}	
;;;1042   							NUM = ( dot_loc > 1 ) ? 6 : 5;
0003d6  2e01              CMP      r6,#1
0003d8  dd01              BLE      |L7.990|
0003da  2006              MOVS     r0,#6
0003dc  e000              B        |L7.992|
                  |L7.990|
0003de  2005              MOVS     r0,#5
                  |L7.992|
0003e0  4682              MOV      r10,r0
;;;1043   							
;;;1044   							strncpy( int_char, float_char, NUM );
0003e2  4652              MOV      r2,r10
0003e4  a902              ADD      r1,sp,#8
0003e6  a805              ADD      r0,sp,#0x14
0003e8  f7fffffe          BL       strncpy
;;;1045   							
;;;1046   							strcpy( displayStr, int_char );	
0003ec  a905              ADD      r1,sp,#0x14
0003ee  4809              LDR      r0,|L7.1044|
0003f0  f7fffffe          BL       strcpy
;;;1047   							
;;;1048   							CLists.SYS_LL_V = temp_float * 1000;
0003f4  ed9f0a14          VLDR     s0,|L7.1096|
0003f8  ee280a00          VMUL.F32 s0,s16,s0
0003fc  eebc0ac0          VCVT.U32.F32 s0,s0
000400  ee100a10          VMOV     r0,s0
000404  4908              LDR      r1,|L7.1064|
000406  f8c10100          STR      r0,[r1,#0x100]  ; CLists
                  |L7.1034|
;;;1049   							
;;;1050   						}
;;;1051   					}
;;;1052   				
;;;1053   				break;	
00040a  e2c9              B        |L7.2464|
                  |L7.1036|
                          DCD      FLAG_INPUTAUTH
                  |L7.1040|
                          DCD      SGhListSYS
                  |L7.1044|
                          DCD      displayStr
                  |L7.1048|
000418  256400            DCB      "%d",0
00041b  00                DCB      0
                  |L7.1052|
00041c  256600            DCB      "%f",0
00041f  00                DCB      0
                  |L7.1056|
000420  302e3030          DCB      "0.00"
                  |L7.1060|
000424  3000              DCB      "0",0
000426  00                DCB      0
000427  00                DCB      0
                  |L7.1064|
                          DCD      CLists
                  |L7.1068|
                          DCD      SGhListSYS+0x2f0
                  |L7.1072|
000430  36302e30          DCB      "60.000",0
000434  303000  
000437  00                DCB      0
                  |L7.1080|
000438  2e3000            DCB      ".0",0
00043b  00                DCB      0
                  |L7.1084|
00043c  2e303030          DCB      ".000",0
000440  00      
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L7.1092|
000444  42700000          DCFS     0x42700000 ; 60
                  |L7.1096|
000448  447a0000          DCFS     0x447a0000 ; 1000
                  |L7.1100|
;;;1054   				
;;;1055   				case 13:
;;;1056   				//======================================13 内阻上限========================================
;;;1057   					if( flag_null ){   
00044c  f1b90f00          CMP      r9,#0
000450  d009              BEQ      |L7.1126|
;;;1058   					
;;;1059   						strcpy( displayStr,"0"  );
000452  48fb              LDR      r0,|L7.2112|
000454  f2af0134          ADR      r1,|L7.1060|
000458  8809              LDRH     r1,[r1,#0]
00045a  8001              STRH     r1,[r0,#0]
;;;1060   						
;;;1061   						CLists.SYS_UL_II = 0;
00045c  2000              MOVS     r0,#0
00045e  49f9              LDR      r1,|L7.2116|
000460  f8a10104          STRH     r0,[r1,#0x104]
000464  e093              B        |L7.1422|
                  |L7.1126|
;;;1062   						
;;;1063   					}else{
;;;1064   						
;;;1065   						num_int = atoi( SGhListSYS[17].f_EName );
000466  48f8              LDR      r0,|L7.2120|
000468  f7fffffe          BL       atoi
00046c  4607              MOV      r7,r0
;;;1066   						
;;;1067   						if( !flag_dot ){      	
00046e  f89d0004          LDRB     r0,[sp,#4]
000472  bbd0              CBNZ     r0,|L7.1258|
;;;1068   							
;;;1069   							if( temp_int > 15  ){   //最大值
000474  2c0f              CMP      r4,#0xf
000476  dd1b              BLE      |L7.1200|
;;;1070   							
;;;1071   								strcpy( displayStr, "15"  );
000478  a1f4              ADR      r1,|L7.2124|
00047a  48f1              LDR      r0,|L7.2112|
00047c  f7fffffe          BL       strcpy
;;;1072   								
;;;1073   								CLists.SYS_UL_II = 15;
000480  200f              MOVS     r0,#0xf
000482  49f0              LDR      r1,|L7.2116|
000484  f8a10104          STRH     r0,[r1,#0x104]
;;;1074   								
;;;1075   								if( 15 - num_int <= 0 ){
000488  f1c7000f          RSB      r0,r7,#0xf
00048c  2800              CMP      r0,#0
00048e  dc0e              BGT      |L7.1198|
;;;1076   									
;;;1077   									strcpy( SGhListSYS[17].f_SName, "0"  );
000490  48ef              LDR      r0,|L7.2128|
000492  f2af0170          ADR      r1,|L7.1060|
000496  8809              LDRH     r1,[r1,#0]
000498  f8a014d4          STRH     r1,[r0,#0x4d4]
;;;1078   							
;;;1079   									strcpy( SGhListSYS[17].f_EName, "0"  );
00049c  f2af017c          ADR      r1,|L7.1060|
0004a0  8809              LDRH     r1,[r1,#0]
0004a2  f8a014e8          STRH     r1,[r0,#0x4e8]
;;;1080   									
;;;1081   									CLists.SYS_LL_IR = 0;
0004a6  2000              MOVS     r0,#0
0004a8  49e6              LDR      r1,|L7.2116|
0004aa  f8a10106          STRH     r0,[r1,#0x106]
                  |L7.1198|
;;;1082   								}
;;;1083   								
;;;1084   								break;
0004ae  e277              B        |L7.2464|
                  |L7.1200|
;;;1085   							}
;;;1086   							if( temp_int <= 0 ){    //最小值
0004b0  2c00              CMP      r4,#0
0004b2  dc1b              BGT      |L7.1260|
;;;1087   							
;;;1088   								strcpy( displayStr, "0"  );
0004b4  48e2              LDR      r0,|L7.2112|
0004b6  f2af0194          ADR      r1,|L7.1060|
0004ba  8809              LDRH     r1,[r1,#0]
0004bc  8001              STRH     r1,[r0,#0]
;;;1089   								
;;;1090   								CLists.SYS_UL_II = 0 ;
0004be  2000              MOVS     r0,#0
0004c0  49e0              LDR      r1,|L7.2116|
0004c2  f8a10104          STRH     r0,[r1,#0x104]
;;;1091   								
;;;1092   								if( num_int >= 0 ){
0004c6  2f00              CMP      r7,#0
0004c8  db0e              BLT      |L7.1256|
;;;1093   									
;;;1094   									strcpy( SGhListSYS[17].f_SName, "0"  );
0004ca  48e1              LDR      r0,|L7.2128|
0004cc  f2af01ac          ADR      r1,|L7.1060|
0004d0  8809              LDRH     r1,[r1,#0]
0004d2  f8a014d4          STRH     r1,[r0,#0x4d4]
;;;1095   							
;;;1096   									strcpy( SGhListSYS[17].f_EName, "0"  );
0004d6  f2af01b4          ADR      r1,|L7.1060|
0004da  8809              LDRH     r1,[r1,#0]
0004dc  f8a014e8          STRH     r1,[r0,#0x4e8]
;;;1097   									
;;;1098   									CLists.SYS_LL_IR = 0;
0004e0  2000              MOVS     r0,#0
0004e2  49d8              LDR      r1,|L7.2116|
0004e4  f8a10106          STRH     r0,[r1,#0x106]
                  |L7.1256|
;;;1099   								}
;;;1100   								
;;;1101   								break;
0004e8  e25a              B        |L7.2464|
                  |L7.1258|
0004ea  e007              B        |L7.1276|
                  |L7.1260|
;;;1102   							}						
;;;1103   						/* 	if( strlen(int_char) > 3){
;;;1104   								
;;;1105   								strcat( int_char, ".0");
;;;1106   								
;;;1107   							}else{
;;;1108   								
;;;1109   								strcat( int_char, ".00");
;;;1110   							} */
;;;1111   							strcpy( displayStr, int_char );
0004ec  a905              ADD      r1,sp,#0x14
0004ee  48d4              LDR      r0,|L7.2112|
0004f0  f7fffffe          BL       strcpy
;;;1112   							
;;;1113   							CLists.SYS_UL_II = temp_int;
0004f4  49d3              LDR      r1,|L7.2116|
0004f6  f8a14104          STRH     r4,[r1,#0x104]
0004fa  e036              B        |L7.1386|
                  |L7.1276|
;;;1114   							
;;;1115   						}else{
;;;1116   
;;;1117   							if( temp_float - 15 > 0 ){   //最大值
0004fc  eeb20a0e          VMOV.F32 s0,#15.00000000
000500  ee380a40          VSUB.F32 s0,s16,s0
000504  eeb50ac0          VCMPE.F32 s0,#0.0
000508  eef1fa10          VMRS     APSR_nzcv,FPSCR
00050c  dd08              BLE      |L7.1312|
;;;1118   							
;;;1119   								strcpy( displayStr, "15"  );
00050e  a1cf              ADR      r1,|L7.2124|
000510  48cb              LDR      r0,|L7.2112|
000512  f7fffffe          BL       strcpy
;;;1120   								
;;;1121   								CLists.SYS_UL_II = 15;
000516  200f              MOVS     r0,#0xf
000518  49ca              LDR      r1,|L7.2116|
00051a  f8a10104          STRH     r0,[r1,#0x104]
;;;1122   								
;;;1123   								break;
00051e  e23f              B        |L7.2464|
                  |L7.1312|
;;;1124   							}
;;;1125   							if( temp_float <= 0 ){    //最小值
000520  eeb58ac0          VCMPE.F32 s16,#0.0
000524  eef1fa10          VMRS     APSR_nzcv,FPSCR
000528  d809              BHI      |L7.1342|
;;;1126   							
;;;1127   								strcpy( displayStr, "0"  );
00052a  48c5              LDR      r0,|L7.2112|
00052c  f2af110c          ADR      r1,|L7.1060|
000530  8809              LDRH     r1,[r1,#0]
000532  8001              STRH     r1,[r0,#0]
;;;1128   								
;;;1129   								CLists.SYS_UL_II = 0;
000534  2000              MOVS     r0,#0
000536  49c3              LDR      r1,|L7.2116|
000538  f8a10104          STRH     r0,[r1,#0x104]
;;;1130   								
;;;1131   								break;
00053c  e230              B        |L7.2464|
                  |L7.1342|
;;;1132   							}
;;;1133   							if( dot_loc + 1 == strlen(displayStr) ){							
00053e  48c0              LDR      r0,|L7.2112|
000540  f7fffffe          BL       strlen
000544  1c71              ADDS     r1,r6,#1
000546  4288              CMP      r0,r1
000548  d006              BEQ      |L7.1368|
;;;1134   										
;;;1135   							}else{
;;;1136   								
;;;1137   								temp_int++;
00054a  1c64              ADDS     r4,r4,#1
;;;1138   								
;;;1139   								sprintf( int_char , "%d" , temp_int);		
00054c  4622              MOV      r2,r4
00054e  f2af1138          ADR      r1,|L7.1048|
000552  a805              ADD      r0,sp,#0x14
000554  f7fffffe          BL       __2sprintf
                  |L7.1368|
;;;1140   							}
;;;1141   							
;;;1142   							strcpy( displayStr, int_char ); 
000558  a905              ADD      r1,sp,#0x14
00055a  48b9              LDR      r0,|L7.2112|
00055c  f7fffffe          BL       strcpy
;;;1143   							
;;;1144   						/* 	NUM = strlen(float_char) - dot_loc - 1;
;;;1145   							
;;;1146   							for( i = 0; i < 3 - NUM; i++ ){
;;;1147   								
;;;1148   								strcat( float_char, "0");
;;;1149   							}	
;;;1150   							NUM = ( dot_loc > 1 ) ? 6 : 5; */
;;;1151   							
;;;1152   							strncpy( displayStr, float_char, NUM );
000560  4652              MOV      r2,r10
000562  a902              ADD      r1,sp,#8
000564  48b6              LDR      r0,|L7.2112|
000566  f7fffffe          BL       strncpy
                  |L7.1386|
;;;1153   							
;;;1154   							//CLists.SYS_UL_II = temp_float * 1000;
;;;1155   						}					
;;;1156   						
;;;1157   						if( temp_int - num_int <= 0 ){
00056a  1be0              SUBS     r0,r4,r7
00056c  2800              CMP      r0,#0
00056e  dc0e              BGT      |L7.1422|
;;;1158   		
;;;1159   							strcpy( SGhListSYS[17].f_SName, "0"  );
000570  48b7              LDR      r0,|L7.2128|
000572  f2af1150          ADR      r1,|L7.1060|
000576  8809              LDRH     r1,[r1,#0]
000578  f8a014d4          STRH     r1,[r0,#0x4d4]
;;;1160   							
;;;1161   							strcpy( SGhListSYS[17].f_EName, "0"  );
00057c  f2af115c          ADR      r1,|L7.1060|
000580  8809              LDRH     r1,[r1,#0]
000582  f8a014e8          STRH     r1,[r0,#0x4e8]
;;;1162   							
;;;1163   							CLists.SYS_LL_IR = 0;
000586  2000              MOVS     r0,#0
000588  49ae              LDR      r1,|L7.2116|
00058a  f8a10106          STRH     r0,[r1,#0x106]
                  |L7.1422|
;;;1164   						}
;;;1165   					}
;;;1166   				
;;;1167   				break;	
00058e  e207              B        |L7.2464|
                  |L7.1424|
;;;1168   				
;;;1169   				case 16:
;;;1170   				//======================================17 内阻下限========================================			
;;;1171   					if( flag_null ){
000590  f1b90f00          CMP      r9,#0
000594  d009              BEQ      |L7.1450|
;;;1172   						
;;;1173   						strcpy( displayStr,"0"  );
000596  48aa              LDR      r0,|L7.2112|
000598  f2af1178          ADR      r1,|L7.1060|
00059c  8809              LDRH     r1,[r1,#0]
00059e  8001              STRH     r1,[r0,#0]
;;;1174   						
;;;1175   						CLists.SYS_LL_IR = 0 * 1000;
0005a0  2000              MOVS     r0,#0
0005a2  49a8              LDR      r1,|L7.2116|
0005a4  f8a10106          STRH     r0,[r1,#0x106]
0005a8  e071              B        |L7.1678|
                  |L7.1450|
;;;1176   						
;;;1177   					}else{	
;;;1178   					
;;;1179   						num_int = atoi( SGhListSYS[13].f_EName );
0005aa  48aa              LDR      r0,|L7.2132|
0005ac  f7fffffe          BL       atoi
0005b0  4607              MOV      r7,r0
;;;1180   						
;;;1181   						if( !flag_dot ){      	
0005b2  f89d0004          LDRB     r0,[sp,#4]
0005b6  bb40              CBNZ     r0,|L7.1546|
;;;1182   							
;;;1183   							if( temp_int > 15  ){   //最大值
0005b8  2c0f              CMP      r4,#0xf
0005ba  dd15              BLE      |L7.1512|
;;;1184   							
;;;1185   								strcpy( displayStr, "15"  );
0005bc  a1a3              ADR      r1,|L7.2124|
0005be  48a0              LDR      r0,|L7.2112|
0005c0  f7fffffe          BL       strcpy
;;;1186   								
;;;1187   								CLists.SYS_LL_IR = 15;
0005c4  200f              MOVS     r0,#0xf
0005c6  499f              LDR      r1,|L7.2116|
0005c8  f8a10106          STRH     r0,[r1,#0x106]
;;;1188   								
;;;1189   								if( num_int - 15 <= 0 ){
0005cc  f1a7000f          SUB      r0,r7,#0xf
0005d0  2800              CMP      r0,#0
0005d2  dc08              BGT      |L7.1510|
;;;1190   		
;;;1191   									strcpy( displayStr, "0"  );
0005d4  489a              LDR      r0,|L7.2112|
0005d6  f2af11b4          ADR      r1,|L7.1060|
0005da  8809              LDRH     r1,[r1,#0]
0005dc  8001              STRH     r1,[r0,#0]
;;;1192   										
;;;1193   									CLists.SYS_LL_IR = 0 ;			
0005de  2000              MOVS     r0,#0
0005e0  4998              LDR      r1,|L7.2116|
0005e2  f8a10106          STRH     r0,[r1,#0x106]
                  |L7.1510|
;;;1194   								}
;;;1195   								
;;;1196   								break;
0005e6  e1db              B        |L7.2464|
                  |L7.1512|
;;;1197   							}
;;;1198   							if( temp_int <= 0 ){    //最小值
0005e8  2c00              CMP      r4,#0
0005ea  dc09              BGT      |L7.1536|
;;;1199   							
;;;1200   								strcpy( displayStr, "0"  );
0005ec  4894              LDR      r0,|L7.2112|
0005ee  f2af11cc          ADR      r1,|L7.1060|
0005f2  8809              LDRH     r1,[r1,#0]
0005f4  8001              STRH     r1,[r0,#0]
;;;1201   								
;;;1202   								CLists.SYS_LL_IR = 0;			
0005f6  2000              MOVS     r0,#0
0005f8  4992              LDR      r1,|L7.2116|
0005fa  f8a10106          STRH     r0,[r1,#0x106]
;;;1203   								
;;;1204   								break;
0005fe  e1cf              B        |L7.2464|
                  |L7.1536|
;;;1205   							}						
;;;1206   							/* if( strlen(int_char) > 2){
;;;1207   								
;;;1208   								strcat( int_char, ".0");
;;;1209   								
;;;1210   							}else{
;;;1211   								
;;;1212   								strcat( int_char, ".000");
;;;1213   								
;;;1214   							} */
;;;1215   							strcpy( displayStr, int_char );
000600  a905              ADD      r1,sp,#0x14
000602  488f              LDR      r0,|L7.2112|
000604  f7fffffe          BL       strcpy
000608  e031              B        |L7.1646|
                  |L7.1546|
;;;1216   							
;;;1217   							//CLists.SYS_LL_IR = temp_int * 1000;
;;;1218   							
;;;1219   						}else{
;;;1220   
;;;1221   							if( temp_float - 15 > 0 ){   //最大值
00060a  eeb20a0e          VMOV.F32 s0,#15.00000000
00060e  ee380a40          VSUB.F32 s0,s16,s0
000612  eeb50ac0          VCMPE.F32 s0,#0.0
000616  eef1fa10          VMRS     APSR_nzcv,FPSCR
00061a  dd08              BLE      |L7.1582|
;;;1222   							
;;;1223   								strcpy( displayStr, "15"  );
00061c  a18b              ADR      r1,|L7.2124|
00061e  4888              LDR      r0,|L7.2112|
000620  f7fffffe          BL       strcpy
;;;1224   								
;;;1225   								CLists.SYS_LL_IR = 15;
000624  200f              MOVS     r0,#0xf
000626  4987              LDR      r1,|L7.2116|
000628  f8a10106          STRH     r0,[r1,#0x106]
;;;1226   								
;;;1227   								break;
00062c  e1b8              B        |L7.2464|
                  |L7.1582|
;;;1228   							}
;;;1229   							if( temp_float <= 0 ){    //最小值
00062e  eeb58ac0          VCMPE.F32 s16,#0.0
000632  eef1fa10          VMRS     APSR_nzcv,FPSCR
000636  d809              BHI      |L7.1612|
;;;1230   							
;;;1231   								strcpy( displayStr, "0"  );
000638  4881              LDR      r0,|L7.2112|
00063a  f2af2118          ADR      r1,|L7.1060|
00063e  8809              LDRH     r1,[r1,#0]
000640  8001              STRH     r1,[r0,#0]
;;;1232   								
;;;1233   								CLists.SYS_LL_IR = 0;
000642  2000              MOVS     r0,#0
000644  497f              LDR      r1,|L7.2116|
000646  f8a10106          STRH     r0,[r1,#0x106]
;;;1234   								
;;;1235   								break;
00064a  e1a9              B        |L7.2464|
                  |L7.1612|
;;;1236   							}	
;;;1237   							if( dot_loc + 1 == strlen(displayStr) ){							
00064c  487c              LDR      r0,|L7.2112|
00064e  f7fffffe          BL       strlen
000652  1c71              ADDS     r1,r6,#1
000654  4288              CMP      r0,r1
000656  d006              BEQ      |L7.1638|
;;;1238   										
;;;1239   							}else{
;;;1240   								
;;;1241   								temp_int++;
000658  1c64              ADDS     r4,r4,#1
;;;1242   								
;;;1243   								sprintf( int_char , "%d" , temp_int);		
00065a  4622              MOV      r2,r4
00065c  f2af2148          ADR      r1,|L7.1048|
000660  a805              ADD      r0,sp,#0x14
000662  f7fffffe          BL       __2sprintf
                  |L7.1638|
;;;1244   							}
;;;1245   							
;;;1246   							strcpy( displayStr, int_char ); 
000666  a905              ADD      r1,sp,#0x14
000668  4875              LDR      r0,|L7.2112|
00066a  f7fffffe          BL       strcpy
                  |L7.1646|
;;;1247   							
;;;1248   						/* 	NUM = strlen(float_char) - dot_loc - 1;
;;;1249   							
;;;1250   							for( i = 0; i < 3 - NUM; i++ ){
;;;1251   								
;;;1252   								strcat( float_char, "0");
;;;1253   							}	
;;;1254   							NUM = ( dot_loc > 1 ) ? 6 : 5; 
;;;1255   							
;;;1256   							strncpy( displayStr, float_char, NUM );*/
;;;1257   						}
;;;1258   						
;;;1259   						if( num_int - temp_int <= 0 ){
00066e  1b38              SUBS     r0,r7,r4
000670  2800              CMP      r0,#0
000672  dc09              BGT      |L7.1672|
;;;1260   		
;;;1261   							strcpy( displayStr, "0"  );
000674  4872              LDR      r0,|L7.2112|
000676  f2af2154          ADR      r1,|L7.1060|
00067a  8809              LDRH     r1,[r1,#0]
00067c  8001              STRH     r1,[r0,#0]
;;;1262   							
;;;1263   							CLists.SYS_LL_IR = 0 ;
00067e  2000              MOVS     r0,#0
000680  4970              LDR      r1,|L7.2116|
000682  f8a10106          STRH     r0,[r1,#0x106]
;;;1264   							
;;;1265   							break;
000686  e18b              B        |L7.2464|
                  |L7.1672|
;;;1266   						}
;;;1267   						CLists.SYS_LL_IR = temp_int;
000688  496e              LDR      r1,|L7.2116|
00068a  f8a14106          STRH     r4,[r1,#0x106]
                  |L7.1678|
;;;1268   					}
;;;1269   				
;;;1270   				break;	
00068e  e187              B        |L7.2464|
                  |L7.1680|
;;;1271   				
;;;1272   				case 19:
;;;1273   				//======================================21 过流上限========================================
;;;1274   					if( flag_null ){   
000690  f1b90f00          CMP      r9,#0
000694  d009              BEQ      |L7.1706|
;;;1275   					
;;;1276   						strcpy( displayStr,"0.000"  );
000696  f2af2178          ADR      r1,|L7.1056|
00069a  4869              LDR      r0,|L7.2112|
00069c  f7fffffe          BL       strcpy
;;;1277   						
;;;1278   						CLists.SYS_UL_Overflow = 0 * 1000;
0006a0  2000              MOVS     r0,#0
0006a2  4968              LDR      r1,|L7.2116|
0006a4  f8a10108          STRH     r0,[r1,#0x108]
0006a8  e0ac              B        |L7.2052|
                  |L7.1706|
;;;1279   						
;;;1280   					}else{
;;;1281   						
;;;1282   						num_float = atof( SGhListSYS[24].f_EName );
0006aa  486b              LDR      r0,|L7.2136|
0006ac  f7fffffe          BL       __hardfp_atof
0006b0  eeb09a40          VMOV.F32 s18,s0
0006b4  eef09a60          VMOV.F32 s19,s1
0006b8  ec510b19          VMOV     r0,r1,d9
0006bc  f7fffffe          BL       __aeabi_d2f
0006c0  ee080a90          VMOV     s17,r0
;;;1283   						
;;;1284   						if( temp_float - num_float <= 0 ){
0006c4  ee380a68          VSUB.F32 s0,s16,s17
0006c8  eeb50ac0          VCMPE.F32 s0,#0.0
0006cc  eef1fa10          VMRS     APSR_nzcv,FPSCR
0006d0  d80e              BHI      |L7.1776|
;;;1285   		
;;;1286   							strcpy( SGhListSYS[24].f_SName, "0.000"  );
0006d2  f2af21b4          ADR      r1,|L7.1056|
0006d6  4860              LDR      r0,|L7.2136|
0006d8  3814              SUBS     r0,r0,#0x14
0006da  f7fffffe          BL       strcpy
;;;1287   							
;;;1288   							strcpy( SGhListSYS[24].f_EName, "0.000"  );
0006de  f2af21c0          ADR      r1,|L7.1056|
0006e2  485d              LDR      r0,|L7.2136|
0006e4  f7fffffe          BL       strcpy
;;;1289   							
;;;1290   							CLists.SYS_LL_Overflow = 0 * 1000;
0006e8  2000              MOVS     r0,#0
0006ea  4956              LDR      r1,|L7.2116|
0006ec  f8a1010a          STRH     r0,[r1,#0x10a]
                  |L7.1776|
;;;1291   						}
;;;1292   						
;;;1293   						if( !flag_dot ){      	
0006f0  f89d0004          LDRB     r0,[sp,#4]
0006f4  bbb8              CBNZ     r0,|L7.1894|
;;;1294   							
;;;1295   							if( temp_int > 30  ){   //最大值
0006f6  2c1e              CMP      r4,#0x1e
0006f8  dd09              BLE      |L7.1806|
;;;1296   							
;;;1297   								strcpy( displayStr, "30.000"  );
0006fa  a158              ADR      r1,|L7.2140|
0006fc  4850              LDR      r0,|L7.2112|
0006fe  f7fffffe          BL       strcpy
;;;1298   								
;;;1299   								CLists.SYS_UL_Overflow = 30 * 1000;
000702  f2475030          MOV      r0,#0x7530
000706  494f              LDR      r1,|L7.2116|
000708  f8a10108          STRH     r0,[r1,#0x108]
;;;1300   								
;;;1301   								break;
00070c  e148              B        |L7.2464|
                  |L7.1806|
;;;1302   							}
;;;1303   							if( temp_int <= 0 ){    //最小值
00070e  2c00              CMP      r4,#0
000710  dc09              BGT      |L7.1830|
;;;1304   							
;;;1305   								strcpy( displayStr, "0.000"  );
000712  f2af21f4          ADR      r1,|L7.1056|
000716  484a              LDR      r0,|L7.2112|
000718  f7fffffe          BL       strcpy
;;;1306   								
;;;1307   								CLists.SYS_UL_Overflow = 0 * 1000;
00071c  2000              MOVS     r0,#0
00071e  4949              LDR      r1,|L7.2116|
000720  f8a10108          STRH     r0,[r1,#0x108]
;;;1308   								
;;;1309   								break;
000724  e13c              B        |L7.2464|
                  |L7.1830|
;;;1310   							}						
;;;1311   							if( strlen(int_char) > 2){
000726  a805              ADD      r0,sp,#0x14
000728  f7fffffe          BL       strlen
00072c  2802              CMP      r0,#2
00072e  d905              BLS      |L7.1852|
;;;1312   								
;;;1313   								strcat( int_char, ".0");
000730  f2af21fc          ADR      r1,|L7.1080|
000734  a805              ADD      r0,sp,#0x14
000736  f7fffffe          BL       strcat
00073a  e004              B        |L7.1862|
                  |L7.1852|
;;;1314   								
;;;1315   							}else{
;;;1316   								
;;;1317   								strcat( int_char, ".000");
00073c  f2af3104          ADR      r1,|L7.1084|
000740  a805              ADD      r0,sp,#0x14
000742  f7fffffe          BL       strcat
                  |L7.1862|
;;;1318   							}
;;;1319   							strcpy( displayStr, int_char );
000746  a905              ADD      r1,sp,#0x14
000748  483d              LDR      r0,|L7.2112|
00074a  f7fffffe          BL       strcpy
;;;1320   							
;;;1321   							CLists.SYS_UL_Overflow = temp_int * 1000;
00074e  eb040044          ADD      r0,r4,r4,LSL #1
000752  ebc010c4          RSB      r0,r0,r4,LSL #7
000756  f64f71ff          MOV      r1,#0xffff
00075a  ea0100c0          AND      r0,r1,r0,LSL #3
00075e  4939              LDR      r1,|L7.2116|
000760  f8a10108          STRH     r0,[r1,#0x108]
000764  e04e              B        |L7.2052|
                  |L7.1894|
000766  e7ff              B        |L7.1896|
                  |L7.1896|
;;;1322   							
;;;1323   						}else{	
;;;1324   							
;;;1325   							if( temp_float - 30 > 0 ){   //最大值
000768  eeb30a0e          VMOV.F32 s0,#30.00000000
00076c  ee380a40          VSUB.F32 s0,s16,s0
000770  eeb50ac0          VCMPE.F32 s0,#0.0
000774  eef1fa10          VMRS     APSR_nzcv,FPSCR
000778  dd09              BLE      |L7.1934|
;;;1326   							
;;;1327   								strcpy( displayStr, "30.000"  );
00077a  a138              ADR      r1,|L7.2140|
00077c  4830              LDR      r0,|L7.2112|
00077e  f7fffffe          BL       strcpy
;;;1328   								
;;;1329   								CLists.SYS_UL_Overflow = 30 * 1000;
000782  f2475030          MOV      r0,#0x7530
000786  492f              LDR      r1,|L7.2116|
000788  f8a10108          STRH     r0,[r1,#0x108]
;;;1330   								
;;;1331   								break;
00078c  e108              B        |L7.2464|
                  |L7.1934|
;;;1332   							}
;;;1333   							if( temp_float <= 0 ){    //最小值
00078e  eeb58ac0          VCMPE.F32 s16,#0.0
000792  eef1fa10          VMRS     APSR_nzcv,FPSCR
000796  d809              BHI      |L7.1964|
;;;1334   							
;;;1335   								strcpy( displayStr, "0.000"  );
000798  f2af317c          ADR      r1,|L7.1056|
00079c  4828              LDR      r0,|L7.2112|
00079e  f7fffffe          BL       strcpy
;;;1336   								
;;;1337   								CLists.SYS_UL_Overflow = 0 * 1000;
0007a2  2000              MOVS     r0,#0
0007a4  4927              LDR      r1,|L7.2116|
0007a6  f8a10108          STRH     r0,[r1,#0x108]
;;;1338   								
;;;1339   								break;
0007aa  e0f9              B        |L7.2464|
                  |L7.1964|
;;;1340   							}
;;;1341   							NUM = strlen(float_char) - dot_loc - 1;
0007ac  a802              ADD      r0,sp,#8
0007ae  f7fffffe          BL       strlen
0007b2  1b80              SUBS     r0,r0,r6
0007b4  f1a00a01          SUB      r10,r0,#1
;;;1342   							
;;;1343   							for( i = 0; i < 3 - NUM; i++ ){
0007b8  2500              MOVS     r5,#0
0007ba  e005              B        |L7.1992|
                  |L7.1980|
;;;1344   								
;;;1345   								strcat( float_char, "0");
0007bc  f2af319c          ADR      r1,|L7.1060|
0007c0  a802              ADD      r0,sp,#8
0007c2  f7fffffe          BL       strcat
0007c6  1c6d              ADDS     r5,r5,#1              ;1343
                  |L7.1992|
0007c8  f1ca0003          RSB      r0,r10,#3             ;1343
0007cc  42a8              CMP      r0,r5                 ;1343
0007ce  dcf5              BGT      |L7.1980|
;;;1346   							}	
;;;1347   							NUM = ( dot_loc > 1 ) ? 6 : 5;
0007d0  2e01              CMP      r6,#1
0007d2  dd01              BLE      |L7.2008|
0007d4  2006              MOVS     r0,#6
0007d6  e000              B        |L7.2010|
                  |L7.2008|
0007d8  2005              MOVS     r0,#5
                  |L7.2010|
0007da  4682              MOV      r10,r0
;;;1348   							
;;;1349   							strncpy( int_char, float_char, NUM );
0007dc  4652              MOV      r2,r10
0007de  a902              ADD      r1,sp,#8
0007e0  a805              ADD      r0,sp,#0x14
0007e2  f7fffffe          BL       strncpy
;;;1350   							
;;;1351   							strcpy( displayStr, int_char );	
0007e6  a905              ADD      r1,sp,#0x14
0007e8  4815              LDR      r0,|L7.2112|
0007ea  f7fffffe          BL       strcpy
;;;1352   							
;;;1353   							CLists.SYS_UL_Overflow = temp_float * 1000;
0007ee  ed1f0aea          VLDR     s0,|L7.1096|
0007f2  ee280a00          VMUL.F32 s0,s16,s0
0007f6  eebc0ac0          VCVT.U32.F32 s0,s0
0007fa  ee100a10          VMOV     r0,s0
0007fe  4911              LDR      r1,|L7.2116|
000800  f8a10108          STRH     r0,[r1,#0x108]
                  |L7.2052|
;;;1354   						}
;;;1355   					}
;;;1356   				
;;;1357   				break;
000804  e0cc              B        |L7.2464|
                  |L7.2054|
;;;1358   				
;;;1359   				case 22:
;;;1360   				//======================================24 过流下限========================================
;;;1361   					if( flag_null ){  
000806  f1b90f00          CMP      r9,#0
00080a  d009              BEQ      |L7.2080|
;;;1362   					
;;;1363   						strcpy( displayStr,"0.000"  );
00080c  f2af31f0          ADR      r1,|L7.1056|
000810  480b              LDR      r0,|L7.2112|
000812  f7fffffe          BL       strcpy
;;;1364   						
;;;1365   						CLists.SYS_LL_Overflow = 0 * 1000;
000816  2000              MOVS     r0,#0
000818  490a              LDR      r1,|L7.2116|
00081a  f8a1010a          STRH     r0,[r1,#0x10a]
00081e  e0be              B        |L7.2462|
                  |L7.2080|
;;;1366   						
;;;1367   					}else{
;;;1368   						
;;;1369   						num_float = atof( SGhListSYS[21].f_EName );
000820  480d              LDR      r0,|L7.2136|
000822  38d8              SUBS     r0,r0,#0xd8
000824  f7fffffe          BL       __hardfp_atof
000828  eeb09a40          VMOV.F32 s18,s0
00082c  eef09a60          VMOV.F32 s19,s1
000830  ec510b19          VMOV     r0,r1,d9
000834  f7fffffe          BL       __aeabi_d2f
000838  ee080a90          VMOV     s17,r0
;;;1370   						
;;;1371   						if( num_float - temp_float <= 0 ){
00083c  e012              B        |L7.2148|
                  |L7.2110|
00083e  e0cc              B        |L7.2522|
                  |L7.2112|
                          DCD      displayStr
                  |L7.2116|
                          DCD      CLists
                  |L7.2120|
                          DCD      SGhListSYS+0x4e8
                  |L7.2124|
00084c  313500            DCB      "15",0
00084f  00                DCB      0
                  |L7.2128|
                          DCD      SGhListSYS
                  |L7.2132|
                          DCD      SGhListSYS+0x3c8
                  |L7.2136|
                          DCD      SGhListSYS+0x6e0
                  |L7.2140|
00085c  33302e30          DCB      "30.000",0
000860  303000  
000863  00                DCB      0
                  |L7.2148|
000864  ee380ac8          VSUB.F32 s0,s17,s16
000868  eeb50ac0          VCMPE.F32 s0,#0.0
00086c  eef1fa10          VMRS     APSR_nzcv,FPSCR
000870  d809              BHI      |L7.2182|
;;;1372   							
;;;1373   							strcpy( displayStr, "0.000"  );						
000872  f2af4154          ADR      r1,|L7.1056|
000876  485f              LDR      r0,|L7.2548|
000878  f7fffffe          BL       strcpy
;;;1374   								
;;;1375   							CLists.SYS_LL_Overflow = 0 * 1000;					
00087c  2000              MOVS     r0,#0
00087e  495e              LDR      r1,|L7.2552|
000880  f8a1010a          STRH     r0,[r1,#0x10a]
;;;1376   							
;;;1377   							break;
000884  e08c              B        |L7.2464|
                  |L7.2182|
;;;1378   						}
;;;1379   						
;;;1380   						if( !flag_dot ){      	
000886  f89d0004          LDRB     r0,[sp,#4]
00088a  bbc0              CBNZ     r0,|L7.2302|
;;;1381   							
;;;1382   							if( temp_int > 30  ){   //最大值
00088c  2c1e              CMP      r4,#0x1e
00088e  dd0a              BLE      |L7.2214|
;;;1383   							
;;;1384   								strcpy( displayStr, "30.000"  );
000890  f2af0138          ADR      r1,|L7.2140|
000894  4857              LDR      r0,|L7.2548|
000896  f7fffffe          BL       strcpy
;;;1385   								
;;;1386   								CLists.SYS_LL_Overflow = 30 * 1000;			
00089a  f2475030          MOV      r0,#0x7530
00089e  4956              LDR      r1,|L7.2552|
0008a0  f8a1010a          STRH     r0,[r1,#0x10a]
;;;1387   								
;;;1388   								break;
0008a4  e07c              B        |L7.2464|
                  |L7.2214|
;;;1389   							}
;;;1390   							if( temp_int <= 0 ){    //最小值
0008a6  2c00              CMP      r4,#0
0008a8  dc09              BGT      |L7.2238|
;;;1391   							
;;;1392   								strcpy( displayStr, "0.000"  );
0008aa  f2af418c          ADR      r1,|L7.1056|
0008ae  4851              LDR      r0,|L7.2548|
0008b0  f7fffffe          BL       strcpy
;;;1393   								
;;;1394   								CLists.SYS_LL_Overflow = 0 * 1000;
0008b4  2000              MOVS     r0,#0
0008b6  4950              LDR      r1,|L7.2552|
0008b8  f8a1010a          STRH     r0,[r1,#0x10a]
;;;1395   								
;;;1396   								break;
0008bc  e070              B        |L7.2464|
                  |L7.2238|
;;;1397   							}						
;;;1398   							if( strlen(int_char) > 2){
0008be  a805              ADD      r0,sp,#0x14
0008c0  f7fffffe          BL       strlen
0008c4  2802              CMP      r0,#2
0008c6  d905              BLS      |L7.2260|
;;;1399   								
;;;1400   								strcat( int_char, ".0");
0008c8  f2af4194          ADR      r1,|L7.1080|
0008cc  a805              ADD      r0,sp,#0x14
0008ce  f7fffffe          BL       strcat
0008d2  e004              B        |L7.2270|
                  |L7.2260|
;;;1401   								
;;;1402   							}else{
;;;1403   								
;;;1404   								strcat( int_char, ".000");
0008d4  f2af419c          ADR      r1,|L7.1084|
0008d8  a805              ADD      r0,sp,#0x14
0008da  f7fffffe          BL       strcat
                  |L7.2270|
;;;1405   							}
;;;1406   							strcpy( displayStr, int_char );			
0008de  a905              ADD      r1,sp,#0x14
0008e0  4844              LDR      r0,|L7.2548|
0008e2  f7fffffe          BL       strcpy
;;;1407   							
;;;1408   							CLists.SYS_LL_Overflow = temp_int * 1000;
0008e6  eb040044          ADD      r0,r4,r4,LSL #1
0008ea  ebc010c4          RSB      r0,r0,r4,LSL #7
0008ee  f64f71ff          MOV      r1,#0xffff
0008f2  ea0100c0          AND      r0,r1,r0,LSL #3
0008f6  4940              LDR      r1,|L7.2552|
0008f8  f8a1010a          STRH     r0,[r1,#0x10a]
0008fc  e04f              B        |L7.2462|
                  |L7.2302|
0008fe  e7ff              B        |L7.2304|
                  |L7.2304|
;;;1409   							
;;;1410   						}else{
;;;1411   							
;;;1412   							if( temp_float - 30 > 0 ){   //最大值
000900  eeb30a0e          VMOV.F32 s0,#30.00000000
000904  ee380a40          VSUB.F32 s0,s16,s0
000908  eeb50ac0          VCMPE.F32 s0,#0.0
00090c  eef1fa10          VMRS     APSR_nzcv,FPSCR
000910  dd0a              BLE      |L7.2344|
;;;1413   							
;;;1414   								strcpy( displayStr, "30.000"  );
000912  f2af01b8          ADR      r1,|L7.2140|
000916  4837              LDR      r0,|L7.2548|
000918  f7fffffe          BL       strcpy
;;;1415   								
;;;1416   								CLists.SYS_LL_Overflow = 30 * 1000;
00091c  f2475030          MOV      r0,#0x7530
000920  4935              LDR      r1,|L7.2552|
000922  f8a1010a          STRH     r0,[r1,#0x10a]
;;;1417   								
;;;1418   								break;
000926  e03b              B        |L7.2464|
                  |L7.2344|
;;;1419   							}
;;;1420   							
;;;1421   							if( temp_float <= 0 ){    //最小值
000928  eeb58ac0          VCMPE.F32 s16,#0.0
00092c  eef1fa10          VMRS     APSR_nzcv,FPSCR
000930  d809              BHI      |L7.2374|
;;;1422   							
;;;1423   								strcpy( displayStr, "0.000"  );
000932  f2af5114          ADR      r1,|L7.1056|
000936  482f              LDR      r0,|L7.2548|
000938  f7fffffe          BL       strcpy
;;;1424   								
;;;1425   								CLists.SYS_LL_Overflow = 0 * 1000;
00093c  2000              MOVS     r0,#0
00093e  492e              LDR      r1,|L7.2552|
000940  f8a1010a          STRH     r0,[r1,#0x10a]
;;;1426   								
;;;1427   								break;
000944  e02c              B        |L7.2464|
                  |L7.2374|
;;;1428   							}
;;;1429   							NUM = strlen(float_char) - dot_loc - 1;
000946  a802              ADD      r0,sp,#8
000948  f7fffffe          BL       strlen
00094c  1b80              SUBS     r0,r0,r6
00094e  f1a00a01          SUB      r10,r0,#1
;;;1430   							
;;;1431   							for( i = 0; i < 3 - NUM; i++ ){
000952  2500              MOVS     r5,#0
000954  e005              B        |L7.2402|
                  |L7.2390|
;;;1432   								
;;;1433   								strcat( float_char, "0");
000956  f2af5134          ADR      r1,|L7.1060|
00095a  a802              ADD      r0,sp,#8
00095c  f7fffffe          BL       strcat
000960  1c6d              ADDS     r5,r5,#1              ;1431
                  |L7.2402|
000962  f1ca0003          RSB      r0,r10,#3             ;1431
000966  42a8              CMP      r0,r5                 ;1431
000968  dcf5              BGT      |L7.2390|
;;;1434   							}	
;;;1435   							NUM = ( dot_loc > 1 ) ? 6 : 5;
00096a  2e01              CMP      r6,#1
00096c  dd01              BLE      |L7.2418|
00096e  2006              MOVS     r0,#6
000970  e000              B        |L7.2420|
                  |L7.2418|
000972  2005              MOVS     r0,#5
                  |L7.2420|
000974  4682              MOV      r10,r0
;;;1436   							
;;;1437   							strncpy( int_char, float_char, NUM );
000976  4652              MOV      r2,r10
000978  a902              ADD      r1,sp,#8
00097a  a805              ADD      r0,sp,#0x14
00097c  f7fffffe          BL       strncpy
;;;1438   							
;;;1439   							strcpy( displayStr, int_char );	
000980  a905              ADD      r1,sp,#0x14
000982  481c              LDR      r0,|L7.2548|
000984  f7fffffe          BL       strcpy
;;;1440   									
;;;1441   							CLists.SYS_LL_Overflow = temp_float * 1000;
000988  ed9f0a1c          VLDR     s0,|L7.2556|
00098c  ee280a00          VMUL.F32 s0,s16,s0
000990  eebc0ac0          VCVT.U32.F32 s0,s0
000994  ee100a10          VMOV     r0,s0
000998  4917              LDR      r1,|L7.2552|
00099a  f8a1010a          STRH     r0,[r1,#0x10a]
                  |L7.2462|
;;;1442   						}
;;;1443   					}
;;;1444   				
;;;1445   				break;		
00099e  bf00              NOP      
                  |L7.2464|
0009a0  bf00              NOP                            ;906
;;;1446   			}	
;;;1447   			Write_Flash_Bytes();	
0009a2  f7fffffe          BL       Write_Flash_Bytes
;;;1448   			
;;;1449   			SGhListSYS[temp].d_BKColor = 0x0;
0009a6  2000              MOVS     r0,#0
0009a8  eb0801c8          ADD      r1,r8,r8,LSL #3
0009ac  4a14              LDR      r2,|L7.2560|
0009ae  eb0201c1          ADD      r1,r2,r1,LSL #3
0009b2  6388              STR      r0,[r1,#0x38]
;;;1450   			
;;;1451   			strcpy( SGhListSYS[temp].f_SName, displayStr );
0009b4  eb0801c8          ADD      r1,r8,r8,LSL #3
0009b8  eb0201c1          ADD      r1,r2,r1,LSL #3
0009bc  f101000c          ADD      r0,r1,#0xc
0009c0  490c              LDR      r1,|L7.2548|
0009c2  f7fffffe          BL       strcpy
;;;1452   			
;;;1453   			strcpy( SGhListSYS[temp].f_EName, displayStr );
0009c6  eb0801c8          ADD      r1,r8,r8,LSL #3
0009ca  4a0d              LDR      r2,|L7.2560|
0009cc  eb0201c1          ADD      r1,r2,r1,LSL #3
0009d0  f1010020          ADD      r0,r1,#0x20
0009d4  4907              LDR      r1,|L7.2548|
0009d6  f7fffffe          BL       strcpy
                  |L7.2522|
;;;1454   		}
;;;1455   	}
;;;1456   	memset( displayStr, '\0', sizeof(displayStr));
0009da  2114              MOVS     r1,#0x14
0009dc  4805              LDR      r0,|L7.2548|
0009de  f7fffffe          BL       __aeabi_memclr
;;;1457   	
;;;1458   	WM_InvalidateWindow(sysSettingWin);
0009e2  4808              LDR      r0,|L7.2564|
0009e4  6800              LDR      r0,[r0,#0]  ; sysSettingWin
0009e6  f7fffffe          BL       WM_InvalidateWindow
;;;1459   
;;;1460   }
0009ea  b00d              ADD      sp,sp,#0x34
0009ec  ecbd8b04          VPOP     {d8-d9}
0009f0  e8bd8ff0          POP      {r4-r11,pc}
;;;1461   
                          ENDP

                  |L7.2548|
                          DCD      displayStr
                  |L7.2552|
                          DCD      CLists
                  |L7.2556|
0009fc  447a0000          DCFS     0x447a0000 ; 1000
                  |L7.2560|
                          DCD      SGhListSYS
                  |L7.2564|
                          DCD      sysSettingWin

                          AREA ||i._cbDialogsys||, CODE, READONLY, ALIGN=2

                  _cbDialogsys PROC
;;;129    	
;;;130    static void _cbDialogsys(WM_MESSAGE * pMsg) {
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  b0a2              SUB      sp,sp,#0x88
000006  4605              MOV      r5,r0
;;;131    	
;;;132    	WM_HWIN hItem;
;;;133    	int NCode;
;;;134    	int Id,MAX_LEN = 0;
000008  2700              MOVS     r7,#0
;;;135    	vu8 i;
;;;136    	char* winName;
;;;137    	
;;;138    	static struct SListData slistSYS[] = {		
;;;139    		{T_Button ,"内阻测试","I.R. TEST",  0x00B22222 , 0, ID_BUTTON_31 },
;;;140    		{T_Button , "程控电源", "POWER",  0x00B22222 , 0, ID_BUTTON_32 },
;;;141    		{T_Button ,"程控负载", "LOAD", 0x00B22222 , 0, ID_BUTTON_33 },
;;;142    		{T_Button ,"充放电",   "C&DC", 0x00B22222 , 0,  ID_BUTTON_34 },
;;;143    		{T_Button ,"系统设置","SYSTEM",  0x00B22222 , 0, ID_BUTTON_35 },
;;;144    	};
;;;145    	 
;;;146    	switch (pMsg->MsgId) {
00000a  6828              LDR      r0,[r5,#0]
00000c  280e              CMP      r0,#0xe
00000e  d079              BEQ      |L8.260|
000010  280f              CMP      r0,#0xf
000012  d006              BEQ      |L8.34|
000014  281d              CMP      r0,#0x1d
000016  d076              BEQ      |L8.262|
000018  f2a01013          SUB      r0,r0,#0x113
00001c  2800              CMP      r0,#0
00001e  d173              BNE      |L8.264|
000020  e073              B        |L8.266|
                  |L8.34|
;;;147    	  	
;;;148    		case WM_PAINT: {
;;;149    			
;;;150    			hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_35);	
000022  f6400199          MOV      r1,#0x899
000026  6868              LDR      r0,[r5,#4]
000028  f7fffffe          BL       WM_GetDialogItem
00002c  4606              MOV      r6,r0
;;;151    			
;;;152    			BUTTON_SetPressed( hItem , 1 );	
00002e  2101              MOVS     r1,#1
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       BUTTON_SetPressed
;;;153    			
;;;154    			GUI_SetColor(0x00FDF5E6);
000036  4849              LDR      r0,|L8.348|
000038  f7fffffe          BL       GUI_SetColor
;;;155    			
;;;156    			GUI_Clear();
00003c  f7fffffe          BL       GUI_Clear
;;;157    			
;;;158    			GUI_FillRoundedRect(0,0,480,33,5);
000040  2005              MOVS     r0,#5
000042  2321              MOVS     r3,#0x21
000044  f44f72f0          MOV      r2,#0x1e0
000048  2100              MOVS     r1,#0
00004a  9000              STR      r0,[sp,#0]
00004c  4608              MOV      r0,r1
00004e  f7fffffe          BL       GUI_FillRoundedRect
;;;159    			
;;;160    			GUI_SetColor(GUI_BLACK);
000052  2000              MOVS     r0,#0
000054  f7fffffe          BL       GUI_SetColor
;;;161    			
;;;162    			GUI_SetFont(&GUI_FontSONG16);
000058  4841              LDR      r0,|L8.352|
00005a  f7fffffe          BL       GUI_SetFont
;;;163    			
;;;164    			GUI_UC_SetEncodeUTF8();
00005e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
;;;165    			
;;;166    			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
000062  2002              MOVS     r0,#2
000064  f7fffffe          BL       GUI_SetTextMode
;;;167    			
;;;168    			winName = ( FLAG_LANG == 1) ? "SYSTEM TEST" : "系统设置";
000068  483e              LDR      r0,|L8.356|
00006a  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
00006c  2801              CMP      r0,#1
00006e  d101              BNE      |L8.116|
000070  a03d              ADR      r0,|L8.360|
000072  e000              B        |L8.118|
                  |L8.116|
000074  a03f              ADR      r0,|L8.372|
                  |L8.118|
000076  4680              MOV      r8,r0
;;;169    		
;;;170    			GUI_DispStringAt( winName, (480 - GUI_GetStringDistX( winName))/2, 10);
000078  4640              MOV      r0,r8
00007a  f7fffffe          BL       GUI_GetStringDistX
00007e  f5c074f0          RSB      r4,r0,#0x1e0
000082  eb0470d4          ADD      r0,r4,r4,LSR #31
000086  1041              ASRS     r1,r0,#1
000088  220a              MOVS     r2,#0xa
00008a  4640              MOV      r0,r8
00008c  f7fffffe          BL       GUI_DispStringAt
;;;171    	
;;;172    			for( i = 0; i < sizeof( SGhListSYS )/sizeof( SGhListSYS[0]) ; i++  ){
000090  2000              MOVS     r0,#0
000092  9021              STR      r0,[sp,#0x84]
000094  e02f              B        |L8.246|
                  |L8.150|
;;;173    				
;;;174    				bush_Graph_String( FLAG_LANG, SGhListSYS[i]);
000096  f89d0084          LDRB     r0,[sp,#0x84]
00009a  eb0000c0          ADD      r0,r0,r0,LSL #3
00009e  4939              LDR      r1,|L8.388|
0000a0  eb0104c0          ADD      r4,r1,r0,LSL #3
0000a4  2234              MOVS     r2,#0x34
0000a6  4621              MOV      r1,r4
0000a8  a80f              ADD      r0,sp,#0x3c
0000aa  f7fffffe          BL       __aeabi_memcpy4
0000ae  f8540f34          LDR      r0,[r4,#0x34]!
0000b2  901c              STR      r0,[sp,#0x70]
0000b4  6860              LDR      r0,[r4,#4]
0000b6  901d              STR      r0,[sp,#0x74]
0000b8  68a0              LDR      r0,[r4,#8]
0000ba  901e              STR      r0,[sp,#0x78]
0000bc  89a0              LDRH     r0,[r4,#0xc]
0000be  f8ad007c          STRH     r0,[sp,#0x7c]
0000c2  89e0              LDRH     r0,[r4,#0xe]
0000c4  f8ad007e          STRH     r0,[sp,#0x7e]
0000c8  8a20              LDRH     r0,[r4,#0x10]
0000ca  f8ad0080          STRH     r0,[sp,#0x80]
0000ce  8a60              LDRH     r0,[r4,#0x12]
0000d0  3c34              SUBS     r4,r4,#0x34
0000d2  f8ad0082          STRH     r0,[sp,#0x82]
0000d6  223c              MOVS     r2,#0x3c
0000d8  a912              ADD      r1,sp,#0x48
0000da  4668              MOV      r0,sp
0000dc  f7fffffe          BL       __aeabi_memcpy4
0000e0  4820              LDR      r0,|L8.356|
0000e2  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
0000e4  a90f              ADD      r1,sp,#0x3c
0000e6  c90e              LDM      r1,{r1-r3}
0000e8  f7fffffe          BL       bush_Graph_String
0000ec  f89d0084          LDRB     r0,[sp,#0x84]         ;172
0000f0  1c40              ADDS     r0,r0,#1              ;172
0000f2  b2c0              UXTB     r0,r0                 ;172
0000f4  9021              STR      r0,[sp,#0x84]         ;172
                  |L8.246|
0000f6  f89d0084          LDRB     r0,[sp,#0x84]         ;172
0000fa  281e              CMP      r0,#0x1e              ;172
0000fc  d3cb              BCC      |L8.150|
;;;175    			}
;;;176    			bush_boxList();	
0000fe  f7fffffe          BL       bush_boxList
;;;177    		}
;;;178    		
;;;179    		break;
000102  e026              B        |L8.338|
                  |L8.260|
000104  e00c              B        |L8.288|
                  |L8.262|
000106  e00c              B        |L8.290|
                  |L8.264|
000108  e01f              B        |L8.330|
                  |L8.266|
;;;180    
;;;181    		case WM_TIMER:{
;;;182    			
;;;183    			if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTimeSYS){	
00010a  68e8              LDR      r0,[r5,#0xc]
00010c  f7fffffe          BL       WM_GetTimerId
000110  2806              CMP      r0,#6
000112  d104              BNE      |L8.286|
;;;184    			
;;;185    				WM_RestartTimer(pMsg->Data.v, 500);//复位定时器数值越大刷新时间越短	
000114  f44f71fa          MOV      r1,#0x1f4
000118  68e8              LDR      r0,[r5,#0xc]
00011a  f7fffffe          BL       WM_RestartTimer
                  |L8.286|
;;;186    				
;;;187    			}	
;;;188    			break;
00011e  e018              B        |L8.338|
                  |L8.288|
;;;189    		}
;;;190    		break;	
;;;191    		
;;;192    		case WM_KEY:
;;;193    		
;;;194    		break;
000120  e017              B        |L8.338|
                  |L8.290|
;;;195    			
;;;196    		case WM_INIT_DIALOG:{
;;;197    				
;;;198    			hItem = pMsg->hWin;
000122  686e              LDR      r6,[r5,#4]
;;;199    			
;;;200    			WINDOW_SetBkColor(hItem, 0x004A4655);
000124  4918              LDR      r1,|L8.392|
000126  4630              MOV      r0,r6
000128  f7fffffe          BL       WINDOW_SetBkColor
;;;201    			
;;;202    			WM_CreateTimer( hItem ,ID_TimerTimeSYS , 20 , 0);//创建本窗口定时器
00012c  2300              MOVS     r3,#0
00012e  2214              MOVS     r2,#0x14
000130  2106              MOVS     r1,#6
000132  4630              MOV      r0,r6
000134  f7fffffe          BL       WM_CreateTimer
;;;203    			
;;;204    			MAX_LEN = sizeof(slistSYS)/sizeof(slistSYS[0]);
000138  2705              MOVS     r7,#5
;;;205    			
;;;206    			bush_WinObj( FLAG_LANG,pMsg ,slistSYS, MAX_LEN);
00013a  463b              MOV      r3,r7
00013c  4a13              LDR      r2,|L8.396|
00013e  4629              MOV      r1,r5
000140  4808              LDR      r0,|L8.356|
000142  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
000144  f7fffffe          BL       bush_WinObj
;;;207      
;;;208    		}
;;;209    		break;
000148  e003              B        |L8.338|
                  |L8.330|
;;;210    		default:
;;;211    		
;;;212    			WM_DefaultProc(pMsg);
00014a  4628              MOV      r0,r5
00014c  f7fffffe          BL       WM_DefaultProc
;;;213    			
;;;214    		break;
000150  bf00              NOP      
                  |L8.338|
000152  bf00              NOP                            ;179
;;;215    	 }
;;;216    
;;;217    }
000154  b022              ADD      sp,sp,#0x88
000156  e8bd81f0          POP      {r4-r8,pc}
;;;218    
                          ENDP

00015a  0000              DCW      0x0000
                  |L8.348|
                          DCD      0x00fdf5e6
                  |L8.352|
                          DCD      GUI_FontSONG16
                  |L8.356|
                          DCD      FLAG_LANG
                  |L8.360|
000168  53595354          DCB      "SYSTEM TEST",0
00016c  454d2054
000170  45535400
                  |L8.372|
000174  e7b3bbe7          DCB      231,179,187,231,187,159,232,174,190,231,189,174,0
000178  bb9fe8ae
00017c  bee7bdae
000180  00      
000181  00                DCB      0
000182  00                DCB      0
000183  00                DCB      0
                  |L8.388|
                          DCD      SGhListSYS
                  |L8.392|
                          DCD      0x004a4655
                  |L8.396|
                          DCD      slistSYS

                          AREA ||i.bush_boxList||, CODE, READONLY, ALIGN=2

                  bush_boxList PROC
;;;735    //下拉列表显示
;;;736    void bush_boxList(){
000000  b570              PUSH     {r4-r6,lr}
000002  b0a2              SUB      sp,sp,#0x88
;;;737    	
;;;738    	int i = 0, dlen = 0;
000004  2400              MOVS     r4,#0
000006  2600              MOVS     r6,#0
;;;739    	
;;;740    	int *key_loc;
;;;741    	
;;;742    	if( FLAG_INPUTAUTH )
000008  4833              LDR      r0,|L9.216|
00000a  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
00000c  2800              CMP      r0,#0
00000e  d061              BEQ      |L9.212|
;;;743    	{
;;;744    		dlen = sizeof( SGhListSYS ) / sizeof( SGhListSYS[0] );
000010  261e              MOVS     r6,#0x1e
;;;745    		
;;;746    		key_loc = get_id_index( SGhListSYS, dlen);
000012  4631              MOV      r1,r6
000014  4831              LDR      r0,|L9.220|
000016  f7fffffe          BL       get_id_index
00001a  4605              MOV      r5,r0
;;;747    
;;;748    		if( *key_loc == 0x194 )
00001c  6828              LDR      r0,[r5,#0]
00001e  f5b07fca          CMP      r0,#0x194
000022  d103              BNE      |L9.44|
;;;749    				
;;;750    			 SGhListSYS[1].focusType = 1;
000024  2101              MOVS     r1,#1
000026  482d              LDR      r0,|L9.220|
000028  64c1              STR      r1,[r0,#0x4c]
00002a  e053              B        |L9.212|
                  |L9.44|
;;;751    		
;;;752    		else
;;;753    		{	
;;;754    			for( i = 0; i < sizeof( BoxData_List )/sizeof( BoxData_List[0]) ; i++  )
00002c  2400              MOVS     r4,#0
00002e  e04f              B        |L9.208|
                  |L9.48|
;;;755    			{
;;;756    				if( BoxData_List[i].d_ID ==  *key_loc )
000030  eb0400c4          ADD      r0,r4,r4,LSL #3
000034  492a              LDR      r1,|L9.224|
000036  f8510030          LDR      r0,[r1,r0,LSL #3]
00003a  6829              LDR      r1,[r5,#0]
00003c  4288              CMP      r0,r1
00003e  d146              BNE      |L9.206|
;;;757    					
;;;758    					bush_Graph_String( FLAG_LANG , BoxData_List[i]);		
000040  eb0400c4          ADD      r0,r4,r4,LSL #3
000044  4a26              LDR      r2,|L9.224|
000046  eb0201c0          ADD      r1,r2,r0,LSL #3
00004a  2234              MOVS     r2,#0x34
00004c  a810              ADD      r0,sp,#0x40
00004e  f7fffffe          BL       __aeabi_memcpy4
000052  eb0400c4          ADD      r0,r4,r4,LSL #3
000056  4922              LDR      r1,|L9.224|
000058  eb0100c0          ADD      r0,r1,r0,LSL #3
00005c  6b40              LDR      r0,[r0,#0x34]
00005e  901d              STR      r0,[sp,#0x74]
000060  eb0400c4          ADD      r0,r4,r4,LSL #3
000064  eb0100c0          ADD      r0,r1,r0,LSL #3
000068  6b80              LDR      r0,[r0,#0x38]
00006a  901e              STR      r0,[sp,#0x78]
00006c  eb0400c4          ADD      r0,r4,r4,LSL #3
000070  eb0100c0          ADD      r0,r1,r0,LSL #3
000074  6bc0              LDR      r0,[r0,#0x3c]
000076  901f              STR      r0,[sp,#0x7c]
000078  eb0400c4          ADD      r0,r4,r4,LSL #3
00007c  eb0100c0          ADD      r0,r1,r0,LSL #3
000080  f8b00040          LDRH     r0,[r0,#0x40]
000084  f8ad0080          STRH     r0,[sp,#0x80]
000088  eb0400c4          ADD      r0,r4,r4,LSL #3
00008c  eb0100c0          ADD      r0,r1,r0,LSL #3
000090  f8b00042          LDRH     r0,[r0,#0x42]
000094  f8ad0082          STRH     r0,[sp,#0x82]
000098  eb0400c4          ADD      r0,r4,r4,LSL #3
00009c  eb0100c0          ADD      r0,r1,r0,LSL #3
0000a0  f8b00044          LDRH     r0,[r0,#0x44]
0000a4  f8ad0084          STRH     r0,[sp,#0x84]
0000a8  eb0400c4          ADD      r0,r4,r4,LSL #3
0000ac  eb0100c0          ADD      r0,r1,r0,LSL #3
0000b0  f8b00046          LDRH     r0,[r0,#0x46]
0000b4  f8ad0086          STRH     r0,[sp,#0x86]
0000b8  223c              MOVS     r2,#0x3c
0000ba  a913              ADD      r1,sp,#0x4c
0000bc  4668              MOV      r0,sp
0000be  f7fffffe          BL       __aeabi_memcpy4
0000c2  4808              LDR      r0,|L9.228|
0000c4  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
0000c6  a910              ADD      r1,sp,#0x40
0000c8  c90e              LDM      r1,{r1-r3}
0000ca  f7fffffe          BL       bush_Graph_String
                  |L9.206|
0000ce  1c64              ADDS     r4,r4,#1              ;754
                  |L9.208|
0000d0  2c0d              CMP      r4,#0xd               ;754
0000d2  d3ad              BCC      |L9.48|
                  |L9.212|
;;;759    					
;;;760    			}		
;;;761    		}
;;;762    	}
;;;763    	
;;;764    }
0000d4  b022              ADD      sp,sp,#0x88
0000d6  bd70              POP      {r4-r6,pc}
;;;765    
                          ENDP

                  |L9.216|
                          DCD      FLAG_INPUTAUTH
                  |L9.220|
                          DCD      SGhListSYS
                  |L9.224|
                          DCD      BoxData_List
                  |L9.228|
                          DCD      FLAG_LANG

                          AREA ||i.sum_box_corres||, CODE, READONLY, ALIGN=2

                  sum_box_corres PROC
;;;439    //返回下拉列表的个数  焦点所在的位置
;;;440    int *sum_box_corres( int key_id ){
000000  b53c              PUSH     {r2-r5,lr}
000002  4603              MOV      r3,r0
;;;441    	
;;;442    	int i, dlen = 0;
000004  2400              MOVS     r4,#0
;;;443    	int sum_focusloc[] = { 1024, 1024};
000006  4d0f              LDR      r5,|L10.68|
000008  cd21              LDM      r5,{r0,r5}
00000a  e9cd0500          STRD     r0,r5,[sp,#0]
;;;444    	int sum = 0; 
00000e  2200              MOVS     r2,#0
;;;445    	
;;;446    	dlen = sizeof( BoxData_List ) / sizeof( BoxData_List[0] );
000010  240d              MOVS     r4,#0xd
;;;447    	
;;;448    	for ( i = 0; i < dlen; i++ )
000012  2100              MOVS     r1,#0
000014  e010              B        |L10.56|
                  |L10.22|
;;;449    	{	
;;;450    		if( BoxData_List[i].d_ID == key_id )
000016  eb0100c1          ADD      r0,r1,r1,LSL #3
00001a  4d0b              LDR      r5,|L10.72|
00001c  f8550030          LDR      r0,[r5,r0,LSL #3]
000020  4298              CMP      r0,r3
000022  d108              BNE      |L10.54|
;;;451    		{	
;;;452    			sum++;
000024  1c52              ADDS     r2,r2,#1
;;;453    			
;;;454    			if( BoxData_List[i].focusType == 1 )
000026  eb0100c1          ADD      r0,r1,r1,LSL #3
00002a  eb0500c0          ADD      r0,r5,r0,LSL #3
00002e  6840              LDR      r0,[r0,#4]
000030  2801              CMP      r0,#1
000032  d100              BNE      |L10.54|
;;;455    				
;;;456    				sum_focusloc[1] = sum;		
000034  9201              STR      r2,[sp,#4]
                  |L10.54|
000036  1c49              ADDS     r1,r1,#1              ;448
                  |L10.56|
000038  42a1              CMP      r1,r4                 ;448
00003a  dbec              BLT      |L10.22|
;;;457    		}	
;;;458    	}
;;;459    	sum_focusloc[0] = sum;
00003c  9200              STR      r2,[sp,#0]
;;;460    	
;;;461    	return sum_focusloc;
00003e  4668              MOV      r0,sp
;;;462    }
000040  bd3c              POP      {r2-r5,pc}
;;;463    
                          ENDP

000042  0000              DCW      0x0000
                  |L10.68|
                          DCD      ||.constdata||+0xe0
                  |L10.72|
                          DCD      BoxData_List

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreatesys
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08930000          DCW      0x0893,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  08950055          DCW      0x0895,0x0055
000028  00e80046          DCW      0x00e8,0x0046
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  089600a4          DCW      0x0896,0x00a4
000044  00e80046          DCW      0x00e8,0x0046
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  089700f3          DCW      0x0897,0x00f3
000060  00e80046          DCW      0x00e8,0x0046
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  08980142          DCW      0x0898,0x0142
00007c  00e80046          DCW      0x00e8,0x0046
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  08990191          DCW      0x0899,0x0191
000098  00e80046          DCW      0x00e8,0x0046
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                  WINST_id_DataLists
                          DCD      0x00000002
                          DCD      0x00000016
                          DCD      0x00000004
                          DCD      0x00000019
                          DCD      0x00000006
                          DCD      0x0000001c
                          DCD      0x00000008
                          DCD      0x0000001e
                          DCD      0x0000000b
                          DCD      0x00000000
                          DCD      0x0000000e
                          DCD      0x00000000
                          DCD      0x00000012
                          DCD      0x00000000
                          DCD      0x00000400
                          DCD      0x00000400

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  

                          AREA ||.data||, DATA, ALIGN=2

                  sysSettingWin
                          DCD      0x00000000
                  SGhListSYS
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000002
000010  e58886e9          DCB      0xe5,0x88,0x86,0xe9
000014  8089e5bc          DCB      0x80,0x89,0xe5,0xbc
000018  80e585b3          DCB      0x80,0xe5,0x85,0xb3
00001c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000024  436f6d70          DCB      0x43,0x6f,0x6d,0x70
000028  61726174          DCB      0x61,0x72,0x61,0x74
00002c  6f720000          DCB      0x6f,0x72,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000044  001e002d          DCW      0x001e,0x002d
000048  00000000          DCW      0x0000,0x0000
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000003
000058  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
00006c  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00008c  0073002d          DCW      0x0073,0x002d
000090  00a5003e          DCW      0x00a5,0x003e
                          DCD      0x00000003
                          DCD      0x00000000
                          DCD      0x00000002
0000a0  e8bf87e6          DCB      0xe8,0xbf,0x87,0xe6
0000a4  b581e6b5          DCB      0xb5,0x81,0xe6,0xb5
0000a8  8be8af95          DCB      0x8b,0xe8,0xaf,0x95
0000ac  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0000b4  4f766572          DCB      0x4f,0x76,0x65,0x72
0000b8  666c6f77          DCB      0x66,0x6c,0x6f,0x77
0000bc  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0000d4  001e0046          DCW      0x001e,0x0046
0000d8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000003
0000e8  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
0000fc  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00011c  00730046          DCW      0x0073,0x0046
000120  00a50057          DCW      0x00a5,0x0057
                          DCD      0x00000005
                          DCD      0x00000000
                          DCD      0x00000002
000130  e68aa5e8          DCB      0xe6,0x8a,0xa5,0xe8
000134  ada6e5a3          DCB      0xad,0xa6,0xe5,0xa3
000138  b0e99fb3          DCB      0xb0,0xe9,0x9f,0xb3
00013c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000144  42656570          DCB      0x42,0x65,0x65,0x70
000148  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000164  001e005f          DCW      0x001e,0x005f
000168  00000000          DCW      0x0000,0x0000
                          DCD      0x00000006
                          DCD      0x00000000
                          DCD      0x00000003
000178  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
00018c  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0001ac  0073005f          DCW      0x0073,0x005f
0001b0  00a50070          DCW      0x00a5,0x0070
                          DCD      0x00000007
                          DCD      0x00000000
                          DCD      0x00000002
0001c0  e794b5e5          DCB      0xe7,0x94,0xb5,0xe5
0001c4  8e8be4b8          DCB      0x8e,0x8b,0xe4,0xb8
0001c8  8ae99990          DCB      0x8a,0xe9,0x99,0x90
0001cc  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0001d4  554c2056          DCB      0x55,0x4c,0x20,0x56
0001d8  6f6c7461          DCB      0x6f,0x6c,0x74,0x61
0001dc  67650000          DCB      0x67,0x65,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0001f4  001e0078          DCW      0x001e,0x0078
0001f8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000008
                          DCD      0x00000000
                          DCD      0x00000001
000208  33362e30          DCB      0x33,0x36,0x2e,0x30
00020c  30000000          DCB      0x30,0x00,0x00,0x00
                          %        12
00021c  33362e30          DCB      0x33,0x36,0x2e,0x30
000220  30000000          DCB      0x30,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00023c  00730078          DCW      0x0073,0x0078
000240  00a50089          DCW      0x00a5,0x0089
                          DCD      0x00000009
                          DCD      0x00000000
                          DCD      0x00000002
000250  56000000          DCB      0x56,0x00,0x00,0x00
                          %        16
000264  56000000          DCB      0x56,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000284  00aa0078          DCW      0x00aa,0x0078
000288  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000a
                          DCD      0x00000000
                          DCD      0x00000002
000298  e794b5e5          DCB      0xe7,0x94,0xb5,0xe5
00029c  8e8be4b8          DCB      0x8e,0x8b,0xe4,0xb8
0002a0  8be99990          DCB      0x8b,0xe9,0x99,0x90
0002a4  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0002ac  4c4c2056          DCB      0x4c,0x4c,0x20,0x56
0002b0  6f6c7461          DCB      0x6f,0x6c,0x74,0x61
0002b4  67650000          DCB      0x67,0x65,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0002cc  001e0091          DCW      0x001e,0x0091
0002d0  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000b
                          DCD      0x00000000
                          DCD      0x00000001
0002e0  302e3030          DCB      0x30,0x2e,0x30,0x30
0002e4  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0002f4  302e3030          DCB      0x30,0x2e,0x30,0x30
0002f8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000314  00730091          DCW      0x0073,0x0091
000318  00a500a2          DCW      0x00a5,0x00a2
                          DCD      0x0000000c
                          DCD      0x00000000
                          DCD      0x00000002
000328  56000000          DCB      0x56,0x00,0x00,0x00
                          %        16
00033c  56000000          DCB      0x56,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00035c  00aa0091          DCW      0x00aa,0x0091
000360  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000d
                          DCD      0x00000000
                          DCD      0x00000002
000370  e58685e9          DCB      0xe5,0x86,0x85,0xe9
000374  98bbe4b8          DCB      0x98,0xbb,0xe4,0xb8
000378  8ae99990          DCB      0x8a,0xe9,0x99,0x90
00037c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000384  554c2049          DCB      0x55,0x4c,0x20,0x49
000388  2e492e00          DCB      0x2e,0x49,0x2e,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0003a4  001e00aa          DCW      0x001e,0x00aa
0003a8  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000e
                          DCD      0x00000000
                          DCD      0x00000001
0003b8  33303000          DCB      0x33,0x30,0x30,0x00
                          %        16
0003cc  33303000          DCB      0x33,0x30,0x30,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0003ec  007300aa          DCW      0x0073,0x00aa
0003f0  00a500bb          DCW      0x00a5,0x00bb
                          DCD      0x0000000f
                          DCD      0x00000000
                          DCD      0x00000002
000400  6d000000          DCB      0x6d,0x00,0x00,0x00
                          %        16
000414  6d000000          DCB      0x6d,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000434  00aa00aa          DCW      0x00aa,0x00aa
000438  00000000          DCW      0x0000,0x0000
                          DCD      0x00000010
                          DCD      0x00000000
                          DCD      0x00000002
000448  cea90000          DCB      0xce,0xa9,0x00,0x00
                          %        16
00045c  cea90000          DCB      0xce,0xa9,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00047c  00b200ac          DCW      0x00b2,0x00ac
000480  00000000          DCW      0x0000,0x0000
                          DCD      0x00000011
                          DCD      0x00000000
                          DCD      0x00000002
000490  e58685e9          DCB      0xe5,0x86,0x85,0xe9
000494  98bbe4b8          DCB      0x98,0xbb,0xe4,0xb8
000498  8be99990          DCB      0x8b,0xe9,0x99,0x90
00049c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0004a4  4c4c2049          DCB      0x4c,0x4c,0x20,0x49
0004a8  2e522e00          DCB      0x2e,0x52,0x2e,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0004c4  001e00c3          DCW      0x001e,0x00c3
0004c8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000012
                          DCD      0x00000000
                          DCD      0x00000001
0004d8  302e3030          DCB      0x30,0x2e,0x30,0x30
0004dc  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0004ec  302e3030          DCB      0x30,0x2e,0x30,0x30
0004f0  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00050c  007300c3          DCW      0x0073,0x00c3
000510  00a500d4          DCW      0x00a5,0x00d4
                          DCD      0x00000013
                          DCD      0x00000000
                          DCD      0x00000002
000520  6d000000          DCB      0x6d,0x00,0x00,0x00
                          %        16
000534  6d000000          DCB      0x6d,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000554  00aa00c3          DCW      0x00aa,0x00c3
000558  00000000          DCW      0x0000,0x0000
                          DCD      0x00000014
                          DCD      0x00000000
                          DCD      0x00000002
000568  cea90000          DCB      0xce,0xa9,0x00,0x00
                          %        16
00057c  cea90000          DCB      0xce,0xa9,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00059c  00b200c5          DCW      0x00b2,0x00c5
0005a0  00000000          DCW      0x0000,0x0000
                          DCD      0x00000015
                          DCD      0x00000000
                          DCD      0x00000002
0005b0  e8bf87e6          DCB      0xe8,0xbf,0x87,0xe6
0005b4  b581e4b8          DCB      0xb5,0x81,0xe4,0xb8
0005b8  8ae99990          DCB      0x8a,0xe9,0x99,0x90
0005bc  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0005c4  554c204f          DCB      0x55,0x4c,0x20,0x4f
0005c8  76657266          DCB      0x76,0x65,0x72,0x66
0005cc  6c6f7700          DCB      0x6c,0x6f,0x77,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0005e4  00fa002d          DCW      0x00fa,0x002d
0005e8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000016
                          DCD      0x00000000
                          DCD      0x00000001
0005f8  312e3030          DCB      0x31,0x2e,0x30,0x30
0005fc  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
00060c  312e3030          DCB      0x31,0x2e,0x30,0x30
000610  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00062c  0163002d          DCW      0x0163,0x002d
000630  0195003e          DCW      0x0195,0x003e
                          DCD      0x00000017
                          DCD      0x00000000
                          DCD      0x00000002
000640  41000000          DCB      0x41,0x00,0x00,0x00
                          %        16
000654  41000000          DCB      0x41,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000674  019a002d          DCW      0x019a,0x002d
000678  00000000          DCW      0x0000,0x0000
                          DCD      0x00000018
                          DCD      0x00000000
                          DCD      0x00000002
000688  e8bf87e6          DCB      0xe8,0xbf,0x87,0xe6
00068c  b581e4b8          DCB      0xb5,0x81,0xe4,0xb8
000690  8be99990          DCB      0x8b,0xe9,0x99,0x90
000694  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
00069c  4c4c204f          DCB      0x4c,0x4c,0x20,0x4f
0006a0  76657266          DCB      0x76,0x65,0x72,0x66
0006a4  6c6f7700          DCB      0x6c,0x6f,0x77,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0006bc  00fa0046          DCW      0x00fa,0x0046
0006c0  00000000          DCW      0x0000,0x0000
                          DCD      0x00000019
                          DCD      0x00000000
                          DCD      0x00000001
0006d0  302e3030          DCB      0x30,0x2e,0x30,0x30
0006d4  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
0006e4  302e3030          DCB      0x30,0x2e,0x30,0x30
0006e8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000704  01630046          DCW      0x0163,0x0046
000708  01950057          DCW      0x0195,0x0057
                          DCD      0x0000001a
                          DCD      0x00000000
                          DCD      0x00000002
000718  41000000          DCB      0x41,0x00,0x00,0x00
                          %        16
00072c  41000000          DCB      0x41,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00074c  019a0046          DCW      0x019a,0x0046
000750  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001b
                          DCD      0x00000000
                          DCD      0x00000002
000760  e794b5e6          DCB      0xe7,0x94,0xb5,0xe6
000764  b1a0e7b1          DCB      0xb1,0xa0,0xe7,0xb1
000768  bbe59e8b          DCB      0xbb,0xe5,0x9e,0x8b
00076c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000774  42617474          DCB      0x42,0x61,0x74,0x74
000778  65727920          DCB      0x65,0x72,0x79,0x20
00077c  54797065          DCB      0x54,0x79,0x70,0x65
000780  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000794  00fa005f          DCW      0x00fa,0x005f
000798  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001c
                          DCD      0x00000000
                          DCD      0x00000003
0007a8  e99482e7          DCB      0xe9,0x94,0x82,0xe7
0007ac  94b5e6b1          DCB      0x94,0xb5,0xe6,0xb1
0007b0  a0000000          DCB      0xa0,0x00,0x00,0x00
                          %        8
0007bc  4c696f6e          DCB      0x4c,0x69,0x6f,0x6e
0007c0  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0007dc  0163005f          DCW      0x0163,0x005f
0007e0  01c70070          DCW      0x01c7,0x0070
                          DCD      0x0000001d
                          DCD      0x00000000
                          DCD      0x00000002
0007f0  e8afade8          DCB      0xe8,0xaf,0xad,0xe8
0007f4  a8800000          DCB      0xa8,0x80,0x00,0x00
                          %        12
000804  4c616e67          DCB      0x4c,0x61,0x6e,0x67
000808  75616765          DCB      0x75,0x61,0x67,0x65
00080c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000824  00fa0078          DCW      0x00fa,0x0078
000828  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001e
                          DCD      0x00000000
                          DCD      0x00000003
000838  e4b8ade6          DCB      0xe4,0xb8,0xad,0xe6
00083c  96870000          DCB      0x96,0x87,0x00,0x00
                          %        12
00084c  4368696e          DCB      0x43,0x68,0x69,0x6e
000850  65736500          DCB      0x65,0x73,0x65,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00086c  01630078          DCW      0x0163,0x0078
000870  01c70089          DCW      0x01c7,0x0089
                  BoxData_List
                          DCD      0x00000002
                          DCD      0x00000000
                          DCD      0x00000005
000880  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
000894  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0008b4  00000000          DCW      0x0000,0x0000
0008b8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000002
                          DCD      0x00000000
                          DCD      0x00000005
0008c8  4f464600          DCB      0x4f,0x46,0x46,0x00
                          %        16
0008dc  4f464600          DCB      0x4f,0x46,0x46,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0008fc  00000000          DCW      0x0000,0x0000
000900  00000000          DCW      0x0000,0x0000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000005
000910  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
000924  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000944  00000000          DCW      0x0000,0x0000
000948  00000000          DCW      0x0000,0x0000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000005
000958  4f464600          DCB      0x4f,0x46,0x46,0x00
                          %        16
00096c  4f464600          DCB      0x4f,0x46,0x46,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
00098c  00000000          DCW      0x0000,0x0000
000990  00000000          DCW      0x0000,0x0000
                          DCD      0x00000006
                          DCD      0x00000000
                          DCD      0x00000005
0009a0  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
0009b4  4f4e0000          DCB      0x4f,0x4e,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0009d4  00000000          DCW      0x0000,0x0000
0009d8  00000000          DCW      0x0000,0x0000
                          DCD      0x00000006
                          DCD      0x00000000
                          DCD      0x00000005
0009e8  4f464600          DCB      0x4f,0x46,0x46,0x00
                          %        16
0009fc  4f464600          DCB      0x4f,0x46,0x46,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000a1c  00000000          DCW      0x0000,0x0000
000a20  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001c
                          DCD      0x00000000
                          DCD      0x00000005
000a30  e99482e7          DCB      0xe9,0x94,0x82,0xe7
000a34  94b5e6b1          DCB      0x94,0xb5,0xe6,0xb1
000a38  a0000000          DCB      0xa0,0x00,0x00,0x00
                          %        8
000a44  4c696f6e          DCB      0x4c,0x69,0x6f,0x6e
000a48  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000a64  00000000          DCW      0x0000,0x0000
000a68  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001c
                          DCD      0x00000000
                          DCD      0x00000005
000a78  e9958de6          DCB      0xe9,0x95,0x8d,0xe6
000a7c  b0a2e794          DCB      0xb0,0xa2,0xe7,0x94
000a80  b5e6b1a0          DCB      0xb5,0xe6,0xb1,0xa0
000a84  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000a8c  4e694d48          DCB      0x4e,0x69,0x4d,0x48
000a90  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000aac  00000000          DCW      0x0000,0x0000
000ab0  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001c
                          DCD      0x00000000
                          DCD      0x00000005
000ac0  e9958de9          DCB      0xe9,0x95,0x8d,0xe9
000ac4  9589e794          DCB      0x95,0x89,0xe7,0x94
000ac8  b5e6b1a0          DCB      0xb5,0xe6,0xb1,0xa0
000acc  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000ad4  4e694344          DCB      0x4e,0x69,0x43,0x44
000ad8  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000af4  00000000          DCW      0x0000,0x0000
000af8  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001c
                          DCD      0x00000000
                          DCD      0x00000005
000b08  e5b08fe5          DCB      0xe5,0xb0,0x8f,0xe5
000b0c  9e8be993          DCB      0x9e,0x8b,0xe9,0x93
000b10  85e985b8          DCB      0x85,0xe9,0x85,0xb8
000b14  e794b5e6          DCB      0xe7,0x94,0xb5,0xe6
000b18  b1a00000          DCB      0xb1,0xa0,0x00,0x00
000b1c  534c4100          DCB      0x53,0x4c,0x41,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000b3c  00000000          DCW      0x0000,0x0000
000b40  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001c
                          DCD      0x00000000
                          DCD      0x00000005
000b50  e99482e9          DCB      0xe9,0x94,0x82,0xe9
000b54  94b0e794          DCB      0x94,0xb0,0xe7,0x94
000b58  b5e6b1a0          DCB      0xb5,0xe6,0xb1,0xa0
000b5c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000b64  4c694d48          DCB      0x4c,0x69,0x4d,0x48
000b68  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000b84  00000000          DCW      0x0000,0x0000
000b88  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001e
                          DCD      0x00000000
                          DCD      0x00000005
000b98  e4b8ade6          DCB      0xe4,0xb8,0xad,0xe6
000b9c  96870000          DCB      0x96,0x87,0x00,0x00
                          %        12
000bac  4368696e          DCB      0x43,0x68,0x69,0x6e
000bb0  65736500          DCB      0x65,0x73,0x65,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000bcc  00000000          DCW      0x0000,0x0000
000bd0  00000000          DCW      0x0000,0x0000
                          DCD      0x0000001e
                          DCD      0x00000000
                          DCD      0x00000005
000be0  456e676c          DCB      0x45,0x6e,0x67,0x6c
000be4  69736800          DCB      0x69,0x73,0x68,0x00
                          %        12
000bf4  456e676c          DCB      0x45,0x6e,0x67,0x6c
000bf8  69736800          DCB      0x69,0x73,0x68,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000c14  00000000          DCW      0x0000,0x0000
000c18  00000000          DCW      0x0000,0x0000
                  slistSYS
000c1c  00e58685          DCB      0x00,0xe5,0x86,0x85
000c20  e998bbe6          DCB      0xe9,0x98,0xbb,0xe6
000c24  b58be8af          DCB      0xb5,0x8b,0xe8,0xaf
000c28  95000000          DCB      0x95,0x00,0x00,0x00
                          DCD      0x00000000
000c30  00492e52          DCB      0x00,0x49,0x2e,0x52
000c34  2e205445          DCB      0x2e,0x20,0x54,0x45
000c38  53540000          DCB      0x53,0x54,0x00,0x00
                          %        8
000c44  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000895
000c54  00e7a88b          DCB      0x00,0xe7,0xa8,0x8b
000c58  e68ea7e7          DCB      0xe6,0x8e,0xa7,0xe7
000c5c  94b5e6ba          DCB      0x94,0xb5,0xe6,0xba
000c60  90000000          DCB      0x90,0x00,0x00,0x00
                          DCD      0x00000000
000c68  00504f57          DCB      0x00,0x50,0x4f,0x57
000c6c  45520000          DCB      0x45,0x52,0x00,0x00
                          %        12
000c7c  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000896
000c8c  00e7a88b          DCB      0x00,0xe7,0xa8,0x8b
000c90  e68ea7e8          DCB      0xe6,0x8e,0xa7,0xe8
000c94  b49fe8bd          DCB      0xb4,0x9f,0xe8,0xbd
000c98  bd000000          DCB      0xbd,0x00,0x00,0x00
                          DCD      0x00000000
000ca0  004c4f41          DCB      0x00,0x4c,0x4f,0x41
000ca4  44000000          DCB      0x44,0x00,0x00,0x00
                          %        12
000cb4  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000897
000cc4  00e58585          DCB      0x00,0xe5,0x85,0x85
000cc8  e694bee7          DCB      0xe6,0x94,0xbe,0xe7
000ccc  94b50000          DCB      0x94,0xb5,0x00,0x00
                          %        8
000cd8  00432644          DCB      0x00,0x43,0x26,0x44
000cdc  43000000          DCB      0x43,0x00,0x00,0x00
                          %        12
000cec  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000898
000cfc  00e7b3bb          DCB      0x00,0xe7,0xb3,0xbb
000d00  e7bb9fe8          DCB      0xe7,0xbb,0x9f,0xe8
000d04  aebee7bd          DCB      0xae,0xbe,0xe7,0xbd
000d08  ae000000          DCB      0xae,0x00,0x00,0x00
                          DCD      0x00000000
000d10  00535953          DCB      0x00,0x53,0x59,0x53
000d14  54454d00          DCB      0x54,0x45,0x4d,0x00
                          %        12
000d24  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000899

;*** Start embedded assembler ***

#line 1 "..\\APP\\syssetting_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_syssetting_Face_c_795a80c2____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_syssetting_Face_c_795a80c2____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_syssetting_Face_c_795a80c2____REVSH|
#line 144
|__asm___17_syssetting_Face_c_795a80c2____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
