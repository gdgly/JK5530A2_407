; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\at24c01.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\at24c01.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\at24c01.crf --no_multibyte_chars ..\drive\AT24C01.c]
                          THUMB

                          AREA ||i.EEPROM_READ_Byte||, CODE, READONLY, ALIGN=2

                  EEPROM_READ_Byte PROC
;;;287    */
;;;288    vu8 EEPROM_READ_Byte(vu8 ReadAddr)
000000  b501              PUSH     {r0,lr}
;;;289    {
;;;290    	vu16 i;
;;;291    	static vu8 date;
;;;292    	/* ????EEPROM?????R??il??????? */
;;;293    	
;;;294    	/* ?1?u??I2C?????? */
;;;295    	i2c_Start();
000002  f7fffffe          BL       i2c_Start
;;;296    	
;;;297    	/* ?2?u??????i?7bit£¾??ibit0£¾????£fi0???i1??? */
;;;298    	i2c_SendByte(EE_DEV_ADDR | I2C_WR);	/* ??£¾??R */
000006  20a0              MOVS     r0,#0xa0
000008  f7fffffe          BL       i2c_SendByte
;;;299    	
;;;300    	/* ?3?u??ACK */
;;;301    	if (i2c_WaitAck() != 0)
00000c  f7fffffe          BL       i2c_WaitAck
000010  b100              CBZ      r0,|L1.20|
;;;302    	{
;;;303    		goto cmd_fail;	/* EEPROM????? */
000012  e01b              B        |L1.76|
                  |L1.20|
;;;304    	}
;;;305    
;;;306    	/* ?4?u??????i24C02??256??i??1??????i??£¾24C04??i?o????l????? */
;;;307    	i2c_SendByte(ReadAddr);
000014  f89d0000          LDRB     r0,[sp,#0]
000018  f7fffffe          BL       i2c_SendByte
;;;308    	
;;;309    	/* ?5?u??ACK */
;;;310    	if (i2c_WaitAck() != 0)
00001c  f7fffffe          BL       i2c_WaitAck
000020  b100              CBZ      r0,|L1.36|
;;;311    	{
;;;312    		goto cmd_fail;	/* EEPROM????? */
000022  e013              B        |L1.76|
                  |L1.36|
;;;313    	}
;;;314    	
;;;315    	/* ?6?u????I2C??c????e????EEPROM????i???????? */
;;;316    	i2c_Start();
000024  f7fffffe          BL       i2c_Start
;;;317    	
;;;318    	/* ?7?u??????i?7bit£¾??ibit0£¾????£fi0???i1??? */
;;;319    	i2c_SendByte(EE_DEV_ADDR | I2C_RD);	/* ??£¾??R */
000028  20a1              MOVS     r0,#0xa1
00002a  f7fffffe          BL       i2c_SendByte
;;;320    	
;;;321    	/* ?8?u??ACK */
;;;322    	if (i2c_WaitAck() != 0)
00002e  f7fffffe          BL       i2c_WaitAck
000032  b100              CBZ      r0,|L1.54|
;;;323    	{
;;;324    		goto cmd_fail;	/* EEPROM????? */
000034  e00a              B        |L1.76|
                  |L1.54|
;;;325    	}	
;;;326    	
;;;327    	/* ?9?u?????? */
;;;328    
;;;329    	 date= i2c_ReadByte();	/* ?1??? */
000036  f7fffffe          BL       i2c_ReadByte
00003a  4906              LDR      r1,|L1.84|
00003c  7008              STRB     r0,[r1,#0]
;;;330    	
;;;331    	/* y??1????i????Acki ?????????Acki?Nack */
;;;332    	i2c_NAck();	/* ??1??????iCPU??NACK??(??SDA = 1) */
00003e  f7fffffe          BL       i2c_NAck
;;;333    	/* ??I2C?????? */
;;;334    	i2c_Stop();
000042  f7fffffe          BL       i2c_Stop
;;;335    	return date;	/* ???? ??????*/
000046  4803              LDR      r0,|L1.84|
000048  7800              LDRB     r0,[r0,#0]  ; date
                  |L1.74|
;;;336    	
;;;337    	cmd_fail: /* ?R?????i????????i????I2C??????? */
;;;338    	/* ??I2C?????? */
;;;339    	i2c_Stop();
;;;340    	return 0;
;;;341    }
00004a  bd08              POP      {r3,pc}
                  |L1.76|
00004c  f7fffffe          BL       i2c_Stop
000050  2000              MOVS     r0,#0                 ;340
000052  e7fa              B        |L1.74|
;;;342    
                          ENDP

                  |L1.84|
                          DCD      date

                          AREA ||i.EEPROM_WriteByte||, CODE, READONLY, ALIGN=1

                  EEPROM_WriteByte PROC
;;;215    */
;;;216    void EEPROM_WriteByte(vu16 Addr,vu8 Data)
000000  b503              PUSH     {r0,r1,lr}
;;;217    {
000002  b083              SUB      sp,sp,#0xc
;;;218    	vu16 i,m;
;;;219    	vu16 usAddr;
;;;220    	/* 
;;;221    		???EEPROM???????l???????iy??????????pagec
;;;222    		??24xx02ipage size = 8
;;;223    		????m???u????????iu?1???i?????
;;;224    		????l????E: ?????page wirte??c
;;;225    	*/
;;;226    		usAddr = Addr;	
000004  f8bd000c          LDRH     r0,[sp,#0xc]
000008  9001              STR      r0,[sp,#4]
;;;227    		/* ????1????£¾??????i????????????? */
;;;228    			/*a?e?u?????i???????a*/
;;;229    			i2c_Stop();
00000a  f7fffffe          BL       i2c_Stop
;;;230    			
;;;231    			/* ???????????i???????£¾???, ???? 10ms 			
;;;232    				CLK?E?200KHz?i?????30???
;;;233    			*/
;;;234    			for (m = 0; m < 100; m++)
00000e  2000              MOVS     r0,#0
000010  9002              STR      r0,[sp,#8]
000012  e00d              B        |L2.48|
                  |L2.20|
;;;235    			{				
;;;236    				/* ?1?u??I2C?????? */
;;;237    				i2c_Start();
000014  f7fffffe          BL       i2c_Start
;;;238    				
;;;239    				/* ?2?u??????i?7bit£¾??ibit0£¾????£fi0???i1??? */
;;;240    				i2c_SendByte(EE_DEV_ADDR | I2C_WR);	/* ??£¾??R */
000018  20a0              MOVS     r0,#0xa0
00001a  f7fffffe          BL       i2c_SendByte
;;;241    				
;;;242    				/* ?3?u??????i????£¾????? */
;;;243    				if (i2c_WaitAck() == 0)
00001e  f7fffffe          BL       i2c_WaitAck
000022  b900              CBNZ     r0,|L2.38|
;;;244    				{
;;;245    					break;
000024  e008              B        |L2.56|
                  |L2.38|
000026  f8bd0008          LDRH     r0,[sp,#8]            ;234
00002a  1c40              ADDS     r0,r0,#1              ;234
00002c  b280              UXTH     r0,r0                 ;234
00002e  9002              STR      r0,[sp,#8]            ;234
                  |L2.48|
000030  f8bd0008          LDRH     r0,[sp,#8]            ;234
000034  2864              CMP      r0,#0x64              ;234
000036  dbed              BLT      |L2.20|
                  |L2.56|
000038  bf00              NOP      
;;;246    				}
;;;247    			}
;;;248    			if (m  == 1000)
00003a  f8bd0008          LDRH     r0,[sp,#8]
00003e  f5b07f7a          CMP      r0,#0x3e8
000042  d100              BNE      |L2.70|
;;;249    			{
;;;250    				goto cmd_fail;	/* EEPROM????? */
000044  e013              B        |L2.110|
                  |L2.70|
;;;251    			}
;;;252    		
;;;253    			/* ?4?u??????i24C02??256??i??1??????i??£¾24C04??i?o????l????? */
;;;254    			i2c_SendByte((vu8)usAddr);
000046  f8bd1004          LDRH     r1,[sp,#4]
00004a  b2c8              UXTB     r0,r1
00004c  f7fffffe          BL       i2c_SendByte
;;;255    			
;;;256    			/* ?5?u??ACK */
;;;257    			if (i2c_WaitAck() != 0)
000050  f7fffffe          BL       i2c_WaitAck
000054  b100              CBZ      r0,|L2.88|
;;;258    			{
;;;259    				goto cmd_fail;	/* EEPROM????? */
000056  e00a              B        |L2.110|
                  |L2.88|
;;;260    			}
;;;261    		/* ?6?u?????? */
;;;262    		i2c_SendByte(Data);
000058  f89d0010          LDRB     r0,[sp,#0x10]
00005c  f7fffffe          BL       i2c_SendByte
;;;263    	
;;;264    		/* ?7?u??ACK */
;;;265    		if (i2c_WaitAck() != 0)
000060  f7fffffe          BL       i2c_WaitAck
000064  b100              CBZ      r0,|L2.104|
;;;266    		{
;;;267    			goto cmd_fail;	/* EEPROM????? */
000066  e002              B        |L2.110|
                  |L2.104|
;;;268    		}
;;;269    		/* ?R????i??I2C?????? */
;;;270    		i2c_Stop();
000068  f7fffffe          BL       i2c_Stop
;;;271    		
;;;272    
;;;273    		cmd_fail: /* ?R?????i????????i????I2C??????? */
00006c  bf00              NOP      
                  |L2.110|
;;;274    		/* ??I2C?????? */
;;;275    		i2c_Stop();
00006e  f7fffffe          BL       i2c_Stop
;;;276    		          
;;;277    }
000072  b005              ADD      sp,sp,#0x14
000074  bd00              POP      {pc}
;;;278    /*
                          ENDP


                          AREA ||i.ReadBytes||, CODE, READONLY, ALIGN=1

                  ReadBytes PROC
;;;42     */
;;;43     vu8 ReadBytes(vu8 *_pReadBuf, vu16 _usAddress, vu16 _usSize)
000000  b517              PUSH     {r0-r2,r4,lr}
;;;44     {
000002  b081              SUB      sp,sp,#4
000004  4604              MOV      r4,r0
;;;45     	vu16 i;
;;;46     	
;;;47     	/* ????EEPROM?????R??il??????? */
;;;48     	
;;;49     	/* ?1?u??I2C?????? */
;;;50     	i2c_Start();
000006  f7fffffe          BL       i2c_Start
;;;51     	
;;;52     	/* ?2?u??????i?7bit£¾??ibit0£¾????£fi0???i1??? */
;;;53     	i2c_SendByte(EE_DEV_ADDR | I2C_WR);	/* ??£¾??R */
00000a  20a0              MOVS     r0,#0xa0
00000c  f7fffffe          BL       i2c_SendByte
;;;54     	
;;;55     	/* ?3?u??ACK */
;;;56     	if (i2c_WaitAck() != 0)
000010  f7fffffe          BL       i2c_WaitAck
000014  b100              CBZ      r0,|L3.24|
;;;57     	{
;;;58     		goto cmd_fail;	/* EEPROM????? */
000016  e035              B        |L3.132|
                  |L3.24|
;;;59     	}
;;;60     
;;;61     	/* ?4?u??????i24C02??256??i??1??????i??£¾24C04??i?o????l????? */
;;;62     	i2c_SendByte((vu8)_usAddress);
000018  f8bd1008          LDRH     r1,[sp,#8]
00001c  b2c8              UXTB     r0,r1
00001e  f7fffffe          BL       i2c_SendByte
;;;63     	
;;;64     	/* ?5?u??ACK */
;;;65     	if (i2c_WaitAck() != 0)
000022  f7fffffe          BL       i2c_WaitAck
000026  b100              CBZ      r0,|L3.42|
;;;66     	{
;;;67     		goto cmd_fail;	/* EEPROM????? */
000028  e02c              B        |L3.132|
                  |L3.42|
;;;68     	}
;;;69     	
;;;70     	/* ?6?u????I2C??c????e????EEPROM????i???????? */
;;;71     	i2c_Start();
00002a  f7fffffe          BL       i2c_Start
;;;72     	
;;;73     	/* ?7?u??????i?7bit£¾??ibit0£¾????£fi0???i1??? */
;;;74     	i2c_SendByte(EE_DEV_ADDR | I2C_RD);	/* ??£¾??R */
00002e  20a1              MOVS     r0,#0xa1
000030  f7fffffe          BL       i2c_SendByte
;;;75     	
;;;76     	/* ?8?u??ACK */
;;;77     	if (i2c_WaitAck() != 0)
000034  f7fffffe          BL       i2c_WaitAck
000038  b100              CBZ      r0,|L3.60|
;;;78     	{
;;;79     		goto cmd_fail;	/* EEPROM????? */
00003a  e023              B        |L3.132|
                  |L3.60|
;;;80     	}	
;;;81     	
;;;82     	/* ?9?u?????? */
;;;83     	for (i = 0; i < _usSize; i++)
00003c  2000              MOVS     r0,#0
00003e  9000              STR      r0,[sp,#0]
000040  e015              B        |L3.110|
                  |L3.66|
;;;84     	{
;;;85     		_pReadBuf[i] = i2c_ReadByte();	/* ?1??? */
000042  f7fffffe          BL       i2c_ReadByte
000046  f8bd1000          LDRH     r1,[sp,#0]
00004a  5460              STRB     r0,[r4,r1]
;;;86     		
;;;87     		/* y??1????i????Acki ?????????Acki?Nack */
;;;88     		if (i != _usSize - 1)
00004c  f8bd000c          LDRH     r0,[sp,#0xc]
000050  1e40              SUBS     r0,r0,#1
000052  f8bd1000          LDRH     r1,[sp,#0]
000056  4288              CMP      r0,r1
000058  d002              BEQ      |L3.96|
;;;89     		{
;;;90     			i2c_Ack();	/* ???????iCPU??ACK??(??SDA = 0) */
00005a  f7fffffe          BL       i2c_Ack
00005e  e001              B        |L3.100|
                  |L3.96|
;;;91     		}
;;;92     		else
;;;93     		{
;;;94     			i2c_NAck();	/* ??1??????iCPU??NACK??(??SDA = 1) */
000060  f7fffffe          BL       i2c_NAck
                  |L3.100|
000064  f8bd0000          LDRH     r0,[sp,#0]            ;83
000068  1c40              ADDS     r0,r0,#1              ;83
00006a  b280              UXTH     r0,r0                 ;83
00006c  9000              STR      r0,[sp,#0]            ;83
                  |L3.110|
00006e  f8bd0000          LDRH     r0,[sp,#0]            ;83
000072  f8bd100c          LDRH     r1,[sp,#0xc]          ;83
000076  4288              CMP      r0,r1                 ;83
000078  dbe3              BLT      |L3.66|
;;;95     		}
;;;96     	}
;;;97     	/* ??I2C?????? */
;;;98     	i2c_Stop();
00007a  f7fffffe          BL       i2c_Stop
;;;99     	return 1;	/* ???? */
00007e  2001              MOVS     r0,#1
                  |L3.128|
;;;100    
;;;101    cmd_fail: /* ?R?????i????????i????I2C??????? */
;;;102    	/* ??I2C?????? */
;;;103    	i2c_Stop();
;;;104    	return 0;
;;;105    }
000080  b004              ADD      sp,sp,#0x10
000082  bd10              POP      {r4,pc}
                  |L3.132|
000084  f7fffffe          BL       i2c_Stop
000088  2000              MOVS     r0,#0                 ;104
00008a  e7f9              B        |L3.128|
;;;106    
                          ENDP


                          AREA ||i.WriteBytes||, CODE, READONLY, ALIGN=1

                  WriteBytes PROC
;;;116    */
;;;117    vu8 WriteBytes(vu8 *_pWriteBuf, vu16 _usAddress, vu16 _usSize)
000000  b517              PUSH     {r0-r2,r4,lr}
;;;118    {
000002  b083              SUB      sp,sp,#0xc
000004  4604              MOV      r4,r0
;;;119    	vu16 i,m;
;;;120    	vu16 usAddr;
;;;121    	
;;;122    	/* 
;;;123    		???EEPROM???????l???????iy??????????pagec
;;;124    		??24xx02ipage size = 8
;;;125    		????m???u????????iu?1???i?????
;;;126    		????l????E: ?????page wirte??c
;;;127    	*/
;;;128    
;;;129    	usAddr = _usAddress;	
000006  f8bd0010          LDRH     r0,[sp,#0x10]
00000a  9000              STR      r0,[sp,#0]
;;;130    	for (i = 0; i < _usSize; i++)
00000c  2000              MOVS     r0,#0
00000e  9002              STR      r0,[sp,#8]
000010  e041              B        |L4.150|
                  |L4.18|
;;;131    	{
;;;132    		/* ????1????£¾??????i????????????? */
;;;133    		if ((i == 0) || (usAddr & (EE_PAGE_SIZE - 1)) == 0)
000012  f8bd0008          LDRH     r0,[sp,#8]
000016  b120              CBZ      r0,|L4.34|
000018  f8bd0000          LDRH     r0,[sp,#0]
00001c  f0000007          AND      r0,r0,#7
000020  bb30              CBNZ     r0,|L4.112|
                  |L4.34|
;;;134    		{
;;;135    			/*a?e?u?????i???????a*/
;;;136    			i2c_Stop();
000022  f7fffffe          BL       i2c_Stop
;;;137    			
;;;138    			/* ???????????i???????£¾???, ???? 10ms 			
;;;139    				CLK?E?200KHz?i?????30???
;;;140    			*/
;;;141    			for (m = 0; m < 100; m++)
000026  2000              MOVS     r0,#0
000028  9001              STR      r0,[sp,#4]
00002a  e00d              B        |L4.72|
                  |L4.44|
;;;142    			{				
;;;143    				/* ?1?u??I2C?????? */
;;;144    				i2c_Start();
00002c  f7fffffe          BL       i2c_Start
;;;145    				
;;;146    				/* ?2?u??????i?7bit£¾??ibit0£¾????£fi0???i1??? */
;;;147    				i2c_SendByte(EE_DEV_ADDR | I2C_WR);	/* ??£¾??R */
000030  20a0              MOVS     r0,#0xa0
000032  f7fffffe          BL       i2c_SendByte
;;;148    				
;;;149    				/* ?3?u??????i????£¾????? */
;;;150    				if (i2c_WaitAck() == 0)
000036  f7fffffe          BL       i2c_WaitAck
00003a  b900              CBNZ     r0,|L4.62|
;;;151    				{
;;;152    					break;
00003c  e008              B        |L4.80|
                  |L4.62|
00003e  f8bd0004          LDRH     r0,[sp,#4]            ;141
000042  1c40              ADDS     r0,r0,#1              ;141
000044  b280              UXTH     r0,r0                 ;141
000046  9001              STR      r0,[sp,#4]            ;141
                  |L4.72|
000048  f8bd0004          LDRH     r0,[sp,#4]            ;141
00004c  2864              CMP      r0,#0x64              ;141
00004e  dbed              BLT      |L4.44|
                  |L4.80|
000050  bf00              NOP      
;;;153    				}
;;;154    			}
;;;155    			if (m  == 1000)
000052  f8bd0004          LDRH     r0,[sp,#4]
000056  f5b07f7a          CMP      r0,#0x3e8
00005a  d100              BNE      |L4.94|
;;;156    			{
;;;157    				goto cmd_fail;	/* EEPROM????? */
00005c  e026              B        |L4.172|
                  |L4.94|
;;;158    			}
;;;159    		
;;;160    			/* ?4?u??????i24C02??256??i??1??????i??£¾24C04??i?o????l????? */
;;;161    			i2c_SendByte((vu8)usAddr);
00005e  f8bd1000          LDRH     r1,[sp,#0]
000062  b2c8              UXTB     r0,r1
000064  f7fffffe          BL       i2c_SendByte
;;;162    			
;;;163    			/* ?5?u??ACK */
;;;164    			if (i2c_WaitAck() != 0)
000068  f7fffffe          BL       i2c_WaitAck
00006c  b100              CBZ      r0,|L4.112|
;;;165    			{
;;;166    				goto cmd_fail;	/* EEPROM????? */
00006e  e01d              B        |L4.172|
                  |L4.112|
;;;167    			}
;;;168    		}
;;;169    	
;;;170    		/* ?6?u?????? */
;;;171    		i2c_SendByte(_pWriteBuf[i]);
000070  f8bd1008          LDRH     r1,[sp,#8]
000074  5c60              LDRB     r0,[r4,r1]
000076  f7fffffe          BL       i2c_SendByte
;;;172    	
;;;173    		/* ?7?u??ACK */
;;;174    		if (i2c_WaitAck() != 0)
00007a  f7fffffe          BL       i2c_WaitAck
00007e  b100              CBZ      r0,|L4.130|
;;;175    		{
;;;176    			goto cmd_fail;	/* EEPROM????? */
000080  e014              B        |L4.172|
                  |L4.130|
;;;177    		}
;;;178    
;;;179    		usAddr++;	/* ???1 */		
000082  f8bd0000          LDRH     r0,[sp,#0]
000086  1c40              ADDS     r0,r0,#1
000088  b280              UXTH     r0,r0
00008a  9000              STR      r0,[sp,#0]
00008c  f8bd0008          LDRH     r0,[sp,#8]            ;130
000090  1c40              ADDS     r0,r0,#1              ;130
000092  b280              UXTH     r0,r0                 ;130
000094  9002              STR      r0,[sp,#8]            ;130
                  |L4.150|
000096  f8bd0008          LDRH     r0,[sp,#8]            ;130
00009a  f8bd1014          LDRH     r1,[sp,#0x14]         ;130
00009e  4288              CMP      r0,r1                 ;130
0000a0  dbb7              BLT      |L4.18|
;;;180    	}
;;;181    	
;;;182    	/* ?R????i??I2C?????? */
;;;183    	i2c_Stop();
0000a2  f7fffffe          BL       i2c_Stop
;;;184    	return 1;
0000a6  2001              MOVS     r0,#1
                  |L4.168|
;;;185    
;;;186    cmd_fail: /* ?R?????i????????i????I2C??????? */
;;;187    	/* ??I2C?????? */
;;;188    	i2c_Stop();
;;;189    	return 0; 
;;;190    }
0000a8  b006              ADD      sp,sp,#0x18
0000aa  bd10              POP      {r4,pc}
                  |L4.172|
0000ac  f7fffffe          BL       i2c_Stop
0000b0  2000              MOVS     r0,#0                 ;189
0000b2  e7f9              B        |L4.168|
;;;191    
                          ENDP


                          AREA ||i.ee_CheckOk||, CODE, READONLY, ALIGN=1

                  ee_CheckOk PROC
;;;18     */
;;;19     vu8 ee_CheckOk(void)
000000  b510              PUSH     {r4,lr}
;;;20     {
;;;21     	if (i2c_CheckDevice(EE_DEV_ADDR) == 0)
000002  20a0              MOVS     r0,#0xa0
000004  f7fffffe          BL       i2c_CheckDevice
000008  b908              CBNZ     r0,|L5.14|
;;;22     	{
;;;23     		return 1;
00000a  2001              MOVS     r0,#1
                  |L5.12|
;;;24     	}
;;;25     	else
;;;26     	{
;;;27     		/* ???i????I2C?????? */
;;;28     		i2c_Stop();		
;;;29     		return 0;
;;;30     	}
;;;31     }
00000c  bd10              POP      {r4,pc}
                  |L5.14|
00000e  f7fffffe          BL       i2c_Stop
000012  2000              MOVS     r0,#0                 ;29
000014  e7fa              B        |L5.12|
;;;32     
                          ENDP


                          AREA ||i.ee_Delay||, CODE, READONLY, ALIGN=1

                  ee_Delay PROC
;;;344    
;;;345    static void ee_Delay( vu32 nCount)	 //???????
000000  b501              PUSH     {r0,lr}
;;;346    {
;;;347    	for(; nCount != 0; nCount--);
000002  e002              B        |L6.10|
                  |L6.4|
000004  9800              LDR      r0,[sp,#0]
000006  1e40              SUBS     r0,r0,#1
000008  9000              STR      r0,[sp,#0]
                  |L6.10|
00000a  9800              LDR      r0,[sp,#0]
00000c  2800              CMP      r0,#0
00000e  d1f9              BNE      |L6.4|
;;;348    }
000010  bd08              POP      {r3,pc}
;;;349    
                          ENDP


                          AREA ||i.ee_Erase||, CODE, READONLY, ALIGN=1

                  ee_Erase PROC
;;;191    
;;;192    void ee_Erase(void)
000000  b0c1              SUB      sp,sp,#0x104
;;;193    {
;;;194    	vu16 i;
;;;195    	vu8 buf[EE_SIZE];
;;;196    	
;;;197    	/* ????? */
;;;198    	for (i = 0; i < EE_SIZE; i++)
000002  2000              MOVS     r0,#0
000004  9040              STR      r0,[sp,#0x100]
000006  e009              B        |L7.28|
                  |L7.8|
;;;199    	{
;;;200    		buf[i] = 0xFF;
000008  20ff              MOVS     r0,#0xff
00000a  f8bd2100          LDRH     r2,[sp,#0x100]
00000e  f80d0002          STRB     r0,[sp,r2]
000012  f8bd0100          LDRH     r0,[sp,#0x100]        ;198
000016  1c40              ADDS     r0,r0,#1              ;198
000018  b280              UXTH     r0,r0                 ;198
00001a  9040              STR      r0,[sp,#0x100]        ;198
                  |L7.28|
00001c  f8bd0100          LDRH     r0,[sp,#0x100]        ;198
000020  28ff              CMP      r0,#0xff              ;198
000022  ddf1              BLE      |L7.8|
;;;201    	}
;;;202    	
;;;203    	/* ?EEPROM, ???? = 0i????? 256 */
;;;204    }
000024  b041              ADD      sp,sp,#0x104
000026  4770              BX       lr
;;;205    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=0

                  date
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\drive\\AT24C01.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_AT24C01_c_4eb00f1b____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_AT24C01_c_4eb00f1b____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_AT24C01_c_4eb00f1b____REVSH|
#line 144
|__asm___9_AT24C01_c_4eb00f1b____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
