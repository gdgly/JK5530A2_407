; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\sysinfo.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\sysinfo.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\sysinfo.crf --no_multibyte_chars ..\APP\sysinfo.c]
                          THUMB

                          AREA ||i.CreateSysinfo||, CODE, READONLY, ALIGN=2

                  CreateSysinfo PROC
;;;281    WM_HWIN CreateSysinfo(void);
;;;282    WM_HWIN CreateSysinfo(void){
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;283    	
;;;284    	int dlen, flen, _n = 0;
000004  2600              MOVS     r6,#0
;;;285    	
;;;286    	int *key_loc;
;;;287    	
;;;288    	if( FLAG_FIRSTWIN[6] ){
000006  484a              LDR      r0,|L1.304|
000008  7980              LDRB     r0,[r0,#6]  ; FLAG_FIRSTWIN
00000a  2800              CMP      r0,#0
00000c  d064              BEQ      |L1.216|
;;;289    		
;;;290    		if(  CLists.SYS_SYEARS 	      !=	0xffffff ){
00000e  4849              LDR      r0,|L1.308|
000010  f8b0010e          LDRH     r0,[r0,#0x10e]  ; CLists
000014  f06f417f          MVN      r1,#0xff000000
000018  4288              CMP      r0,r1
00001a  d010              BEQ      |L1.62|
;;;291    			
;;;292    			strcpy( SGhListSYSinfo[7].f_SName ,  Read_Data_Parse(1) ); 	
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       Read_Data_Parse
000022  4607              MOV      r7,r0
000024  4639              MOV      r1,r7
000026  4844              LDR      r0,|L1.312|
000028  f7fffffe          BL       strcpy
;;;293    			
;;;294    			strcpy( SGhListSYSinfo[7].f_EName ,  Read_Data_Parse(1) ); 
00002c  2001              MOVS     r0,#1
00002e  f7fffffe          BL       Read_Data_Parse
000032  4607              MOV      r7,r0
000034  4639              MOV      r1,r7
000036  4840              LDR      r0,|L1.312|
000038  3014              ADDS     r0,r0,#0x14
00003a  f7fffffe          BL       strcpy
                  |L1.62|
;;;295    		}
;;;296    		if(  CLists.SYS_SMONTHS 	  !=	0xffffff ){
00003e  483d              LDR      r0,|L1.308|
000040  f8900110          LDRB     r0,[r0,#0x110]  ; CLists
000044  f06f417f          MVN      r1,#0xff000000
000048  4288              CMP      r0,r1
00004a  d011              BEQ      |L1.112|
;;;297    			
;;;298    			strcpy( SGhListSYSinfo[9].f_SName ,  Read_Data_Parse(2) ); 	
00004c  2002              MOVS     r0,#2
00004e  f7fffffe          BL       Read_Data_Parse
000052  4607              MOV      r7,r0
000054  4639              MOV      r1,r7
000056  4838              LDR      r0,|L1.312|
000058  3090              ADDS     r0,r0,#0x90
00005a  f7fffffe          BL       strcpy
;;;299    			
;;;300    			strcpy( SGhListSYSinfo[9].f_EName ,  Read_Data_Parse(2) ); 	
00005e  2002              MOVS     r0,#2
000060  f7fffffe          BL       Read_Data_Parse
000064  4607              MOV      r7,r0
000066  4639              MOV      r1,r7
000068  4833              LDR      r0,|L1.312|
00006a  30a4              ADDS     r0,r0,#0xa4
00006c  f7fffffe          BL       strcpy
                  |L1.112|
;;;301    		}
;;;302    		if(  CLists.SYS_SDAYS 	      !=	0xffffff ){
000070  4830              LDR      r0,|L1.308|
000072  f8900111          LDRB     r0,[r0,#0x111]  ; CLists
000076  f06f417f          MVN      r1,#0xff000000
00007a  4288              CMP      r0,r1
00007c  d010              BEQ      |L1.160|
;;;303    			
;;;304    			strcpy( SGhListSYSinfo[11].f_SName , Read_Data_Parse(3) ); 	
00007e  2003              MOVS     r0,#3
000080  f7fffffe          BL       Read_Data_Parse
000084  4607              MOV      r7,r0
000086  4639              MOV      r1,r7
000088  482c              LDR      r0,|L1.316|
00008a  f7fffffe          BL       strcpy
;;;305    			
;;;306    			strcpy( SGhListSYSinfo[11].f_EName , Read_Data_Parse(3) ); 
00008e  2003              MOVS     r0,#3
000090  f7fffffe          BL       Read_Data_Parse
000094  4607              MOV      r7,r0
000096  4639              MOV      r1,r7
000098  4828              LDR      r0,|L1.316|
00009a  3014              ADDS     r0,r0,#0x14
00009c  f7fffffe          BL       strcpy
                  |L1.160|
;;;307    		}
;;;308    		if(  CLists.SYS_SerialNO 	  !=	0xffffff ){
0000a0  4824              LDR      r0,|L1.308|
0000a2  f8d00114          LDR      r0,[r0,#0x114]  ; CLists
0000a6  f06f417f          MVN      r1,#0xff000000
0000aa  4288              CMP      r0,r1
0000ac  d011              BEQ      |L1.210|
;;;309    			
;;;310    			strcpy( SGhListSYSinfo[13].f_SName , Read_Data_Parse(4) ); 	
0000ae  2004              MOVS     r0,#4
0000b0  f7fffffe          BL       Read_Data_Parse
0000b4  4607              MOV      r7,r0
0000b6  4639              MOV      r1,r7
0000b8  4820              LDR      r0,|L1.316|
0000ba  3090              ADDS     r0,r0,#0x90
0000bc  f7fffffe          BL       strcpy
;;;311    			
;;;312    			strcpy( SGhListSYSinfo[13].f_EName , Read_Data_Parse(4) ); 	
0000c0  2004              MOVS     r0,#4
0000c2  f7fffffe          BL       Read_Data_Parse
0000c6  4607              MOV      r7,r0
0000c8  4639              MOV      r1,r7
0000ca  481c              LDR      r0,|L1.316|
0000cc  30a4              ADDS     r0,r0,#0xa4
0000ce  f7fffffe          BL       strcpy
                  |L1.210|
;;;313    		}
;;;314    		
;;;315    		FLAG_FIRSTWIN[6] = 0;	
0000d2  2000              MOVS     r0,#0
0000d4  4916              LDR      r1,|L1.304|
0000d6  7188              STRB     r0,[r1,#6]
                  |L1.216|
;;;316    	} 	
;;;317    
;;;318    	dlen = sizeof( SGhListSYSinfo ) / sizeof( SGhListSYSinfo[0] );
0000d8  250e              MOVS     r5,#0xe
;;;319    	
;;;320    	key_loc = get_id_index( SGhListSYSinfo, dlen);
0000da  4629              MOV      r1,r5
0000dc  4818              LDR      r0,|L1.320|
0000de  f7fffffe          BL       get_id_index
0000e2  4604              MOV      r4,r0
;;;321    	
;;;322    	memset( displayStr, '\0', sizeof(displayStr));
0000e4  2114              MOVS     r1,#0x14
0000e6  4817              LDR      r0,|L1.324|
0000e8  f7fffffe          BL       __aeabi_memclr
;;;323    	
;;;324     	if( *key_loc != 8 ){
0000ec  6820              LDR      r0,[r4,#0]
0000ee  2808              CMP      r0,#8
0000f0  d00b              BEQ      |L1.266|
;;;325    
;;;326    		SGhListSYSinfo[*(key_loc+1)].focusType = 0;	
0000f2  2000              MOVS     r0,#0
0000f4  6861              LDR      r1,[r4,#4]
0000f6  eb0101c1          ADD      r1,r1,r1,LSL #3
0000fa  4a11              LDR      r2,|L1.320|
0000fc  eb0201c1          ADD      r1,r2,r1,LSL #3
000100  6048              STR      r0,[r1,#4]
;;;327    		
;;;328    		SGhListSYSinfo[7].focusType = 1;
000102  2101              MOVS     r1,#1
000104  4610              MOV      r0,r2
000106  f8c011fc          STR      r1,[r0,#0x1fc]
                  |L1.266|
;;;329    	} 
;;;330    	sysinfoWin = GUI_CreateDialogBox(_aDialogCreatesysinfo, GUI_COUNTOF(_aDialogCreatesysinfo), _cbDialogsysinfo, WM_HBKWIN, 0, 0);
00010a  f7fffffe          BL       WM_GetDesktopWindow
00010e  4607              MOV      r7,r0
000110  2000              MOVS     r0,#0
000112  9000              STR      r0,[sp,#0]
000114  463b              MOV      r3,r7
000116  4a0c              LDR      r2,|L1.328|
000118  2106              MOVS     r1,#6
00011a  9001              STR      r0,[sp,#4]
00011c  480b              LDR      r0,|L1.332|
00011e  f7fffffe          BL       GUI_CreateDialogBox
000122  490b              LDR      r1,|L1.336|
000124  6008              STR      r0,[r1,#0]  ; sysinfoWin
;;;331    	
;;;332    	return sysinfoWin;	
000126  4608              MOV      r0,r1
000128  6800              LDR      r0,[r0,#0]  ; sysinfoWin
;;;333    }
00012a  e8bd81fc          POP      {r2-r8,pc}
;;;334    
                          ENDP

00012e  0000              DCW      0x0000
                  |L1.304|
                          DCD      FLAG_FIRSTWIN
                  |L1.308|
                          DCD      CLists
                  |L1.312|
                          DCD      SGhListSYSinfo+0x204
                  |L1.316|
                          DCD      SGhListSYSinfo+0x324
                  |L1.320|
                          DCD      SGhListSYSinfo
                  |L1.324|
                          DCD      displayStr
                  |L1.328|
                          DCD      _cbDialogsysinfo
                  |L1.332|
                          DCD      _aDialogCreatesysinfo
                  |L1.336|
                          DCD      sysinfoWin

                          AREA ||i.KEY_DOWN_SYSINFO||, CODE, READONLY, ALIGN=2

                  KEY_DOWN_SYSINFO PROC
;;;334    
;;;335    void KEY_DOWN_SYSINFO( int handle)
000000  e92d4ff8          PUSH     {r3-r11,lr}
;;;336    {
000004  4605              MOV      r5,r0
;;;337    		int dlen = 0, i = 0;
000006  2600              MOVS     r6,#0
000008  2400              MOVS     r4,#0
;;;338    		
;;;339    		vu8 _f = 0;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;340    		
;;;341    		int *key_loc;
;;;342    		
;;;343    		int get_nextid = 0, nowid = 0, nowid_index = 0;
00000e  4680              MOV      r8,r0
000010  4681              MOV      r9,r0
000012  4682              MOV      r10,r0
;;;344    		
;;;345    		dlen = sizeof( SGhListSYSinfo ) / sizeof( SGhListSYSinfo[0] );
000014  260e              MOVS     r6,#0xe
;;;346    		
;;;347    		key_loc = get_id_index( SGhListSYSinfo, dlen);
000016  4631              MOV      r1,r6
000018  4827              LDR      r0,|L2.184|
00001a  f7fffffe          BL       get_id_index
00001e  4607              MOV      r7,r0
;;;348    		
;;;349    		nowid = *key_loc;
000020  f8d79000          LDR      r9,[r7,#0]
;;;350    		
;;;351    		nowid_index = *(key_loc + 1);
000024  f8d7a004          LDR      r10,[r7,#4]
;;;352    		
;;;353    		if( nowid == 0x194 )
000028  f5b97fca          CMP      r9,#0x194
00002c  d104              BNE      |L2.56|
;;;354    			
;;;355    				SGhListSYSinfo[7].focusType = 1;
00002e  2101              MOVS     r1,#1
000030  4821              LDR      r0,|L2.184|
000032  f8c011fc          STR      r1,[r0,#0x1fc]
000036  e03d              B        |L2.180|
                  |L2.56|
;;;356    		
;;;357    		else
;;;358    		{
;;;359    				memset( displayStr, '\0', sizeof(displayStr));
000038  2114              MOVS     r1,#0x14
00003a  4820              LDR      r0,|L2.188|
00003c  f7fffffe          BL       __aeabi_memclr
;;;360    			
;;;361    				if( FLAG_INPUTAUTH == 0 )
000040  481f              LDR      r0,|L2.192|
000042  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
000044  bbb0              CBNZ     r0,|L2.180|
;;;362    				{	
;;;363    						
;;;364    						get_nextid = get_nextindex( nowid, WINSI_id_DataLists, handle);
000046  462a              MOV      r2,r5
000048  491e              LDR      r1,|L2.196|
00004a  4648              MOV      r0,r9
00004c  f7fffffe          BL       get_nextindex
000050  4680              MOV      r8,r0
;;;365    					
;;;366    						if( get_nextid != 0xFF )
000052  f1b80fff          CMP      r8,#0xff
000056  d029              BEQ      |L2.172|
;;;367    						{
;;;368    								SGhListSYSinfo[nowid_index].focusType = 0;
000058  2000              MOVS     r0,#0
00005a  eb0a01ca          ADD      r1,r10,r10,LSL #3
00005e  4a16              LDR      r2,|L2.184|
000060  eb0201c1          ADD      r1,r2,r1,LSL #3
000064  6048              STR      r0,[r1,#4]
;;;369    							
;;;370    								for	( i = 0; i < dlen; i++)
000066  2400              MOVS     r4,#0
000068  e01d              B        |L2.166|
                  |L2.106|
;;;371    								{
;;;372    										if( SGhListSYSinfo[i].d_ID == get_nextid && (SGhListSYSinfo[i].t_Type == T_THref || SGhListSYSinfo[i].t_Type == T_TLISTBOX) )
00006a  eb0400c4          ADD      r0,r4,r4,LSL #3
00006e  4912              LDR      r1,|L2.184|
000070  f8510030          LDR      r0,[r1,r0,LSL #3]
000074  4540              CMP      r0,r8
000076  d115              BNE      |L2.164|
000078  eb0400c4          ADD      r0,r4,r4,LSL #3
00007c  eb0100c0          ADD      r0,r1,r0,LSL #3
000080  6880              LDR      r0,[r0,#8]
000082  2801              CMP      r0,#1
000084  d006              BEQ      |L2.148|
000086  eb0400c4          ADD      r0,r4,r4,LSL #3
00008a  eb0100c0          ADD      r0,r1,r0,LSL #3
00008e  6880              LDR      r0,[r0,#8]
000090  2803              CMP      r0,#3
000092  d107              BNE      |L2.164|
                  |L2.148|
;;;373    										{				
;;;374    												SGhListSYSinfo[i].focusType = 1;	
000094  2001              MOVS     r0,#1
000096  eb0401c4          ADD      r1,r4,r4,LSL #3
00009a  4a07              LDR      r2,|L2.184|
00009c  eb0201c1          ADD      r1,r2,r1,LSL #3
0000a0  6048              STR      r0,[r1,#4]
;;;375    												break;
0000a2  e002              B        |L2.170|
                  |L2.164|
0000a4  1c64              ADDS     r4,r4,#1              ;370
                  |L2.166|
0000a6  42b4              CMP      r4,r6                 ;370
0000a8  dbdf              BLT      |L2.106|
                  |L2.170|
0000aa  bf00              NOP      
                  |L2.172|
;;;376    										}
;;;377    								}	
;;;378    						
;;;379    						}
;;;380    						WM_InvalidateWindow(sysinfoWin);	
0000ac  4806              LDR      r0,|L2.200|
0000ae  6800              LDR      r0,[r0,#0]  ; sysinfoWin
0000b0  f7fffffe          BL       WM_InvalidateWindow
                  |L2.180|
;;;381    				}
;;;382    				else
;;;383    				{
;;;384    
;;;385    				}			
;;;386    			
;;;387    		}
;;;388    }
0000b4  e8bd8ff8          POP      {r3-r11,pc}
;;;389    
                          ENDP

                  |L2.184|
                          DCD      SGhListSYSinfo
                  |L2.188|
                          DCD      displayStr
                  |L2.192|
                          DCD      FLAG_INPUTAUTH
                  |L2.196|
                          DCD      WINSI_id_DataLists
                  |L2.200|
                          DCD      sysinfoWin

                          AREA ||i.KEY_SYSINFO_INPUT||, CODE, READONLY, ALIGN=2

                  KEY_SYSINFO_INPUT PROC
;;;390    /*  输入  */
;;;391    void KEY_SYSINFO_INPUT(char *strx){
000000  b57c              PUSH     {r2-r6,lr}
000002  4605              MOV      r5,r0
;;;392    	
;;;393    	int *key_loc;
;;;394    	
;;;395    	int i, dlen, flen, temp;
;;;396    	
;;;397    	vu8 _error = 0, not_d = 0;
000004  2000              MOVS     r0,#0
000006  9001              STR      r0,[sp,#4]
000008  9000              STR      r0,[sp,#0]
;;;398    	
;;;399    	if( FLAG_PWD )
00000a  484e              LDR      r0,|L3.324|
00000c  7800              LDRB     r0,[r0,#0]  ; FLAG_PWD
00000e  2800              CMP      r0,#0
000010  d07c              BEQ      |L3.268|
;;;400    	{
;;;401    			dlen = sizeof( SGhListSYSinfo ) / sizeof( SGhListSYSinfo[0] );
000012  260e              MOVS     r6,#0xe
;;;402    		
;;;403    			key_loc = get_id_index( SGhListSYSinfo, dlen);;
000014  4631              MOV      r1,r6
000016  484c              LDR      r0,|L3.328|
000018  f7fffffe          BL       get_id_index
00001c  4604              MOV      r4,r0
;;;404    			
;;;405    			if( *key_loc == 0x194  )
00001e  6820              LDR      r0,[r4,#0]
000020  f5b07fca          CMP      r0,#0x194
000024  d104              BNE      |L3.48|
;;;406    				
;;;407    					SGhListSYSinfo[7].focusType = 1;
000026  2101              MOVS     r1,#1
000028  4847              LDR      r0,|L3.328|
00002a  f8c011fc          STR      r1,[r0,#0x1fc]
                  |L3.46|
00002e  e087              B        |L3.320|
                  |L3.48|
;;;408    			
;;;409    			else
;;;410    			{
;;;411    					if( *strx == 0x2e && (*key_loc == 8 || *key_loc == 10 ||  *key_loc == 12 || *key_loc == 14 )   )
000030  7828              LDRB     r0,[r5,#0]
000032  282e              CMP      r0,#0x2e
000034  d10b              BNE      |L3.78|
000036  6820              LDR      r0,[r4,#0]
000038  2808              CMP      r0,#8
00003a  d0f8              BEQ      |L3.46|
00003c  6820              LDR      r0,[r4,#0]
00003e  280a              CMP      r0,#0xa
000040  d07e              BEQ      |L3.320|
000042  6820              LDR      r0,[r4,#0]
000044  280c              CMP      r0,#0xc
000046  d07b              BEQ      |L3.320|
000048  6820              LDR      r0,[r4,#0]
00004a  280e              CMP      r0,#0xe
00004c  d078              BEQ      |L3.320|
                  |L3.78|
;;;412    					{
;;;413    					
;;;414    					}
;;;415    					else
;;;416    					{
;;;417    							switch( *key_loc )
00004e  6820              LDR      r0,[r4,#0]
000050  2808              CMP      r0,#8
000052  d006              BEQ      |L3.98|
000054  280a              CMP      r0,#0xa
000056  d00e              BEQ      |L3.118|
000058  280c              CMP      r0,#0xc
00005a  d00d              BEQ      |L3.120|
00005c  280e              CMP      r0,#0xe
00005e  d11f              BNE      |L3.160|
000060  e014              B        |L3.140|
                  |L3.98|
;;;418    							{	
;;;419    									case 8:    if( strlen(displayStr) < 4 )	   strcat( displayStr, strx);    break;
000062  483a              LDR      r0,|L3.332|
000064  f7fffffe          BL       strlen
000068  2804              CMP      r0,#4
00006a  d203              BCS      |L3.116|
00006c  4629              MOV      r1,r5
00006e  4837              LDR      r0,|L3.332|
000070  f7fffffe          BL       strcat
                  |L3.116|
000074  e014              B        |L3.160|
                  |L3.118|
;;;420    									case 10:	
;;;421    									case 12:   if( strlen(displayStr) < 2 )	   strcat( displayStr, strx);    break;		
000076  bf00              NOP      
                  |L3.120|
000078  4834              LDR      r0,|L3.332|
00007a  f7fffffe          BL       strlen
00007e  2802              CMP      r0,#2
000080  d203              BCS      |L3.138|
000082  4629              MOV      r1,r5
000084  4831              LDR      r0,|L3.332|
000086  f7fffffe          BL       strcat
                  |L3.138|
00008a  e009              B        |L3.160|
                  |L3.140|
;;;422    									case 14:   if( strlen(displayStr) < 8 )    strcat( displayStr, strx);    break;			
00008c  482f              LDR      r0,|L3.332|
00008e  f7fffffe          BL       strlen
000092  2808              CMP      r0,#8
000094  d203              BCS      |L3.158|
000096  4629              MOV      r1,r5
000098  482c              LDR      r0,|L3.332|
00009a  f7fffffe          BL       strcat
                  |L3.158|
00009e  bf00              NOP      
                  |L3.160|
0000a0  bf00              NOP                            ;419
;;;423    							}	
;;;424    							if( SGhListSYSinfo[*(key_loc + 1)].focusType == 1 && ( SGhListSYSinfo[*(key_loc + 1)].t_Type == T_THref || SGhListSYSinfo[*(key_loc + 1)].t_Type == T_TLISTBOX )   )
0000a2  6860              LDR      r0,[r4,#4]
0000a4  eb0000c0          ADD      r0,r0,r0,LSL #3
0000a8  4927              LDR      r1,|L3.328|
0000aa  eb0100c0          ADD      r0,r1,r0,LSL #3
0000ae  6840              LDR      r0,[r0,#4]
0000b0  2801              CMP      r0,#1
0000b2  d125              BNE      |L3.256|
0000b4  6860              LDR      r0,[r4,#4]
0000b6  eb0000c0          ADD      r0,r0,r0,LSL #3
0000ba  eb0100c0          ADD      r0,r1,r0,LSL #3
0000be  6880              LDR      r0,[r0,#8]
0000c0  2801              CMP      r0,#1
0000c2  d007              BEQ      |L3.212|
0000c4  6860              LDR      r0,[r4,#4]
0000c6  eb0000c0          ADD      r0,r0,r0,LSL #3
0000ca  eb0100c0          ADD      r0,r1,r0,LSL #3
0000ce  6880              LDR      r0,[r0,#8]
0000d0  2803              CMP      r0,#3
0000d2  d115              BNE      |L3.256|
                  |L3.212|
;;;425    							{
;;;426    									
;;;427    									strcpy( SGhListSYSinfo[*(key_loc + 1)].f_SName, displayStr );	
0000d4  6861              LDR      r1,[r4,#4]
0000d6  eb0101c1          ADD      r1,r1,r1,LSL #3
0000da  4a1b              LDR      r2,|L3.328|
0000dc  eb0201c1          ADD      r1,r2,r1,LSL #3
0000e0  f101000c          ADD      r0,r1,#0xc
0000e4  4919              LDR      r1,|L3.332|
0000e6  f7fffffe          BL       strcpy
;;;428    											 
;;;429    									strcpy( SGhListSYSinfo[*(key_loc + 1)].f_EName, displayStr );
0000ea  6861              LDR      r1,[r4,#4]
0000ec  eb0101c1          ADD      r1,r1,r1,LSL #3
0000f0  4a15              LDR      r2,|L3.328|
0000f2  eb0201c1          ADD      r1,r2,r1,LSL #3
0000f6  f1010020          ADD      r0,r1,#0x20
0000fa  4914              LDR      r1,|L3.332|
0000fc  f7fffffe          BL       strcpy
                  |L3.256|
;;;430    							}	
;;;431    							WM_InvalidateWindow(sysinfoWin);	
000100  4813              LDR      r0,|L3.336|
000102  6800              LDR      r0,[r0,#0]  ; sysinfoWin
000104  f7fffffe          BL       WM_InvalidateWindow
000108  e01a              B        |L3.320|
00010a  e7ff              B        |L3.268|
                  |L3.268|
;;;432    					}					
;;;433    			}
;;;434    	}
;;;435    	else
;;;436    	{
;;;437    			if( strlen( c_password) < MAX_PWD_LEN -1 )
00010c  4811              LDR      r0,|L3.340|
00010e  f7fffffe          BL       strlen
000112  280e              CMP      r0,#0xe
000114  d214              BCS      |L3.320|
;;;438    			{    
;;;439    					 strcat( displayStr, "*");  
000116  a110              ADR      r1,|L3.344|
000118  480c              LDR      r0,|L3.332|
00011a  f7fffffe          BL       strcat
;;;440    
;;;441    					 strcat( c_password, strx); 
00011e  4629              MOV      r1,r5
000120  480c              LDR      r0,|L3.340|
000122  f7fffffe          BL       strcat
;;;442    
;;;443    					 strcpy( S_PWD[1].f_SName, displayStr );	
000126  4909              LDR      r1,|L3.332|
000128  480c              LDR      r0,|L3.348|
00012a  f7fffffe          BL       strcpy
;;;444    									 
;;;445    					 strcpy( S_PWD[1].f_EName, displayStr );	
00012e  4907              LDR      r1,|L3.332|
000130  480a              LDR      r0,|L3.348|
000132  3014              ADDS     r0,r0,#0x14
000134  f7fffffe          BL       strcpy
;;;446    
;;;447    					 WM_InvalidateWindow(sysinfoWin);				
000138  4805              LDR      r0,|L3.336|
00013a  6800              LDR      r0,[r0,#0]  ; sysinfoWin
00013c  f7fffffe          BL       WM_InvalidateWindow
                  |L3.320|
;;;448    			}		
;;;449    	}
;;;450    	
;;;451    }
000140  bd7c              POP      {r2-r6,pc}
;;;452    
                          ENDP

000142  0000              DCW      0x0000
                  |L3.324|
                          DCD      FLAG_PWD
                  |L3.328|
                          DCD      SGhListSYSinfo
                  |L3.332|
                          DCD      displayStr
                  |L3.336|
                          DCD      sysinfoWin
                  |L3.340|
                          DCD      c_password
                  |L3.344|
000158  2a00              DCB      "*",0
00015a  00                DCB      0
00015b  00                DCB      0
                  |L3.348|
                          DCD      S_PWD+0x54

                          AREA ||i.Sysinfo_delete_input||, CODE, READONLY, ALIGN=2

                  Sysinfo_delete_input PROC
;;;618    //删除输入值
;;;619    void Sysinfo_delete_input(){
000000  b57f              PUSH     {r0-r6,lr}
;;;620    	
;;;621    		int dlen = 0, flen = 0;
000002  2500              MOVS     r5,#0
000004  2600              MOVS     r6,#0
;;;622    		
;;;623    		int *key_loc;
;;;624    		
;;;625    		char temp_char[15];
;;;626    		
;;;627    		if( FLAG_INPUTAUTH ){	
000006  4844              LDR      r0,|L4.280|
000008  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
00000a  2800              CMP      r0,#0
00000c  d011              BEQ      |L4.50|
;;;628    			
;;;629    				if( FLAG_PWD){
00000e  4843              LDR      r0,|L4.284|
000010  7800              LDRB     r0,[r0,#0]  ; FLAG_PWD
000012  2800              CMP      r0,#0
000014  d04c              BEQ      |L4.176|
;;;630    					
;;;631    						dlen = sizeof(SGhListSYSinfo) / sizeof( SGhListSYSinfo[0] );
000016  250e              MOVS     r5,#0xe
;;;632    				
;;;633    						key_loc = get_id_index( SGhListSYSinfo, dlen);;
000018  4629              MOV      r1,r5
00001a  4841              LDR      r0,|L4.288|
00001c  f7fffffe          BL       get_id_index
000020  4604              MOV      r4,r0
;;;634    							
;;;635    						if( *key_loc == 0x194  )
000022  6820              LDR      r0,[r4,#0]
000024  f5b07fca          CMP      r0,#0x194
000028  d104              BNE      |L4.52|
;;;636    								
;;;637    								SGhListSYSinfo[7].focusType = 1;
00002a  2101              MOVS     r1,#1
00002c  483c              LDR      r0,|L4.288|
00002e  f8c011fc          STR      r1,[r0,#0x1fc]
                  |L4.50|
000032  e06f              B        |L4.276|
                  |L4.52|
;;;638    							
;;;639    						else
;;;640    						{
;;;641    								strcpy( displayStr , SGhListSYSinfo[*(key_loc+1)].f_EName );
000034  6860              LDR      r0,[r4,#4]
000036  eb0000c0          ADD      r0,r0,r0,LSL #3
00003a  4a39              LDR      r2,|L4.288|
00003c  eb0200c0          ADD      r0,r2,r0,LSL #3
000040  f1000120          ADD      r1,r0,#0x20
000044  4837              LDR      r0,|L4.292|
000046  f7fffffe          BL       strcpy
;;;642    								
;;;643    								if( SGhListSYSinfo[*(key_loc+1)].t_Type == T_THref && ( strlen( displayStr) != 0 || displayStr[0] != '\0' ) ){
00004a  6860              LDR      r0,[r4,#4]
00004c  eb0000c0          ADD      r0,r0,r0,LSL #3
000050  4933              LDR      r1,|L4.288|
000052  eb0100c0          ADD      r0,r1,r0,LSL #3
000056  6880              LDR      r0,[r0,#8]
000058  2801              CMP      r0,#1
00005a  d15b              BNE      |L4.276|
00005c  4831              LDR      r0,|L4.292|
00005e  f7fffffe          BL       strlen
000062  b918              CBNZ     r0,|L4.108|
000064  482f              LDR      r0,|L4.292|
000066  7800              LDRB     r0,[r0,#0]  ; displayStr
000068  2800              CMP      r0,#0
00006a  d053              BEQ      |L4.276|
                  |L4.108|
;;;644    									
;;;645    										displayStr [ strlen( displayStr) - 1 ] = '\0'; 
00006c  482d              LDR      r0,|L4.292|
00006e  f7fffffe          BL       strlen
000072  1e40              SUBS     r0,r0,#1
000074  492b              LDR      r1,|L4.292|
000076  2200              MOVS     r2,#0
000078  540a              STRB     r2,[r1,r0]
;;;646    										
;;;647    										strcpy( SGhListSYSinfo[*(key_loc+1)].f_SName, displayStr );	
00007a  6861              LDR      r1,[r4,#4]
00007c  eb0101c1          ADD      r1,r1,r1,LSL #3
000080  4a27              LDR      r2,|L4.288|
000082  eb0201c1          ADD      r1,r2,r1,LSL #3
000086  f101000c          ADD      r0,r1,#0xc
00008a  4926              LDR      r1,|L4.292|
00008c  f7fffffe          BL       strcpy
;;;648    										
;;;649    										strcpy( SGhListSYSinfo[*(key_loc+1)].f_EName, displayStr );	
000090  6861              LDR      r1,[r4,#4]
000092  eb0101c1          ADD      r1,r1,r1,LSL #3
000096  4a22              LDR      r2,|L4.288|
000098  eb0201c1          ADD      r1,r2,r1,LSL #3
00009c  f1010020          ADD      r0,r1,#0x20
0000a0  4920              LDR      r1,|L4.292|
0000a2  f7fffffe          BL       strcpy
;;;650    										
;;;651    										WM_InvalidateWindow(sysinfoWin);	
0000a6  4820              LDR      r0,|L4.296|
0000a8  6800              LDR      r0,[r0,#0]  ; sysinfoWin
0000aa  f7fffffe          BL       WM_InvalidateWindow
0000ae  e031              B        |L4.276|
                  |L4.176|
;;;652    								}								
;;;653    						}	
;;;654    				}
;;;655    				else
;;;656    				{
;;;657    						strcpy( temp_char , S_PWD[1].f_EName );
0000b0  491e              LDR      r1,|L4.300|
0000b2  4668              MOV      r0,sp
0000b4  f7fffffe          BL       strcpy
;;;658    						
;;;659    						if( S_PWD[1].t_Type == T_THref && ( strlen( temp_char) != 0 || temp_char[0] != '\0' ) &&  ( strlen( c_password) != 0 || c_password[0] != '\0' ) )
0000b8  481c              LDR      r0,|L4.300|
0000ba  3868              SUBS     r0,r0,#0x68
0000bc  6d00              LDR      r0,[r0,#0x50]
0000be  2801              CMP      r0,#1
0000c0  d128              BNE      |L4.276|
0000c2  4668              MOV      r0,sp
0000c4  f7fffffe          BL       strlen
0000c8  b910              CBNZ     r0,|L4.208|
0000ca  f89d0000          LDRB     r0,[sp,#0]
0000ce  b308              CBZ      r0,|L4.276|
                  |L4.208|
0000d0  4817              LDR      r0,|L4.304|
0000d2  f7fffffe          BL       strlen
0000d6  b910              CBNZ     r0,|L4.222|
0000d8  4815              LDR      r0,|L4.304|
0000da  7800              LDRB     r0,[r0,#0]  ; c_password
0000dc  b1d0              CBZ      r0,|L4.276|
                  |L4.222|
;;;660    						{
;;;661    							
;;;662    								temp_char [ strlen( temp_char) - 1 ] = '\0'; 
0000de  4668              MOV      r0,sp
0000e0  f7fffffe          BL       strlen
0000e4  1e40              SUBS     r0,r0,#1
0000e6  2200              MOVS     r2,#0
0000e8  f80d2000          STRB     r2,[sp,r0]
;;;663    								
;;;664    								c_password [ strlen(c_password) -1 ] = '\0';
0000ec  4810              LDR      r0,|L4.304|
0000ee  f7fffffe          BL       strlen
0000f2  1e40              SUBS     r0,r0,#1
0000f4  490e              LDR      r1,|L4.304|
0000f6  2200              MOVS     r2,#0
0000f8  540a              STRB     r2,[r1,r0]
;;;665    									
;;;666    								strcpy( S_PWD[1].f_SName, temp_char );	
0000fa  4669              MOV      r1,sp
0000fc  480b              LDR      r0,|L4.300|
0000fe  3814              SUBS     r0,r0,#0x14
000100  f7fffffe          BL       strcpy
;;;667    								
;;;668    								strcpy( S_PWD[1].f_EName, temp_char );	
000104  4669              MOV      r1,sp
000106  4809              LDR      r0,|L4.300|
000108  f7fffffe          BL       strcpy
;;;669    								
;;;670    								WM_InvalidateWindow(sysinfoWin);				
00010c  4806              LDR      r0,|L4.296|
00010e  6800              LDR      r0,[r0,#0]  ; sysinfoWin
000110  f7fffffe          BL       WM_InvalidateWindow
                  |L4.276|
;;;671    						}		
;;;672    				}
;;;673    		}
;;;674    
;;;675    }
000114  bd7f              POP      {r0-r6,pc}
;;;676    
                          ENDP

000116  0000              DCW      0x0000
                  |L4.280|
                          DCD      FLAG_INPUTAUTH
                  |L4.284|
                          DCD      FLAG_PWD
                  |L4.288|
                          DCD      SGhListSYSinfo
                  |L4.292|
                          DCD      displayStr
                  |L4.296|
                          DCD      sysinfoWin
                  |L4.300|
                          DCD      S_PWD+0x68
                  |L4.304|
                          DCD      c_password

                          AREA ||i.Sysinfo_ent||, CODE, READONLY, ALIGN=2

                  Sysinfo_ent PROC
;;;453    //确认键
;;;454    void Sysinfo_ent(){
000000  b5fe              PUSH     {r1-r7,lr}
;;;455    	
;;;456    	int *key_loc;
;;;457    	
;;;458    	int dlen, flen, temp;
;;;459    	
;;;460    	vu8 i = 0, x_x = 0, y_y = 0;
000002  2000              MOVS     r0,#0
000004  9002              STR      r0,[sp,#8]
000006  9001              STR      r0,[sp,#4]
000008  9000              STR      r0,[sp,#0]
;;;461    	
;;;462    	if( FLAG_PWD ){
00000a  48eb              LDR      r0,|L5.952|
00000c  7800              LDRB     r0,[r0,#0]  ; FLAG_PWD
00000e  2800              CMP      r0,#0
000010  d07d              BEQ      |L5.270|
;;;463    		
;;;464    		dlen = sizeof(SGhListSYSinfo) / sizeof( SGhListSYSinfo[0] );
000012  260e              MOVS     r6,#0xe
;;;465    		
;;;466    		key_loc = get_id_index( SGhListSYSinfo, dlen);;
000014  4631              MOV      r1,r6
000016  48e9              LDR      r0,|L5.956|
000018  f7fffffe          BL       get_id_index
00001c  4605              MOV      r5,r0
;;;467    			
;;;468    		if( *key_loc == 0x194  )
00001e  6828              LDR      r0,[r5,#0]
000020  f5b07fca          CMP      r0,#0x194
000024  d104              BNE      |L5.48|
;;;469    				
;;;470    				SGhListSYSinfo[7].focusType = 1;
000026  2101              MOVS     r1,#1
000028  48e4              LDR      r0,|L5.956|
00002a  f8c011fc          STR      r1,[r0,#0x1fc]
00002e  e1c1              B        |L5.948|
                  |L5.48|
;;;471    			
;;;472    		else
;;;473    		{		
;;;474    				memset( displayStr, '\0', sizeof(displayStr));
000030  2114              MOVS     r1,#0x14
000032  48e3              LDR      r0,|L5.960|
000034  f7fffffe          BL       __aeabi_memclr
;;;475    		
;;;476    				temp = *(key_loc + 1);
000038  686c              LDR      r4,[r5,#4]
;;;477    
;;;478    				switch( SGhListSYSinfo[temp].t_Type ){
00003a  eb0400c4          ADD      r0,r4,r4,LSL #3
00003e  49df              LDR      r1,|L5.956|
000040  eb0100c0          ADD      r0,r1,r0,LSL #3
000044  6880              LDR      r0,[r0,#8]
000046  2800              CMP      r0,#0
000048  d07d              BEQ      |L5.326|
00004a  2801              CMP      r0,#1
00004c  d07c              BEQ      |L5.328|
00004e  2802              CMP      r0,#2
000050  d07b              BEQ      |L5.330|
000052  2803              CMP      r0,#3
000054  d17a              BNE      |L5.332|
;;;479    			
;;;480    						case T_TLISTBOX:  {
;;;481    				
;;;482    							if( !FLAG_INPUTAUTH )
000056  48db              LDR      r0,|L5.964|
000058  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
00005a  2800              CMP      r0,#0
00005c  d177              BNE      |L5.334|
;;;483    							{
;;;484    					
;;;485    									FLAG_INPUTAUTH = 1;
00005e  2001              MOVS     r0,#1
000060  49d8              LDR      r1,|L5.964|
000062  7008              STRB     r0,[r1,#0]
;;;486    								
;;;487    									if( *key_loc == 10)
000064  6828              LDR      r0,[r5,#0]
000066  280a              CMP      r0,#0xa
000068  d172              BNE      |L5.336|
;;;488    									{
;;;489    											//初始化月份列表显示坐标
;;;490    											for( i = 0; i < sizeof( m_List) / sizeof( m_List[0]); i++ )
00006a  2000              MOVS     r0,#0
00006c  9002              STR      r0,[sp,#8]
00006e  e0d6              B        |L5.542|
                  |L5.112|
;;;491    											{
;;;492    													if( m_List[i].d_x == 0|| m_List[i].d_y == 0 || m_List[i].d_x1 == 0 || m_List[i].d_y1 == 0 )
000070  f89d0008          LDRB     r0,[sp,#8]
000074  eb0000c0          ADD      r0,r0,r0,LSL #3
000078  49d3              LDR      r1,|L5.968|
00007a  eb0100c0          ADD      r0,r1,r0,LSL #3
00007e  f8b00040          LDRH     r0,[r0,#0x40]
000082  b1d8              CBZ      r0,|L5.188|
000084  f89d0008          LDRB     r0,[sp,#8]
000088  eb0000c0          ADD      r0,r0,r0,LSL #3
00008c  eb0100c0          ADD      r0,r1,r0,LSL #3
000090  f8b00042          LDRH     r0,[r0,#0x42]
000094  b190              CBZ      r0,|L5.188|
000096  f89d0008          LDRB     r0,[sp,#8]
00009a  eb0000c0          ADD      r0,r0,r0,LSL #3
00009e  eb0100c0          ADD      r0,r1,r0,LSL #3
0000a2  f8b00044          LDRH     r0,[r0,#0x44]
0000a6  b148              CBZ      r0,|L5.188|
0000a8  f89d0008          LDRB     r0,[sp,#8]
0000ac  eb0000c0          ADD      r0,r0,r0,LSL #3
0000b0  eb0100c0          ADD      r0,r1,r0,LSL #3
0000b4  f8b00046          LDRH     r0,[r0,#0x46]
0000b8  2800              CMP      r0,#0
0000ba  d171              BNE      |L5.416|
                  |L5.188|
;;;493    													{
;;;494    															if( i % 4 == 0 && i != 0 ){    y_y++;    x_x = 0;    }
0000bc  f89d0008          LDRB     r0,[sp,#8]
0000c0  17c1              ASRS     r1,r0,#31
0000c2  eb007191          ADD      r1,r0,r1,LSR #30
0000c6  1089              ASRS     r1,r1,#2
0000c8  eba00181          SUB      r1,r0,r1,LSL #2
0000cc  b949              CBNZ     r1,|L5.226|
0000ce  f89d1008          LDRB     r1,[sp,#8]
0000d2  b131              CBZ      r1,|L5.226|
0000d4  f89d0000          LDRB     r0,[sp,#0]
0000d8  1c40              ADDS     r0,r0,#1
0000da  b2c0              UXTB     r0,r0
0000dc  9000              STR      r0,[sp,#0]
0000de  2000              MOVS     r0,#0
0000e0  9001              STR      r0,[sp,#4]
                  |L5.226|
;;;495    																
;;;496    															m_List[i].d_x  = SGhListSYSinfo[temp].d_x + ( 20 * x_x );
0000e2  eb0400c4          ADD      r0,r4,r4,LSL #3
0000e6  49b5              LDR      r1,|L5.956|
0000e8  eb0100c0          ADD      r0,r1,r0,LSL #3
0000ec  f8b00040          LDRH     r0,[r0,#0x40]
0000f0  f89d1004          LDRB     r1,[sp,#4]
0000f4  2214              MOVS     r2,#0x14
0000f6  fb120001          SMLABB   r0,r2,r1,r0
0000fa  f89d1008          LDRB     r1,[sp,#8]
0000fe  eb0101c1          ADD      r1,r1,r1,LSL #3
000102  4ab1              LDR      r2,|L5.968|
000104  eb0201c1          ADD      r1,r2,r1,LSL #3
000108  f8a10040          STRH     r0,[r1,#0x40]
;;;497    																
;;;498    															m_List[i].d_y  = SGhListSYSinfo[temp].d_y + ( 17 * y_y );
00010c  e000              B        |L5.272|
                  |L5.270|
00010e  e119              B        |L5.836|
                  |L5.272|
000110  eb0400c4          ADD      r0,r4,r4,LSL #3
000114  49a9              LDR      r1,|L5.956|
000116  eb0100c0          ADD      r0,r1,r0,LSL #3
00011a  f8b00042          LDRH     r0,[r0,#0x42]
00011e  f89d1000          LDRB     r1,[sp,#0]
000122  2211              MOVS     r2,#0x11
000124  fb120001          SMLABB   r0,r2,r1,r0
000128  f89d1008          LDRB     r1,[sp,#8]
00012c  eb0101c1          ADD      r1,r1,r1,LSL #3
000130  4aa5              LDR      r2,|L5.968|
000132  eb0201c1          ADD      r1,r2,r1,LSL #3
000136  f8a10042          STRH     r0,[r1,#0x42]
;;;499    																
;;;500    															m_List[i].d_x1 = SGhListSYSinfo[temp].d_x + ( 20 * x_x ) + 20 ;
00013a  eb0400c4          ADD      r0,r4,r4,LSL #3
00013e  499f              LDR      r1,|L5.956|
000140  eb0100c0          ADD      r0,r1,r0,LSL #3
000144  e005              B        |L5.338|
                  |L5.326|
000146  e0fb              B        |L5.832|
                  |L5.328|
000148  e0d0              B        |L5.748|
                  |L5.330|
00014a  e0f8              B        |L5.830|
                  |L5.332|
00014c  e0f9              B        |L5.834|
                  |L5.334|
00014e  e06c              B        |L5.554|
                  |L5.336|
000150  e0c7              B        |L5.738|
                  |L5.338|
000152  f8b00040          LDRH     r0,[r0,#0x40]
000156  f89d1004          LDRB     r1,[sp,#4]
00015a  2214              MOVS     r2,#0x14
00015c  fb120001          SMLABB   r0,r2,r1,r0
000160  3014              ADDS     r0,r0,#0x14
000162  f89d1008          LDRB     r1,[sp,#8]
000166  eb0101c1          ADD      r1,r1,r1,LSL #3
00016a  4a97              LDR      r2,|L5.968|
00016c  eb0201c1          ADD      r1,r2,r1,LSL #3
000170  f8a10044          STRH     r0,[r1,#0x44]
;;;501    																
;;;502    															m_List[i].d_y1 = SGhListSYSinfo[temp].d_y + ( 17 * y_y ) + 17;	
000174  eb0400c4          ADD      r0,r4,r4,LSL #3
000178  4990              LDR      r1,|L5.956|
00017a  eb0100c0          ADD      r0,r1,r0,LSL #3
00017e  f8b00042          LDRH     r0,[r0,#0x42]
000182  f89d1000          LDRB     r1,[sp,#0]
000186  2211              MOVS     r2,#0x11
000188  fb120001          SMLABB   r0,r2,r1,r0
00018c  3011              ADDS     r0,r0,#0x11
00018e  f89d1008          LDRB     r1,[sp,#8]
000192  eb0101c1          ADD      r1,r1,r1,LSL #3
000196  4a8c              LDR      r2,|L5.968|
000198  eb0201c1          ADD      r1,r2,r1,LSL #3
00019c  f8a10046          STRH     r0,[r1,#0x46]
                  |L5.416|
;;;503    													}		
;;;504    													if( strcmp( SGhListSYSinfo[temp].f_EName, m_List[i].f_EName ) == 0 )	
0001a0  f89d2008          LDRB     r2,[sp,#8]
0001a4  eb0202c2          ADD      r2,r2,r2,LSL #3
0001a8  4b87              LDR      r3,|L5.968|
0001aa  eb0302c2          ADD      r2,r3,r2,LSL #3
0001ae  f1020120          ADD      r1,r2,#0x20
0001b2  eb0402c4          ADD      r2,r4,r4,LSL #3
0001b6  4b81              LDR      r3,|L5.956|
0001b8  eb0302c2          ADD      r2,r3,r2,LSL #3
0001bc  f1020020          ADD      r0,r2,#0x20
0001c0  f7fffffe          BL       strcmp
0001c4  b988              CBNZ     r0,|L5.490|
;;;505    													{
;;;506    															m_List[i].focusType = 1;
0001c6  2001              MOVS     r0,#1
0001c8  f89d1008          LDRB     r1,[sp,#8]
0001cc  eb0101c1          ADD      r1,r1,r1,LSL #3
0001d0  4a7d              LDR      r2,|L5.968|
0001d2  eb0201c1          ADD      r1,r2,r1,LSL #3
0001d6  6048              STR      r0,[r1,#4]
;;;507    																	
;;;508    															m_List[i].d_BKColor = 0x00F0FFFF;
0001d8  487c              LDR      r0,|L5.972|
0001da  f89d1008          LDRB     r1,[sp,#8]
0001de  eb0101c1          ADD      r1,r1,r1,LSL #3
0001e2  eb0201c1          ADD      r1,r2,r1,LSL #3
0001e6  6388              STR      r0,[r1,#0x38]
0001e8  e00f              B        |L5.522|
                  |L5.490|
;;;509    													}
;;;510    													else
;;;511    													{ 
;;;512    															m_List[i].focusType = 0;
0001ea  2000              MOVS     r0,#0
0001ec  f89d1008          LDRB     r1,[sp,#8]
0001f0  eb0101c1          ADD      r1,r1,r1,LSL #3
0001f4  4a74              LDR      r2,|L5.968|
0001f6  eb0201c1          ADD      r1,r2,r1,LSL #3
0001fa  6048              STR      r0,[r1,#4]
;;;513    																	
;;;514    															m_List[i].d_BKColor = 0x0;									
0001fc  f89d1008          LDRB     r1,[sp,#8]
000200  eb0101c1          ADD      r1,r1,r1,LSL #3
000204  eb0201c1          ADD      r1,r2,r1,LSL #3
000208  6388              STR      r0,[r1,#0x38]
                  |L5.522|
;;;515    													}
;;;516    													x_x++;
00020a  f89d0004          LDRB     r0,[sp,#4]
00020e  1c40              ADDS     r0,r0,#1
000210  b2c0              UXTB     r0,r0
000212  9001              STR      r0,[sp,#4]
000214  f89d0008          LDRB     r0,[sp,#8]            ;490
000218  1c40              ADDS     r0,r0,#1              ;490
00021a  b2c0              UXTB     r0,r0                 ;490
00021c  9002              STR      r0,[sp,#8]            ;490
                  |L5.542|
00021e  f89d0008          LDRB     r0,[sp,#8]            ;490
000222  280c              CMP      r0,#0xc               ;490
000224  f4ffaf24          BCC      |L5.112|
000228  e05b              B        |L5.738|
                  |L5.554|
;;;517    											}
;;;518    									}									
;;;519    							}
;;;520    							else
;;;521    							{
;;;522    									FLAG_INPUTAUTH = 0;
00022a  2000              MOVS     r0,#0
00022c  4965              LDR      r1,|L5.964|
00022e  7008              STRB     r0,[r1,#0]
;;;523    									
;;;524    									for( i = 0; i < sizeof( m_List) / sizeof( m_List[0]); i++ )
000230  9002              STR      r0,[sp,#8]
000232  e050              B        |L5.726|
                  |L5.564|
;;;525    									{
;;;526    											m_List[i].d_BKColor =  0x0;
000234  2000              MOVS     r0,#0
000236  f89d1008          LDRB     r1,[sp,#8]
00023a  eb0101c1          ADD      r1,r1,r1,LSL #3
00023e  4a62              LDR      r2,|L5.968|
000240  eb0201c1          ADD      r1,r2,r1,LSL #3
000244  6388              STR      r0,[r1,#0x38]
;;;527    										
;;;528    											if( m_List[i].focusType == 1 && SGhListSYSinfo[temp].d_ID == 9 ){
000246  f89d0008          LDRB     r0,[sp,#8]
00024a  eb0000c0          ADD      r0,r0,r0,LSL #3
00024e  4611              MOV      r1,r2
000250  eb0100c0          ADD      r0,r1,r0,LSL #3
000254  6840              LDR      r0,[r0,#4]
000256  2801              CMP      r0,#1
000258  d138              BNE      |L5.716|
00025a  eb0400c4          ADD      r0,r4,r4,LSL #3
00025e  4957              LDR      r1,|L5.956|
000260  f8510030          LDR      r0,[r1,r0,LSL #3]
000264  2809              CMP      r0,#9
000266  d131              BNE      |L5.716|
;;;529    																	
;;;530    													strcmp( SGhListSYSinfo[temp].f_SName, m_List[i].f_SName );
000268  f89d2008          LDRB     r2,[sp,#8]
00026c  eb0202c2          ADD      r2,r2,r2,LSL #3
000270  4b55              LDR      r3,|L5.968|
000272  eb0302c2          ADD      r2,r3,r2,LSL #3
000276  f102010c          ADD      r1,r2,#0xc
00027a  eb0402c4          ADD      r2,r4,r4,LSL #3
00027e  4b4f              LDR      r3,|L5.956|
000280  eb0302c2          ADD      r2,r3,r2,LSL #3
000284  f102000c          ADD      r0,r2,#0xc
000288  f7fffffe          BL       strcmp
;;;531    											
;;;532    													strcmp( SGhListSYSinfo[temp].f_EName, m_List[i].f_EName );	
00028c  f89d2008          LDRB     r2,[sp,#8]
000290  eb0202c2          ADD      r2,r2,r2,LSL #3
000294  4b4c              LDR      r3,|L5.968|
000296  eb0302c2          ADD      r2,r3,r2,LSL #3
00029a  f1020120          ADD      r1,r2,#0x20
00029e  eb0402c4          ADD      r2,r4,r4,LSL #3
0002a2  4b46              LDR      r3,|L5.956|
0002a4  eb0302c2          ADD      r2,r3,r2,LSL #3
0002a8  f1020020          ADD      r0,r2,#0x20
0002ac  f7fffffe          BL       strcmp
;;;533    											
;;;534    													CLists.SYS_SMONTHS = atoi( m_List[i].f_EName );	
0002b0  f89d1008          LDRB     r1,[sp,#8]
0002b4  eb0101c1          ADD      r1,r1,r1,LSL #3
0002b8  4a43              LDR      r2,|L5.968|
0002ba  eb0201c1          ADD      r1,r2,r1,LSL #3
0002be  f1010020          ADD      r0,r1,#0x20
0002c2  f7fffffe          BL       atoi
0002c6  4942              LDR      r1,|L5.976|
0002c8  f8810110          STRB     r0,[r1,#0x110]
                  |L5.716|
0002cc  f89d0008          LDRB     r0,[sp,#8]            ;524
0002d0  1c40              ADDS     r0,r0,#1              ;524
0002d2  b2c0              UXTB     r0,r0                 ;524
0002d4  9002              STR      r0,[sp,#8]            ;524
                  |L5.726|
0002d6  f89d0008          LDRB     r0,[sp,#8]            ;524
0002da  280c              CMP      r0,#0xc               ;524
0002dc  d3aa              BCC      |L5.564|
;;;535    											}	
;;;536    									}					
;;;537    									Write_Flash_Bytes();					
0002de  f7fffffe          BL       Write_Flash_Bytes
                  |L5.738|
;;;538    							}
;;;539    							WM_InvalidateWindow(sysinfoWin);				
0002e2  483c              LDR      r0,|L5.980|
0002e4  6800              LDR      r0,[r0,#0]  ; sysinfoWin
0002e6  f7fffffe          BL       WM_InvalidateWindow
;;;540    				}
;;;541    				
;;;542    				break;
0002ea  e02a              B        |L5.834|
                  |L5.748|
;;;543    				
;;;544    				case T_THref:{
;;;545    					
;;;546    					if( FLAG_INPUTAUTH ){
0002ec  4835              LDR      r0,|L5.964|
0002ee  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
0002f0  b128              CBZ      r0,|L5.766|
;;;547    						
;;;548    							FLAG_INPUTAUTH = 0;
0002f2  2000              MOVS     r0,#0
0002f4  4933              LDR      r1,|L5.964|
0002f6  7008              STRB     r0,[r1,#0]
;;;549    							
;;;550    							Sysinfo_value_correct();
0002f8  f7fffffe          BL       Sysinfo_value_correct
0002fc  e01e              B        |L5.828|
                  |L5.766|
;;;551    						
;;;552    					}else{
;;;553    						
;;;554    							FLAG_INPUTAUTH = 1;
0002fe  2001              MOVS     r0,#1
000300  4930              LDR      r1,|L5.964|
000302  7008              STRB     r0,[r1,#0]
;;;555    							
;;;556    							SGhListSYSinfo[temp].d_BKColor = 0x00F0FFFF;
000304  4831              LDR      r0,|L5.972|
000306  eb0401c4          ADD      r1,r4,r4,LSL #3
00030a  4a2c              LDR      r2,|L5.956|
00030c  eb0201c1          ADD      r1,r2,r1,LSL #3
000310  6388              STR      r0,[r1,#0x38]
;;;557    				
;;;558    							strcpy( SGhListSYSinfo[temp].f_SName, "");
000312  eb0400c4          ADD      r0,r4,r4,LSL #3
000316  4611              MOV      r1,r2
000318  eb0100c0          ADD      r0,r1,r0,LSL #3
00031c  a12e              ADR      r1,|L5.984|
00031e  7809              LDRB     r1,[r1,#0]
000320  7301              STRB     r1,[r0,#0xc]
;;;559    				
;;;560    							strcpy( SGhListSYSinfo[temp].f_EName, "");
000322  eb0400c4          ADD      r0,r4,r4,LSL #3
000326  4611              MOV      r1,r2
000328  eb0100c0          ADD      r0,r1,r0,LSL #3
00032c  a12a              ADR      r1,|L5.984|
00032e  7809              LDRB     r1,[r1,#0]
000330  f8801020          STRB     r1,[r0,#0x20]
;;;561    				
;;;562    							WM_InvalidateWindow(sysinfoWin);			
000334  4827              LDR      r0,|L5.980|
000336  6800              LDR      r0,[r0,#0]  ; sysinfoWin
000338  f7fffffe          BL       WM_InvalidateWindow
                  |L5.828|
;;;563    					}
;;;564    				
;;;565    				}
;;;566    				
;;;567    				break;
00033c  e001              B        |L5.834|
                  |L5.830|
;;;568    				
;;;569    				case T_Text:
;;;570    				
;;;571    				break;
00033e  e000              B        |L5.834|
                  |L5.832|
;;;572    				
;;;573    				case T_Button:
;;;574    				
;;;575    				break;
000340  bf00              NOP      
                  |L5.834|
000342  e037              B        |L5.948|
                  |L5.836|
;;;576    				
;;;577    			}
;;;578    		
;;;579    	  }
;;;580    	}
;;;581    	else
;;;582    	{
;;;583    			if( ent_pwd )
000344  4825              LDR      r0,|L5.988|
000346  7800              LDRB     r0,[r0,#0]  ; ent_pwd
000348  b1f0              CBZ      r0,|L5.904|
;;;584    			{
;;;585    					FLAG_INPUTAUTH = 0;
00034a  2000              MOVS     r0,#0
00034c  491d              LDR      r1,|L5.964|
00034e  7008              STRB     r0,[r1,#0]
;;;586    					
;;;587    					ent_pwd = 0;
000350  4922              LDR      r1,|L5.988|
000352  7008              STRB     r0,[r1,#0]
;;;588    			
;;;589    					if( strcmp( ENTERPASSWORD , c_password) == 0 )
000354  4922              LDR      r1,|L5.992|
000356  a023              ADR      r0,|L5.996|
000358  f7fffffe          BL       strcmp
00035c  b910              CBNZ     r0,|L5.868|
;;;590    						
;;;591    							FLAG_PWD = 1;	
00035e  2001              MOVS     r0,#1
000360  4915              LDR      r1,|L5.952|
000362  7008              STRB     r0,[r1,#0]
                  |L5.868|
;;;592    						
;;;593    					memset( c_password, '\0', sizeof(c_password));
000364  210f              MOVS     r1,#0xf
000366  481e              LDR      r0,|L5.992|
000368  f7fffffe          BL       __aeabi_memclr
;;;594    					
;;;595    					memset( displayStr, '\0', sizeof(displayStr));
00036c  2114              MOVS     r1,#0x14
00036e  4814              LDR      r0,|L5.960|
000370  f7fffffe          BL       __aeabi_memclr
;;;596    					
;;;597    					strcpy( S_PWD[1].f_SName, "" );	
000374  481d              LDR      r0,|L5.1004|
000376  a118              ADR      r1,|L5.984|
000378  7809              LDRB     r1,[r1,#0]
00037a  f8801054          STRB     r1,[r0,#0x54]
;;;598    									 
;;;599    					strcpy( S_PWD[1].f_EName, "" );
00037e  a116              ADR      r1,|L5.984|
000380  7809              LDRB     r1,[r1,#0]
000382  f8801068          STRB     r1,[r0,#0x68]
000386  e011              B        |L5.940|
                  |L5.904|
;;;600    			}
;;;601    			else
;;;602    			{			
;;;603    					FLAG_INPUTAUTH = 1;
000388  2001              MOVS     r0,#1
00038a  490e              LDR      r1,|L5.964|
00038c  7008              STRB     r0,[r1,#0]
;;;604    					
;;;605    					ent_pwd = 1;
00038e  4913              LDR      r1,|L5.988|
000390  7008              STRB     r0,[r1,#0]
;;;606    						
;;;607    					memset( c_password, '\0', sizeof(c_password));
000392  210f              MOVS     r1,#0xf
000394  4812              LDR      r0,|L5.992|
000396  f7fffffe          BL       __aeabi_memclr
;;;608    						
;;;609    					strcpy( S_PWD[1].f_SName, "" );	
00039a  4814              LDR      r0,|L5.1004|
00039c  a10e              ADR      r1,|L5.984|
00039e  7809              LDRB     r1,[r1,#0]
0003a0  f8801054          STRB     r1,[r0,#0x54]
;;;610    										 
;;;611    					strcpy( S_PWD[1].f_EName, "" );			
0003a4  a10c              ADR      r1,|L5.984|
0003a6  7809              LDRB     r1,[r1,#0]
0003a8  f8801068          STRB     r1,[r0,#0x68]
                  |L5.940|
;;;612    			}	
;;;613    			WM_InvalidateWindow(sysinfoWin);
0003ac  4809              LDR      r0,|L5.980|
0003ae  6800              LDR      r0,[r0,#0]  ; sysinfoWin
0003b0  f7fffffe          BL       WM_InvalidateWindow
                  |L5.948|
;;;614    	}
;;;615    	
;;;616    }
0003b4  bdfe              POP      {r1-r7,pc}
;;;617    
                          ENDP

0003b6  0000              DCW      0x0000
                  |L5.952|
                          DCD      FLAG_PWD
                  |L5.956|
                          DCD      SGhListSYSinfo
                  |L5.960|
                          DCD      displayStr
                  |L5.964|
                          DCD      FLAG_INPUTAUTH
                  |L5.968|
                          DCD      m_List
                  |L5.972|
                          DCD      0x00f0ffff
                  |L5.976|
                          DCD      CLists
                  |L5.980|
                          DCD      sysinfoWin
                  |L5.984|
0003d8  00                DCB      0
0003d9  00                DCB      0
0003da  00                DCB      0
0003db  00                DCB      0
                  |L5.988|
                          DCD      ent_pwd
                  |L5.992|
                          DCD      c_password
                  |L5.996|
0003e4  31323334          DCB      "123456",0
0003e8  353600  
0003eb  00                DCB      0
                  |L5.1004|
                          DCD      S_PWD

                          AREA ||i.Sysinfo_value_correct||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  Sysinfo_value_correct PROC
;;;676    
;;;677    void Sysinfo_value_correct(){
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b02          VPUSH    {d8}
000008  b08f              SUB      sp,sp,#0x3c
;;;678    	
;;;679    	int dlen = 0, flen = 0, i = 0, temp_int = 0, dot_loc;
00000a  2000              MOVS     r0,#0
00000c  900e              STR      r0,[sp,#0x38]
00000e  900d              STR      r0,[sp,#0x34]
000010  2500              MOVS     r5,#0
000012  2400              MOVS     r4,#0
;;;680    	
;;;681    	int *key_loc; 
;;;682    	
;;;683    	char int_char[10], temp_char[10], float_char[10];
;;;684    	
;;;685    	float temp_float;
;;;686    	
;;;687    	int temp = 0, year = 0, month = 0;
000014  2600              MOVS     r6,#0
000016  2700              MOVS     r7,#0
000018  4682              MOV      r10,r0
;;;688    	
;;;689    	vu8 flag_null = 0, is_leep = 0, flag_dot = 0;
00001a  9003              STR      r0,[sp,#0xc]
00001c  9002              STR      r0,[sp,#8]
00001e  9001              STR      r0,[sp,#4]
;;;690    
;;;691    	if( !FLAG_INPUTAUTH ){
000020  48fe              LDR      r0,|L6.1052|
000022  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
000024  2800              CMP      r0,#0
000026  d10f              BNE      |L6.72|
;;;692    		
;;;693    		dlen = sizeof( SGhListSYSinfo ) / sizeof( SGhListSYSinfo[0] );
000028  200e              MOVS     r0,#0xe
00002a  900e              STR      r0,[sp,#0x38]
;;;694    		
;;;695    		key_loc = get_id_index( SGhListSYSinfo, dlen);;
00002c  48fc              LDR      r0,|L6.1056|
00002e  990e              LDR      r1,[sp,#0x38]
000030  f7fffffe          BL       get_id_index
000034  4680              MOV      r8,r0
;;;696    							
;;;697    		if( *key_loc == 0x194  )
000036  f8d80000          LDR      r0,[r8,#0]
00003a  f5b07fca          CMP      r0,#0x194
00003e  d104              BNE      |L6.74|
;;;698    								
;;;699    				SGhListSYSinfo[7].focusType = 1;
000040  2101              MOVS     r1,#1
000042  48f7              LDR      r0,|L6.1056|
000044  f8c011fc          STR      r1,[r0,#0x1fc]
                  |L6.72|
000048  e1e1              B        |L6.1038|
                  |L6.74|
;;;700    							
;;;701    		else
;;;702    		{
;;;703    		
;;;704    			temp = *key_loc;
00004a  f8d86000          LDR      r6,[r8,#0]
;;;705    
;;;706    			strcpy( displayStr , SGhListSYSinfo[temp].f_EName );
00004e  eb0600c6          ADD      r0,r6,r6,LSL #3
000052  4af3              LDR      r2,|L6.1056|
000054  eb0200c0          ADD      r0,r2,r0,LSL #3
000058  f1000120          ADD      r1,r0,#0x20
00005c  48f1              LDR      r0,|L6.1060|
00005e  f7fffffe          BL       strcpy
;;;707    
;;;708    			if( (displayStr[0] == '\0' || strlen(displayStr) == 0) && SGhListSYSinfo[temp].t_Type == T_THref ){
000062  48f0              LDR      r0,|L6.1060|
000064  7800              LDRB     r0,[r0,#0]  ; displayStr
000066  b118              CBZ      r0,|L6.112|
000068  48ee              LDR      r0,|L6.1060|
00006a  f7fffffe          BL       strlen
00006e  b940              CBNZ     r0,|L6.130|
                  |L6.112|
000070  eb0600c6          ADD      r0,r6,r6,LSL #3
000074  49ea              LDR      r1,|L6.1056|
000076  eb0100c0          ADD      r0,r1,r0,LSL #3
00007a  6880              LDR      r0,[r0,#8]
00007c  2801              CMP      r0,#1
00007e  d100              BNE      |L6.130|
;;;709    				
;;;710    				flag_null = 1;	
000080  9003              STR      r0,[sp,#0xc]
                  |L6.130|
;;;711    			}
;;;712    			
;;;713    			temp_int = atoi(displayStr);   //转为整数
000082  48e8              LDR      r0,|L6.1060|
000084  f7fffffe          BL       atoi
000088  4604              MOV      r4,r0
;;;714    			
;;;715    			temp_float = atof(displayStr);  //转为浮点数
00008a  48e6              LDR      r0,|L6.1060|
00008c  f7fffffe          BL       __hardfp_atof
000090  eeb08a40          VMOV.F32 s16,s0
000094  eef08a60          VMOV.F32 s17,s1
000098  ec510b18          VMOV     r0,r1,d8
00009c  f7fffffe          BL       __aeabi_d2f
0000a0  4681              MOV      r9,r0
;;;716    			
;;;717    			memset( temp_char, '\0', sizeof(temp_char));
0000a2  2000              MOVS     r0,#0
0000a4  9007              STR      r0,[sp,#0x1c]
0000a6  9008              STR      r0,[sp,#0x20]
0000a8  9009              STR      r0,[sp,#0x24]
;;;718    			
;;;719    			memset( int_char, '\0', sizeof(int_char));
0000aa  900a              STR      r0,[sp,#0x28]
0000ac  900b              STR      r0,[sp,#0x2c]
0000ae  900c              STR      r0,[sp,#0x30]
;;;720    			
;;;721    			memset( float_char, '\0', sizeof(float_char));
0000b0  9004              STR      r0,[sp,#0x10]
0000b2  9005              STR      r0,[sp,#0x14]
0000b4  9006              STR      r0,[sp,#0x18]
;;;722    			
;;;723    			sprintf(int_char, "%d", temp_int);
0000b6  4622              MOV      r2,r4
0000b8  a1db              ADR      r1,|L6.1064|
0000ba  a80a              ADD      r0,sp,#0x28
0000bc  f7fffffe          BL       __2sprintf
;;;724    			
;;;725    			sprintf(float_char, "%f", temp_float);
0000c0  4648              MOV      r0,r9
0000c2  f7fffffe          BL       __aeabi_f2d
0000c6  ec410b18          VMOV     d8,r0,r1
0000ca  ec532b18          VMOV     r2,r3,d8
0000ce  a1d7              ADR      r1,|L6.1068|
0000d0  a804              ADD      r0,sp,#0x10
0000d2  f7fffffe          BL       __2sprintf
;;;726    			
;;;727    			for( i = 0; i < strlen(displayStr); i++  ){  
0000d6  2500              MOVS     r5,#0
0000d8  e007              B        |L6.234|
                  |L6.218|
;;;728    			
;;;729    				if( displayStr[i] == 0x2e ){	
0000da  48d2              LDR      r0,|L6.1060|
0000dc  5d40              LDRB     r0,[r0,r5]
0000de  282e              CMP      r0,#0x2e
0000e0  d102              BNE      |L6.232|
;;;730    				
;;;731    					flag_dot = 1;	
0000e2  2001              MOVS     r0,#1
0000e4  9001              STR      r0,[sp,#4]
;;;732    					
;;;733    					break;
0000e6  e005              B        |L6.244|
                  |L6.232|
0000e8  1c6d              ADDS     r5,r5,#1              ;727
                  |L6.234|
0000ea  48ce              LDR      r0,|L6.1060|
0000ec  f7fffffe          BL       strlen
0000f0  42a8              CMP      r0,r5                 ;727
0000f2  d8f2              BHI      |L6.218|
                  |L6.244|
0000f4  bf00              NOP      
;;;734    				}			
;;;735    			}
;;;736    			
;;;737    			for( i = 0; i < strlen(float_char); i++  ){  
0000f6  2500              MOVS     r5,#0
0000f8  e006              B        |L6.264|
                  |L6.250|
;;;738    				if( float_char[i] == 0x2e ){
0000fa  a804              ADD      r0,sp,#0x10
0000fc  5d40              LDRB     r0,[r0,r5]
0000fe  282e              CMP      r0,#0x2e
000100  d101              BNE      |L6.262|
;;;739    					
;;;740    					dot_loc = i;
000102  46ab              MOV      r11,r5
;;;741    					
;;;742    					break;
000104  e005              B        |L6.274|
                  |L6.262|
000106  1c6d              ADDS     r5,r5,#1              ;737
                  |L6.264|
000108  a804              ADD      r0,sp,#0x10           ;737
00010a  f7fffffe          BL       strlen
00010e  42a8              CMP      r0,r5                 ;737
000110  d8f3              BHI      |L6.250|
                  |L6.274|
000112  bf00              NOP      
;;;743    					
;;;744    				}			
;;;745    			}
;;;746    			
;;;747    			switch( SGhListSYSinfo[temp].d_ID ){
000114  eb0600c6          ADD      r0,r6,r6,LSL #3
000118  49c1              LDR      r1,|L6.1056|
00011a  f8510030          LDR      r0,[r1,r0,LSL #3]
00011e  2807              CMP      r0,#7
000120  d006              BEQ      |L6.304|
000122  2809              CMP      r0,#9
000124  d044              BEQ      |L6.432|
000126  280b              CMP      r0,#0xb
000128  d077              BEQ      |L6.538|
00012a  280d              CMP      r0,#0xd
00012c  d11d              BNE      |L6.362|
00012e  e11a              B        |L6.870|
                  |L6.304|
;;;748    				
;;;749    				case 7:   
;;;750    				//====================================     年     ======================================
;;;751    					if( flag_null ){
000130  f89d000c          LDRB     r0,[sp,#0xc]
000134  b148              CBZ      r0,|L6.330|
;;;752    							
;;;753    						strcpy( displayStr, "2017"  );	
000136  a1be              ADR      r1,|L6.1072|
000138  48ba              LDR      r0,|L6.1060|
00013a  f7fffffe          BL       strcpy
;;;754    						
;;;755    						CLists.SYS_SYEARS = 2017;
00013e  f24070e1          MOV      r0,#0x7e1
000142  49bd              LDR      r1,|L6.1080|
000144  f8a1010e          STRH     r0,[r1,#0x10e]
000148  e031              B        |L6.430|
                  |L6.330|
;;;756    						
;;;757    					}else{	
;;;758    						
;;;759    						if( !flag_dot ){
00014a  f89d0004          LDRB     r0,[sp,#4]
00014e  bb70              CBNZ     r0,|L6.430|
;;;760    							
;;;761    							if( temp_int > 2200  ){
000150  f6400098          MOV      r0,#0x898
000154  4284              CMP      r4,r0
000156  dd09              BLE      |L6.364|
;;;762    									
;;;763    								strcpy( displayStr, "2200"  );	
000158  a1b8              ADR      r1,|L6.1084|
00015a  48b2              LDR      r0,|L6.1060|
00015c  f7fffffe          BL       strcpy
;;;764    								
;;;765    								CLists.SYS_SYEARS = 2200;	
000160  f6400098          MOV      r0,#0x898
000164  49b4              LDR      r1,|L6.1080|
000166  f8a1010e          STRH     r0,[r1,#0x10e]
                  |L6.362|
;;;766    								
;;;767    								break;		
00016a  e133              B        |L6.980|
                  |L6.364|
;;;768    							}
;;;769    								
;;;770    							if( temp_int <= 2017  ){  
00016c  f24070e1          MOV      r0,#0x7e1
000170  4284              CMP      r4,r0
000172  dc09              BGT      |L6.392|
;;;771    								
;;;772    								strcpy( displayStr, "2017"  );
000174  a1ae              ADR      r1,|L6.1072|
000176  48ab              LDR      r0,|L6.1060|
000178  f7fffffe          BL       strcpy
;;;773    								
;;;774    								CLists.SYS_SYEARS = 2017;
00017c  f24070e1          MOV      r0,#0x7e1
000180  49ad              LDR      r1,|L6.1080|
000182  f8a1010e          STRH     r0,[r1,#0x10e]
;;;775    								
;;;776    								break;		
000186  e125              B        |L6.980|
                  |L6.392|
;;;777    							}		
;;;778    								
;;;779    							if( strlen(int_char) < 4){		strcpy( int_char, "2017" );		}
000188  a80a              ADD      r0,sp,#0x28
00018a  f7fffffe          BL       strlen
00018e  2804              CMP      r0,#4
000190  d203              BCS      |L6.410|
000192  a1a7              ADR      r1,|L6.1072|
000194  a80a              ADD      r0,sp,#0x28
000196  f7fffffe          BL       strcpy
                  |L6.410|
;;;780    							
;;;781    							CLists.SYS_SYEARS = atoi( int_char);
00019a  a80a              ADD      r0,sp,#0x28
00019c  f7fffffe          BL       atoi
0001a0  49a5              LDR      r1,|L6.1080|
0001a2  f8a1010e          STRH     r0,[r1,#0x10e]
;;;782    							
;;;783    							strcpy( displayStr, int_char );	
0001a6  a90a              ADD      r1,sp,#0x28
0001a8  489e              LDR      r0,|L6.1060|
0001aa  f7fffffe          BL       strcpy
                  |L6.430|
;;;784    						}			
;;;785    					}			
;;;786    				
;;;787    				break;
0001ae  e111              B        |L6.980|
                  |L6.432|
;;;788    				
;;;789    				case 9:
;;;790    				//====================================     月     ======================================
;;;791    					if( flag_null ){
0001b0  f89d000c          LDRB     r0,[sp,#0xc]
0001b4  b140              CBZ      r0,|L6.456|
;;;792    							
;;;793    						strcpy( displayStr, "01"  );
0001b6  a1a3              ADR      r1,|L6.1092|
0001b8  489a              LDR      r0,|L6.1060|
0001ba  f7fffffe          BL       strcpy
;;;794    						
;;;795    						CLists.SYS_SMONTHS = 1;
0001be  2001              MOVS     r0,#1
0001c0  499d              LDR      r1,|L6.1080|
0001c2  f8810110          STRB     r0,[r1,#0x110]
0001c6  e030              B        |L6.554|
                  |L6.456|
;;;796    							
;;;797    					}else{	
;;;798    						
;;;799    						if( !flag_dot ){
0001c8  f89d0004          LDRB     r0,[sp,#4]
0001cc  bb68              CBNZ     r0,|L6.554|
;;;800    							
;;;801    							if( temp_int > 12  ){
0001ce  2c0c              CMP      r4,#0xc
0001d0  dd08              BLE      |L6.484|
;;;802    									
;;;803    								strcpy( displayStr, "12"  );    CLists.SYS_SMONTHS = 12;	
0001d2  a19d              ADR      r1,|L6.1096|
0001d4  4893              LDR      r0,|L6.1060|
0001d6  f7fffffe          BL       strcpy
0001da  200c              MOVS     r0,#0xc
0001dc  4996              LDR      r1,|L6.1080|
0001de  f8810110          STRB     r0,[r1,#0x110]
;;;804    								
;;;805    								break;		
0001e2  e0f7              B        |L6.980|
                  |L6.484|
;;;806    							}					
;;;807    							if( temp_int <= 0  ){  
0001e4  2c00              CMP      r4,#0
0001e6  dc08              BGT      |L6.506|
;;;808    								
;;;809    								strcpy( displayStr, "01"  );    CLists.SYS_SMONTHS = 1;	
0001e8  a196              ADR      r1,|L6.1092|
0001ea  488e              LDR      r0,|L6.1060|
0001ec  f7fffffe          BL       strcpy
0001f0  2001              MOVS     r0,#1
0001f2  4991              LDR      r1,|L6.1080|
0001f4  f8810110          STRB     r0,[r1,#0x110]
;;;810    								
;;;811    								break;		
0001f8  e0ec              B        |L6.980|
                  |L6.506|
;;;812    							}			
;;;813    							if( strlen( int_char) < 2 ){
0001fa  a80a              ADD      r0,sp,#0x28
0001fc  f7fffffe          BL       strlen
000200  2802              CMP      r0,#2
000202  d20b              BCS      |L6.540|
;;;814    
;;;815    								strcpy( displayStr, "0"	);    strcat( displayStr, int_char );	
000204  4887              LDR      r0,|L6.1060|
000206  a191              ADR      r1,|L6.1100|
000208  8809              LDRH     r1,[r1,#0]
00020a  8001              STRH     r1,[r0,#0]
00020c  a90a              ADD      r1,sp,#0x28
00020e  f7fffffe          BL       strcat
;;;816    								
;;;817    								CLists.SYS_SMONTHS = temp_int;
000212  4989              LDR      r1,|L6.1080|
000214  f8814110          STRB     r4,[r1,#0x110]
;;;818    								
;;;819    								break;
000218  e0dc              B        |L6.980|
                  |L6.538|
00021a  e007              B        |L6.556|
                  |L6.540|
;;;820    							}			
;;;821    							CLists.SYS_SMONTHS = temp_int;
00021c  4986              LDR      r1,|L6.1080|
00021e  f8814110          STRB     r4,[r1,#0x110]
;;;822    							
;;;823    							strcpy( displayStr, int_char );	
000222  a90a              ADD      r1,sp,#0x28
000224  487f              LDR      r0,|L6.1060|
000226  f7fffffe          BL       strcpy
                  |L6.554|
;;;824    						}			
;;;825    					}
;;;826    					
;;;827    				break;	
00022a  e0d3              B        |L6.980|
                  |L6.556|
;;;828    				
;;;829    				case 11:   
;;;830    				//====================================     日     ======================================
;;;831    					if( flag_null ){
00022c  f89d000c          LDRB     r0,[sp,#0xc]
000230  b140              CBZ      r0,|L6.580|
;;;832    							
;;;833    						strcpy( displayStr, "01"  );	
000232  a184              ADR      r1,|L6.1092|
000234  487b              LDR      r0,|L6.1060|
000236  f7fffffe          BL       strcpy
;;;834    						
;;;835    						CLists.SYS_SDAYS = 1;
00023a  2001              MOVS     r0,#1
00023c  497e              LDR      r1,|L6.1080|
00023e  f8810111          STRB     r0,[r1,#0x111]
                  |L6.578|
000242  e08f              B        |L6.868|
                  |L6.580|
;;;836    							
;;;837    					}else{	
;;;838    						
;;;839    						if( !flag_dot ){
000244  f89d0004          LDRB     r0,[sp,#4]
000248  2800              CMP      r0,#0
00024a  d1fa              BNE      |L6.578|
;;;840    							
;;;841    							year = atoi( SGhListSYSinfo[7].f_EName);
00024c  4880              LDR      r0,|L6.1104|
00024e  f7fffffe          BL       atoi
000252  4607              MOV      r7,r0
;;;842    							
;;;843    							month = atoi( SGhListSYSinfo[9].f_EName);
000254  487e              LDR      r0,|L6.1104|
000256  3090              ADDS     r0,r0,#0x90
000258  f7fffffe          BL       atoi
00025c  4682              MOV      r10,r0
;;;844    							
;;;845    							//判断年份
;;;846    							if( year%400 == 0 || ( year%100 != 0 && year%4 == 0 ) ){	is_leep	= 1;	}
00025e  f44f71c8          MOV      r1,#0x190
000262  fb97f2f1          SDIV     r2,r7,r1
000266  fb017112          MLS      r1,r1,r2,r7
00026a  b161              CBZ      r1,|L6.646|
00026c  2164              MOVS     r1,#0x64
00026e  fb97f2f1          SDIV     r2,r7,r1
000272  fb017112          MLS      r1,r1,r2,r7
000276  b141              CBZ      r1,|L6.650|
000278  17f9              ASRS     r1,r7,#31
00027a  eb077191          ADD      r1,r7,r1,LSR #30
00027e  1089              ASRS     r1,r1,#2
000280  eba70181          SUB      r1,r7,r1,LSL #2
000284  b909              CBNZ     r1,|L6.650|
                  |L6.646|
000286  2001              MOVS     r0,#1
000288  9002              STR      r0,[sp,#8]
                  |L6.650|
;;;847    							
;;;848    							if( temp_int <= 0 ){	strcpy( displayStr, "01"  );    CLists.SYS_SDAYS = 1;    break;		}
00028a  2c00              CMP      r4,#0
00028c  dc08              BGT      |L6.672|
00028e  a16d              ADR      r1,|L6.1092|
000290  4864              LDR      r0,|L6.1060|
000292  f7fffffe          BL       strcpy
000296  2001              MOVS     r0,#1
000298  4967              LDR      r1,|L6.1080|
00029a  f8810111          STRB     r0,[r1,#0x111]
00029e  e099              B        |L6.980|
                  |L6.672|
;;;849    							
;;;850    							//判断月份
;;;851    							switch( month ){
0002a0  f1ba0f0d          CMP      r10,#0xd
0002a4  d243              BCS      |L6.814|
0002a6  e8dff00a          TBB      [pc,r10]
0002aa  4207              DCB      0x42,0x07
0002ac  19083309          DCB      0x19,0x08,0x33,0x09
0002b0  340a0b35          DCB      0x34,0x0a,0x0b,0x35
0002b4  0c360d00          DCB      0x0c,0x36,0x0d,0x00
;;;852    								
;;;853    								case 1:
;;;854    								case 3:
0002b8  bf00              NOP      
;;;855    								case 5:
0002ba  bf00              NOP      
;;;856    								case 7:
0002bc  bf00              NOP      
;;;857    								case 8:
0002be  bf00              NOP      
;;;858    								case 10:
0002c0  bf00              NOP      
;;;859    								case 12:
0002c2  bf00              NOP      
;;;860    								
;;;861    									if( temp_int > 31 ){
0002c4  2c1f              CMP      r4,#0x1f
0002c6  dd08              BLE      |L6.730|
;;;862    										
;;;863    										strcpy( int_char, "31"  );    CLists.SYS_SDAYS = 31;	
0002c8  a162              ADR      r1,|L6.1108|
0002ca  a80a              ADD      r0,sp,#0x28
0002cc  f7fffffe          BL       strcpy
0002d0  201f              MOVS     r0,#0x1f
0002d2  4959              LDR      r1,|L6.1080|
0002d4  f8810111          STRB     r0,[r1,#0x111]
;;;864    										
;;;865    										break;		
0002d8  e029              B        |L6.814|
                  |L6.730|
;;;866    									}
;;;867    
;;;868    								break;
0002da  e028              B        |L6.814|
;;;869    								
;;;870    								case 2:
;;;871    									
;;;872    									if( is_leep ){
0002dc  f89d0008          LDRB     r0,[sp,#8]
0002e0  b150              CBZ      r0,|L6.760|
;;;873    										
;;;874    										if( temp_int > 29 ){    strcpy( int_char, "29"  );    CLists.SYS_SDAYS = 29;    break;	}
0002e2  2c1d              CMP      r4,#0x1d
0002e4  dd13              BLE      |L6.782|
0002e6  a15c              ADR      r1,|L6.1112|
0002e8  a80a              ADD      r0,sp,#0x28
0002ea  f7fffffe          BL       strcpy
0002ee  201d              MOVS     r0,#0x1d
0002f0  4951              LDR      r1,|L6.1080|
0002f2  f8810111          STRB     r0,[r1,#0x111]
0002f6  e01a              B        |L6.814|
                  |L6.760|
;;;875    										
;;;876    									}else{
;;;877    										
;;;878    										if( temp_int > 28 ){    strcpy( int_char, "28"  );	  CLists.SYS_SDAYS = 28;    break;	}	
0002f8  2c1c              CMP      r4,#0x1c
0002fa  dd08              BLE      |L6.782|
0002fc  a157              ADR      r1,|L6.1116|
0002fe  a80a              ADD      r0,sp,#0x28
000300  f7fffffe          BL       strcpy
000304  201c              MOVS     r0,#0x1c
000306  494c              LDR      r1,|L6.1080|
000308  f8810111          STRB     r0,[r1,#0x111]
00030c  e00f              B        |L6.814|
                  |L6.782|
;;;879    									}
;;;880    						
;;;881    								break;
00030e  e00e              B        |L6.814|
;;;882    								
;;;883    								case 4:
;;;884    								case 6:
000310  bf00              NOP      
;;;885    								case 9:
000312  bf00              NOP      
;;;886    								case 11:
000314  bf00              NOP      
;;;887    								
;;;888    									if( temp_int > 30 ){
000316  2c1e              CMP      r4,#0x1e
000318  dd08              BLE      |L6.812|
;;;889    										
;;;890    										strcpy( int_char, "30"  );    CLists.SYS_SDAYS = 30;			
00031a  a151              ADR      r1,|L6.1120|
00031c  a80a              ADD      r0,sp,#0x28
00031e  f7fffffe          BL       strcpy
000322  201e              MOVS     r0,#0x1e
000324  4944              LDR      r1,|L6.1080|
000326  f8810111          STRB     r0,[r1,#0x111]
;;;891    									
;;;892    										break;		
00032a  e000              B        |L6.814|
                  |L6.812|
;;;893    									}
;;;894    									
;;;895    								break;
00032c  bf00              NOP      
                  |L6.814|
00032e  bf00              NOP                            ;865
;;;896    							}
;;;897    							
;;;898    							if( strlen( int_char) < 2 ){
000330  a80a              ADD      r0,sp,#0x28
000332  f7fffffe          BL       strlen
000336  2802              CMP      r0,#2
000338  d20d              BCS      |L6.854|
;;;899    								
;;;900    								strcpy( displayStr, "0"	);    strcat( displayStr, int_char );	
00033a  483a              LDR      r0,|L6.1060|
00033c  a143              ADR      r1,|L6.1100|
00033e  8809              LDRH     r1,[r1,#0]
000340  8001              STRH     r1,[r0,#0]
000342  a90a              ADD      r1,sp,#0x28
000344  f7fffffe          BL       strcat
;;;901    								
;;;902    								CLists.SYS_SDAYS = atoi( int_char);
000348  a80a              ADD      r0,sp,#0x28
00034a  f7fffffe          BL       atoi
00034e  493a              LDR      r1,|L6.1080|
000350  f8810111          STRB     r0,[r1,#0x111]
;;;903    
;;;904    								break;
000354  e03e              B        |L6.980|
                  |L6.854|
;;;905    								
;;;906    							}	
;;;907    							strcpy( displayStr, int_char );	
000356  a90a              ADD      r1,sp,#0x28
000358  4832              LDR      r0,|L6.1060|
00035a  f7fffffe          BL       strcpy
;;;908    							
;;;909    							CLists.SYS_SDAYS = temp_int;
00035e  4936              LDR      r1,|L6.1080|
000360  f8814111          STRB     r4,[r1,#0x111]
                  |L6.868|
;;;910    						}			
;;;911    					}
;;;912    				
;;;913    				break;
000364  e036              B        |L6.980|
                  |L6.870|
;;;914    				
;;;915    				case 13:   
;;;916    				//====================================  仪器编号  ======================================					
;;;917    					if( flag_null  )
000366  f89d000c          LDRB     r0,[sp,#0xc]
00036a  b198              CBZ      r0,|L6.916|
;;;918    					{
;;;919    						
;;;920    						strcpy( displayStr, SGhListSYSinfo[7].f_EName );
00036c  4938              LDR      r1,|L6.1104|
00036e  482d              LDR      r0,|L6.1060|
000370  f7fffffe          BL       strcpy
;;;921    								
;;;922    						strcat( displayStr, SGhListSYSinfo[9].f_EName );
000374  4936              LDR      r1,|L6.1104|
000376  3190              ADDS     r1,r1,#0x90
000378  482a              LDR      r0,|L6.1060|
00037a  f7fffffe          BL       strcat
;;;923    								
;;;924    						strcat( displayStr, SGhListSYSinfo[11].f_EName );							
00037e  4939              LDR      r1,|L6.1124|
000380  4828              LDR      r0,|L6.1060|
000382  f7fffffe          BL       strcat
;;;925    							
;;;926    						CLists.SYS_SerialNO = atoi( displayStr);		
000386  4827              LDR      r0,|L6.1060|
000388  f7fffffe          BL       atoi
00038c  492a              LDR      r1,|L6.1080|
00038e  f8c10114          STR      r0,[r1,#0x114]  ; CLists
000392  e01e              B        |L6.978|
                  |L6.916|
;;;927    						
;;;928    					}
;;;929    					else
;;;930    					{	
;;;931    						
;;;932    						if( !flag_dot ){
000394  f89d0004          LDRB     r0,[sp,#4]
000398  b9d8              CBNZ     r0,|L6.978|
;;;933    							
;;;934    							if( strlen(displayStr) < 8) {	
00039a  4822              LDR      r0,|L6.1060|
00039c  f7fffffe          BL       strlen
0003a0  2808              CMP      r0,#8
0003a2  d213              BCS      |L6.972|
;;;935    							
;;;936    								strcpy( displayStr, SGhListSYSinfo[7].f_EName );
0003a4  492a              LDR      r1,|L6.1104|
0003a6  481f              LDR      r0,|L6.1060|
0003a8  f7fffffe          BL       strcpy
;;;937    								
;;;938    								strcat( displayStr, SGhListSYSinfo[9].f_EName );
0003ac  4928              LDR      r1,|L6.1104|
0003ae  3190              ADDS     r1,r1,#0x90
0003b0  481c              LDR      r0,|L6.1060|
0003b2  f7fffffe          BL       strcat
;;;939    								
;;;940    								strcat( displayStr, SGhListSYSinfo[11].f_EName );
0003b6  492b              LDR      r1,|L6.1124|
0003b8  481a              LDR      r0,|L6.1060|
0003ba  f7fffffe          BL       strcat
;;;941    
;;;942    								CLists.SYS_SerialNO = atoi( displayStr);		
0003be  4819              LDR      r0,|L6.1060|
0003c0  f7fffffe          BL       atoi
0003c4  491c              LDR      r1,|L6.1080|
0003c6  f8c10114          STR      r0,[r1,#0x114]  ; CLists
;;;943    								
;;;944    								break;
0003ca  e003              B        |L6.980|
                  |L6.972|
;;;945    							}											
;;;946    							CLists.SYS_SerialNO = temp_int;
0003cc  481a              LDR      r0,|L6.1080|
0003ce  f8c04114          STR      r4,[r0,#0x114]  ; CLists
                  |L6.978|
;;;947    						}			
;;;948    					}	
;;;949    				
;;;950    				break;
0003d2  bf00              NOP      
                  |L6.980|
0003d4  bf00              NOP                            ;767
;;;951    			}
;;;952    			Write_Flash_Bytes();	
0003d6  f7fffffe          BL       Write_Flash_Bytes
;;;953    			
;;;954    			SGhListSYSinfo[temp].d_BKColor = 0;
0003da  2000              MOVS     r0,#0
0003dc  eb0601c6          ADD      r1,r6,r6,LSL #3
0003e0  4a0f              LDR      r2,|L6.1056|
0003e2  eb0201c1          ADD      r1,r2,r1,LSL #3
0003e6  6388              STR      r0,[r1,#0x38]
;;;955    			
;;;956    			strcpy( SGhListSYSinfo[temp].f_SName, displayStr );
0003e8  eb0601c6          ADD      r1,r6,r6,LSL #3
0003ec  eb0201c1          ADD      r1,r2,r1,LSL #3
0003f0  f101000c          ADD      r0,r1,#0xc
0003f4  490b              LDR      r1,|L6.1060|
0003f6  f7fffffe          BL       strcpy
;;;957    			
;;;958    			strcpy( SGhListSYSinfo[temp].f_EName, displayStr );
0003fa  eb0601c6          ADD      r1,r6,r6,LSL #3
0003fe  4a08              LDR      r2,|L6.1056|
000400  eb0201c1          ADD      r1,r2,r1,LSL #3
000404  f1010020          ADD      r0,r1,#0x20
000408  4906              LDR      r1,|L6.1060|
00040a  f7fffffe          BL       strcpy
                  |L6.1038|
;;;959    		}
;;;960    	}
;;;961    	memset( displayStr, '\0', sizeof(displayStr));
00040e  2114              MOVS     r1,#0x14
000410  4804              LDR      r0,|L6.1060|
000412  f7fffffe          BL       __aeabi_memclr
;;;962    	
;;;963    	WM_InvalidateWindow(sysinfoWin);
000416  4814              LDR      r0,|L6.1128|
000418  6800              LDR      r0,[r0,#0]  ; sysinfoWin
00041a  e027              B        |L6.1132|
                  |L6.1052|
                          DCD      FLAG_INPUTAUTH
                  |L6.1056|
                          DCD      SGhListSYSinfo
                  |L6.1060|
                          DCD      displayStr
                  |L6.1064|
000428  256400            DCB      "%d",0
00042b  00                DCB      0
                  |L6.1068|
00042c  256600            DCB      "%f",0
00042f  00                DCB      0
                  |L6.1072|
000430  32303137          DCB      "2017",0
000434  00      
000435  00                DCB      0
000436  00                DCB      0
000437  00                DCB      0
                  |L6.1080|
                          DCD      CLists
                  |L6.1084|
00043c  32323030          DCB      "2200",0
000440  00      
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L6.1092|
000444  303100            DCB      "01",0
000447  00                DCB      0
                  |L6.1096|
000448  313200            DCB      "12",0
00044b  00                DCB      0
                  |L6.1100|
00044c  3000              DCB      "0",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L6.1104|
                          DCD      SGhListSYSinfo+0x218
                  |L6.1108|
000454  333100            DCB      "31",0
000457  00                DCB      0
                  |L6.1112|
000458  323900            DCB      "29",0
00045b  00                DCB      0
                  |L6.1116|
00045c  323800            DCB      "28",0
00045f  00                DCB      0
                  |L6.1120|
000460  333000            DCB      "30",0
000463  00                DCB      0
                  |L6.1124|
                          DCD      SGhListSYSinfo+0x338
                  |L6.1128|
                          DCD      sysinfoWin
                  |L6.1132|
00046c  f7fffffe          BL       WM_InvalidateWindow
;;;964    
;;;965    }
000470  b00f              ADD      sp,sp,#0x3c
000472  ecbd8b02          VPOP     {d8}
000476  e8bd8ff0          POP      {r4-r11,pc}
;;;966    
                          ENDP


                          AREA ||i._cbDialogsysinfo||, CODE, READONLY, ALIGN=2

                  _cbDialogsysinfo PROC
;;;108    	
;;;109    static void _cbDialogsysinfo(WM_MESSAGE * pMsg) {
000000  e92d47f0          PUSH     {r4-r10,lr}
000004  b0a2              SUB      sp,sp,#0x88
000006  4605              MOV      r5,r0
;;;110    	
;;;111    	WM_HWIN hItem;
;;;112    	int NCode, x, y;
;;;113    	int Id,MAX_LEN = 0;
000008  f04f0800          MOV      r8,#0
;;;114    	vu8 i;
;;;115    	char *winName,*displayName;
;;;116    	
;;;117    	static struct SListData slistSYSinfo[] = {	
;;;118    	
;;;119    		{T_Button ,  "内阻测试", "I.R. TEST",  0x00B22222 , 0,  ID_BUTTON_36 },
;;;120    		{T_Button ,  "程控电源", "POWER",      0x00B22222 , 0, 	ID_BUTTON_37 },
;;;121    		{T_Button ,  "程控负载", "LOAD", 	   0x00B22222 , 0, 	ID_BUTTON_38 },
;;;122    		{T_Button ,  "充放电",   "C&DC", 	   0x00B22222 , 0,  ID_BUTTON_39 },
;;;123    		{T_Button ,  "系统设置", "SYSTEM",     0x00B22222 , 0, 	ID_BUTTON_40 },
;;;124    		
;;;125    	};
;;;126    	
;;;127    	switch (pMsg->MsgId) {
00000c  6828              LDR      r0,[r5,#0]
00000e  280e              CMP      r0,#0xe
000010  d07e              BEQ      |L7.272|
000012  280f              CMP      r0,#0xf
000014  d006              BEQ      |L7.36|
000016  281d              CMP      r0,#0x1d
000018  d07b              BEQ      |L7.274|
00001a  f2a01013          SUB      r0,r0,#0x113
00001e  2800              CMP      r0,#0
000020  d178              BNE      |L7.276|
000022  e1c1              B        |L7.936|
                  |L7.36|
;;;128    	  	
;;;129    		case WM_PAINT: {
;;;130    			
;;;131    			GUI_SetColor(0x00FFD700);
000024  48f5              LDR      r0,|L7.1020|
000026  f7fffffe          BL       GUI_SetColor
;;;132    			
;;;133    			GUI_Clear();
00002a  f7fffffe          BL       GUI_Clear
;;;134    			
;;;135    			GUI_FillRoundedRect(0,0,480,33,5);
00002e  2005              MOVS     r0,#5
000030  2321              MOVS     r3,#0x21
000032  f44f72f0          MOV      r2,#0x1e0
000036  2100              MOVS     r1,#0
000038  9000              STR      r0,[sp,#0]
00003a  4608              MOV      r0,r1
00003c  f7fffffe          BL       GUI_FillRoundedRect
;;;136    			
;;;137    			GUI_SetColor(GUI_BLACK);
000040  2000              MOVS     r0,#0
000042  f7fffffe          BL       GUI_SetColor
;;;138    			
;;;139    			GUI_SetFont(&GUI_FontSONG16);
000046  48ee              LDR      r0,|L7.1024|
000048  f7fffffe          BL       GUI_SetFont
;;;140    			
;;;141    			GUI_UC_SetEncodeUTF8();
00004c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
;;;142    			
;;;143    			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
000050  2002              MOVS     r0,#2
000052  f7fffffe          BL       GUI_SetTextMode
;;;144    			
;;;145    			winName = ( FLAG_LANG == 1) ? "System Information" : "系统信息";
000056  48eb              LDR      r0,|L7.1028|
000058  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
00005a  2801              CMP      r0,#1
00005c  d101              BNE      |L7.98|
00005e  a0ea              ADR      r0,|L7.1032|
000060  e000              B        |L7.100|
                  |L7.98|
000062  a0ee              ADR      r0,|L7.1052|
                  |L7.100|
000064  4681              MOV      r9,r0
;;;146    		
;;;147    			GUI_DispStringAt( winName, (480 - GUI_GetStringDistX( winName))/2, 9);
000066  4648              MOV      r0,r9
000068  f7fffffe          BL       GUI_GetStringDistX
00006c  f5c074f0          RSB      r4,r0,#0x1e0
000070  eb0470d4          ADD      r0,r4,r4,LSR #31
000074  1041              ASRS     r1,r0,#1
000076  2209              MOVS     r2,#9
000078  4648              MOV      r0,r9
00007a  f7fffffe          BL       GUI_DispStringAt
;;;148    			
;;;149    			if( FLAG_LANG == 1 ){  //英文过长需重新定位
00007e  48e1              LDR      r0,|L7.1028|
000080  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
000082  2801              CMP      r0,#1
000084  d158              BNE      |L7.312|
;;;150    			
;;;151    				SGhListSYSinfo[1].d_x = 180;    SGhListSYSinfo[1].d_y = 45;
000086  21b4              MOVS     r1,#0xb4
000088  48e8              LDR      r0,|L7.1068|
00008a  f8a01088          STRH     r1,[r0,#0x88]
00008e  212d              MOVS     r1,#0x2d
000090  f8a0108a          STRH     r1,[r0,#0x8a]
;;;152    				
;;;153    				SGhListSYSinfo[3].d_x = 180;    SGhListSYSinfo[3].d_y = 75;
000094  21b4              MOVS     r1,#0xb4
000096  f8a01118          STRH     r1,[r0,#0x118]
00009a  214b              MOVS     r1,#0x4b
00009c  f8a0111a          STRH     r1,[r0,#0x11a]
;;;154    				
;;;155    				SGhListSYSinfo[5].d_x = 180;    SGhListSYSinfo[5].d_y = 75+30*1;
0000a0  21b4              MOVS     r1,#0xb4
0000a2  f8a011a8          STRH     r1,[r0,#0x1a8]
0000a6  2169              MOVS     r1,#0x69
0000a8  f8a011aa          STRH     r1,[r0,#0x1aa]
;;;156    				
;;;157    				SGhListSYSinfo[7].d_x = 180;    SGhListSYSinfo[7].d_y = 75+30*2;
0000ac  21b4              MOVS     r1,#0xb4
0000ae  f8a01238          STRH     r1,[r0,#0x238]
0000b2  2187              MOVS     r1,#0x87
0000b4  f8a0123a          STRH     r1,[r0,#0x23a]
;;;158    				SGhListSYSinfo[7].d_x1 = 180+35;    SGhListSYSinfo[8].d_y1 = 75+30*2+17;
0000b8  21d7              MOVS     r1,#0xd7
0000ba  f8a0123c          STRH     r1,[r0,#0x23c]
0000be  2198              MOVS     r1,#0x98
0000c0  f8a01286          STRH     r1,[r0,#0x286]
;;;159    				
;;;160    				SGhListSYSinfo[8].d_x = 180+40;    SGhListSYSinfo[8].d_y = 75+30*2;
0000c4  21dc              MOVS     r1,#0xdc
0000c6  f8a01280          STRH     r1,[r0,#0x280]
0000ca  2187              MOVS     r1,#0x87
0000cc  f8a01282          STRH     r1,[r0,#0x282]
;;;161    				
;;;162    				SGhListSYSinfo[9].d_x = 180+58;    SGhListSYSinfo[9].d_y = 75+30*2;
0000d0  21ee              MOVS     r1,#0xee
0000d2  f8a012c8          STRH     r1,[r0,#0x2c8]
0000d6  2187              MOVS     r1,#0x87
0000d8  f8a012ca          STRH     r1,[r0,#0x2ca]
;;;163    				SGhListSYSinfo[9].d_x1 = 180+78;    SGhListSYSinfo[9].d_y1 = 75+30*2+17;
0000dc  f44f7181          MOV      r1,#0x102
0000e0  f8a012cc          STRH     r1,[r0,#0x2cc]
0000e4  2198              MOVS     r1,#0x98
0000e6  f8a012ce          STRH     r1,[r0,#0x2ce]
;;;164    				
;;;165    				SGhListSYSinfo[10].d_x = 180+83;    SGhListSYSinfo[10].d_y = 75+30*2;
0000ea  f2401107          MOV      r1,#0x107
0000ee  f8a01310          STRH     r1,[r0,#0x310]
0000f2  2187              MOVS     r1,#0x87
0000f4  f8a01312          STRH     r1,[r0,#0x312]
;;;166    				
;;;167    				SGhListSYSinfo[11].d_x = 180+101;    SGhListSYSinfo[11].d_y = 75+30*2;
0000f8  f2401119          MOV      r1,#0x119
0000fc  f8a01358          STRH     r1,[r0,#0x358]
000100  2187              MOVS     r1,#0x87
000102  f8a0135a          STRH     r1,[r0,#0x35a]
;;;168    				SGhListSYSinfo[11].d_x1 = 180+121;    SGhListSYSinfo[11].d_y1 = 75+30*2+17;
000106  f240112d          MOV      r1,#0x12d
00010a  f8a0135c          STRH     r1,[r0,#0x35c]
00010e  e002              B        |L7.278|
                  |L7.272|
000110  e155              B        |L7.958|
                  |L7.274|
000112  e155              B        |L7.960|
                  |L7.276|
000114  e169              B        |L7.1002|
                  |L7.278|
000116  2198              MOVS     r1,#0x98
000118  f8a0135e          STRH     r1,[r0,#0x35e]
;;;169    				
;;;170    				SGhListSYSinfo[13].d_x = 180;    SGhListSYSinfo[13].d_y = 75+30*3;
00011c  21b4              MOVS     r1,#0xb4
00011e  f8a013e8          STRH     r1,[r0,#0x3e8]
000122  21a5              MOVS     r1,#0xa5
000124  f8a013ea          STRH     r1,[r0,#0x3ea]
;;;171    				SGhListSYSinfo[13].d_x1 = 270;    SGhListSYSinfo[13].d_y1 = 75+30*3+17;
000128  f44f7187          MOV      r1,#0x10e
00012c  f8a013ec          STRH     r1,[r0,#0x3ec]
000130  21b6              MOVS     r1,#0xb6
000132  f8a013ee          STRH     r1,[r0,#0x3ee]
000136  e04e              B        |L7.470|
                  |L7.312|
;;;172    				
;;;173    			}else{
;;;174    				
;;;175    				SGhListSYSinfo[1].d_x = 115;    SGhListSYSinfo[1].d_y = 45;
000138  2173              MOVS     r1,#0x73
00013a  48bc              LDR      r0,|L7.1068|
00013c  f8a01088          STRH     r1,[r0,#0x88]
000140  212d              MOVS     r1,#0x2d
000142  f8a0108a          STRH     r1,[r0,#0x8a]
;;;176    				
;;;177    				SGhListSYSinfo[3].d_x = 115;    SGhListSYSinfo[3].d_y = 75;
000146  2173              MOVS     r1,#0x73
000148  f8a01118          STRH     r1,[r0,#0x118]
00014c  214b              MOVS     r1,#0x4b
00014e  f8a0111a          STRH     r1,[r0,#0x11a]
;;;178    				
;;;179    				SGhListSYSinfo[5].d_x = 115;    SGhListSYSinfo[5].d_y = 75+30*1;
000152  2173              MOVS     r1,#0x73
000154  f8a011a8          STRH     r1,[r0,#0x1a8]
000158  2169              MOVS     r1,#0x69
00015a  f8a011aa          STRH     r1,[r0,#0x1aa]
;;;180    				
;;;181    				SGhListSYSinfo[7].d_x = 115;    SGhListSYSinfo[7].d_y = 75+30*2;
00015e  2173              MOVS     r1,#0x73
000160  f8a01238          STRH     r1,[r0,#0x238]
000164  2187              MOVS     r1,#0x87
000166  f8a0123a          STRH     r1,[r0,#0x23a]
;;;182    				SGhListSYSinfo[7].d_x1 = 115+35;    SGhListSYSinfo[8].d_y1 = 75+30*2+17;
00016a  2196              MOVS     r1,#0x96
00016c  f8a0123c          STRH     r1,[r0,#0x23c]
000170  2198              MOVS     r1,#0x98
000172  f8a01286          STRH     r1,[r0,#0x286]
;;;183    				
;;;184    				SGhListSYSinfo[8].d_x = 115+40;    SGhListSYSinfo[8].d_y = 75+30*2;
000176  219b              MOVS     r1,#0x9b
000178  f8a01280          STRH     r1,[r0,#0x280]
00017c  2187              MOVS     r1,#0x87
00017e  f8a01282          STRH     r1,[r0,#0x282]
;;;185    				
;;;186    				SGhListSYSinfo[9].d_x = 115+58;    SGhListSYSinfo[9].d_y = 75+30*2;
000182  21ad              MOVS     r1,#0xad
000184  f8a012c8          STRH     r1,[r0,#0x2c8]
000188  2187              MOVS     r1,#0x87
00018a  f8a012ca          STRH     r1,[r0,#0x2ca]
;;;187    				SGhListSYSinfo[9].d_x1 = 115+78;    SGhListSYSinfo[9].d_y1 = 75+30*2+17;
00018e  21c1              MOVS     r1,#0xc1
000190  f8a012cc          STRH     r1,[r0,#0x2cc]
000194  2198              MOVS     r1,#0x98
000196  f8a012ce          STRH     r1,[r0,#0x2ce]
;;;188    				
;;;189    				SGhListSYSinfo[10].d_x = 115+83;    SGhListSYSinfo[10].d_y = 75+30*2;
00019a  21c6              MOVS     r1,#0xc6
00019c  f8a01310          STRH     r1,[r0,#0x310]
0001a0  2187              MOVS     r1,#0x87
0001a2  f8a01312          STRH     r1,[r0,#0x312]
;;;190    				
;;;191    				SGhListSYSinfo[11].d_x = 115+101;    SGhListSYSinfo[11].d_y = 75+30*2;
0001a6  21d8              MOVS     r1,#0xd8
0001a8  f8a01358          STRH     r1,[r0,#0x358]
0001ac  2187              MOVS     r1,#0x87
0001ae  f8a0135a          STRH     r1,[r0,#0x35a]
;;;192    				SGhListSYSinfo[11].d_x1 = 115+121;    SGhListSYSinfo[11].d_y1 = 75+30*2+17;
0001b2  21ec              MOVS     r1,#0xec
0001b4  f8a0135c          STRH     r1,[r0,#0x35c]
0001b8  2198              MOVS     r1,#0x98
0001ba  f8a0135e          STRH     r1,[r0,#0x35e]
;;;193    				
;;;194    				SGhListSYSinfo[13].d_x = 115;    SGhListSYSinfo[13].d_y = 75+30*3;
0001be  2173              MOVS     r1,#0x73
0001c0  f8a013e8          STRH     r1,[r0,#0x3e8]
0001c4  21a5              MOVS     r1,#0xa5
0001c6  f8a013ea          STRH     r1,[r0,#0x3ea]
;;;195    				SGhListSYSinfo[13].d_x1 = 205;    SGhListSYSinfo[13].d_y1 = 75+30*3+17;
0001ca  21cd              MOVS     r1,#0xcd
0001cc  f8a013ec          STRH     r1,[r0,#0x3ec]
0001d0  21b6              MOVS     r1,#0xb6
0001d2  f8a013ee          STRH     r1,[r0,#0x3ee]
                  |L7.470|
;;;196    				
;;;197    			}	
;;;198    			for( i = 0; i < sizeof( SGhListSYSinfo )/sizeof( SGhListSYSinfo[0]) ; i++  ){
0001d6  2000              MOVS     r0,#0
0001d8  9021              STR      r0,[sp,#0x84]
0001da  e02f              B        |L7.572|
                  |L7.476|
;;;199    				
;;;200    				bush_Graph_String( FLAG_LANG, SGhListSYSinfo[i]);
0001dc  f89d0084          LDRB     r0,[sp,#0x84]
0001e0  eb0000c0          ADD      r0,r0,r0,LSL #3
0001e4  4991              LDR      r1,|L7.1068|
0001e6  eb0104c0          ADD      r4,r1,r0,LSL #3
0001ea  2234              MOVS     r2,#0x34
0001ec  4621              MOV      r1,r4
0001ee  a80f              ADD      r0,sp,#0x3c
0001f0  f7fffffe          BL       __aeabi_memcpy4
0001f4  f8540f34          LDR      r0,[r4,#0x34]!
0001f8  901c              STR      r0,[sp,#0x70]
0001fa  6860              LDR      r0,[r4,#4]
0001fc  901d              STR      r0,[sp,#0x74]
0001fe  68a0              LDR      r0,[r4,#8]
000200  901e              STR      r0,[sp,#0x78]
000202  89a0              LDRH     r0,[r4,#0xc]
000204  f8ad007c          STRH     r0,[sp,#0x7c]
000208  89e0              LDRH     r0,[r4,#0xe]
00020a  f8ad007e          STRH     r0,[sp,#0x7e]
00020e  8a20              LDRH     r0,[r4,#0x10]
000210  f8ad0080          STRH     r0,[sp,#0x80]
000214  8a60              LDRH     r0,[r4,#0x12]
000216  3c34              SUBS     r4,r4,#0x34
000218  f8ad0082          STRH     r0,[sp,#0x82]
00021c  223c              MOVS     r2,#0x3c
00021e  a912              ADD      r1,sp,#0x48
000220  4668              MOV      r0,sp
000222  f7fffffe          BL       __aeabi_memcpy4
000226  4877              LDR      r0,|L7.1028|
000228  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
00022a  a90f              ADD      r1,sp,#0x3c
00022c  c90e              LDM      r1,{r1-r3}
00022e  f7fffffe          BL       bush_Graph_String
000232  f89d0084          LDRB     r0,[sp,#0x84]         ;198
000236  1c40              ADDS     r0,r0,#1              ;198
000238  b2c0              UXTB     r0,r0                 ;198
00023a  9021              STR      r0,[sp,#0x84]         ;198
                  |L7.572|
00023c  f89d0084          LDRB     r0,[sp,#0x84]         ;198
000240  280e              CMP      r0,#0xe               ;198
000242  d3cb              BCC      |L7.476|
;;;201    			}
;;;202    			
;;;203    			GUI_SetFont(&GUI_FontSONG12);
000244  487a              LDR      r0,|L7.1072|
000246  f7fffffe          BL       GUI_SetFont
;;;204    		
;;;205    			GUI_UC_SetEncodeUTF8();
00024a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
;;;206    			
;;;207    			GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
00024e  2002              MOVS     r0,#2
000250  f7fffffe          BL       GUI_SetTextMode
;;;208    			
;;;209    			GUI_SetColor(0x00456654);
000254  4877              LDR      r0,|L7.1076|
000256  f7fffffe          BL       GUI_SetColor
;;;210    			
;;;211    			displayName = ( !FLAG_PWD == 1 ) ? ( ( FLAG_LANG == 1) ? "Page Locking" : "页面锁定" ) : (( FLAG_LANG == 1) ? "" : "" );
00025a  4877              LDR      r0,|L7.1080|
00025c  7800              LDRB     r0,[r0,#0]  ; FLAG_PWD
00025e  b908              CBNZ     r0,|L7.612|
000260  2001              MOVS     r0,#1
000262  e000              B        |L7.614|
                  |L7.612|
000264  2000              MOVS     r0,#0
                  |L7.614|
000266  2801              CMP      r0,#1
000268  d107              BNE      |L7.634|
00026a  4866              LDR      r0,|L7.1028|
00026c  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
00026e  2801              CMP      r0,#1
000270  d101              BNE      |L7.630|
000272  a072              ADR      r0,|L7.1084|
000274  e008              B        |L7.648|
                  |L7.630|
000276  a075              ADR      r0,|L7.1100|
000278  e006              B        |L7.648|
                  |L7.634|
00027a  4862              LDR      r0,|L7.1028|
00027c  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
00027e  2801              CMP      r0,#1
000280  d101              BNE      |L7.646|
000282  a069              ADR      r0,|L7.1064|
000284  e000              B        |L7.648|
                  |L7.646|
000286  a068              ADR      r0,|L7.1064|
                  |L7.648|
000288  4682              MOV      r10,r0
;;;212    				
;;;213    			GUI_DispStringAt( displayName, 460 - GUI_GetStringDistX(displayName), 13);	
00028a  4650              MOV      r0,r10
00028c  f7fffffe          BL       GUI_GetStringDistX
000290  f5c074e6          RSB      r4,r0,#0x1cc
000294  220d              MOVS     r2,#0xd
000296  4621              MOV      r1,r4
000298  4650              MOV      r0,r10
00029a  f7fffffe          BL       GUI_DispStringAt
;;;214    			
;;;215    			if( ent_pwd ){  
00029e  486f              LDR      r0,|L7.1116|
0002a0  7800              LDRB     r0,[r0,#0]  ; ent_pwd
0002a2  2800              CMP      r0,#0
0002a4  d07d              BEQ      |L7.930|
;;;216    			
;;;217    				if( !FLAG_PWD ){
0002a6  4864              LDR      r0,|L7.1080|
0002a8  7800              LDRB     r0,[r0,#0]  ; FLAG_PWD
0002aa  2800              CMP      r0,#0
0002ac  d179              BNE      |L7.930|
;;;218    					
;;;219    					x = 450 - GUI_GetStringDistX(( FLAG_LANG == 1 ) ? S_PWD[0].f_EName :  S_PWD[0].f_SName ) - 85;
0002ae  4955              LDR      r1,|L7.1028|
0002b0  7809              LDRB     r1,[r1,#0]  ; FLAG_LANG
0002b2  2901              CMP      r1,#1
0002b4  d101              BNE      |L7.698|
0002b6  496a              LDR      r1,|L7.1120|
0002b8  e001              B        |L7.702|
                  |L7.698|
0002ba  4969              LDR      r1,|L7.1120|
0002bc  3914              SUBS     r1,r1,#0x14
                  |L7.702|
0002be  4608              MOV      r0,r1
0002c0  f7fffffe          BL       GUI_GetStringDistX
0002c4  f5c070e1          RSB      r0,r0,#0x1c2
0002c8  f1a00655          SUB      r6,r0,#0x55
;;;220    
;;;221    					S_PWD[0].d_x = x - 20 ;    S_PWD[0].d_y = 212;
0002cc  f1a60014          SUB      r0,r6,#0x14
0002d0  4963              LDR      r1,|L7.1120|
0002d2  3920              SUBS     r1,r1,#0x20
0002d4  f8a10040          STRH     r0,[r1,#0x40]
0002d8  20d4              MOVS     r0,#0xd4
0002da  f8a10042          STRH     r0,[r1,#0x42]
;;;222    				
;;;223    					S_PWD[1].d_x = x + GUI_GetStringDistX(( FLAG_LANG == 1 ) ? S_PWD[0].f_EName :  S_PWD[0].f_SName ) - 15;   		
0002de  4949              LDR      r1,|L7.1028|
0002e0  7809              LDRB     r1,[r1,#0]  ; FLAG_LANG
0002e2  2901              CMP      r1,#1
0002e4  d101              BNE      |L7.746|
0002e6  495e              LDR      r1,|L7.1120|
0002e8  e001              B        |L7.750|
                  |L7.746|
0002ea  495d              LDR      r1,|L7.1120|
0002ec  3914              SUBS     r1,r1,#0x14
                  |L7.750|
0002ee  4608              MOV      r0,r1
0002f0  f7fffffe          BL       GUI_GetStringDistX
0002f4  4430              ADD      r0,r0,r6
0002f6  380f              SUBS     r0,r0,#0xf
0002f8  b281              UXTH     r1,r0
0002fa  4859              LDR      r0,|L7.1120|
0002fc  3820              SUBS     r0,r0,#0x20
0002fe  f8a01088          STRH     r1,[r0,#0x88]
;;;224    					S_PWD[1].d_y = 210;
000302  21d2              MOVS     r1,#0xd2
000304  f8a0108a          STRH     r1,[r0,#0x8a]
;;;225    					S_PWD[1].d_x1 = x + GUI_GetStringDistX(( FLAG_LANG == 1 ) ? S_PWD[0].f_EName :  S_PWD[0].f_SName ) + 100;    
000308  493e              LDR      r1,|L7.1028|
00030a  7809              LDRB     r1,[r1,#0]  ; FLAG_LANG
00030c  2901              CMP      r1,#1
00030e  d101              BNE      |L7.788|
000310  4953              LDR      r1,|L7.1120|
000312  e001              B        |L7.792|
                  |L7.788|
000314  4952              LDR      r1,|L7.1120|
000316  3914              SUBS     r1,r1,#0x14
                  |L7.792|
000318  4608              MOV      r0,r1
00031a  f7fffffe          BL       GUI_GetStringDistX
00031e  4430              ADD      r0,r0,r6
000320  3064              ADDS     r0,r0,#0x64
000322  b281              UXTH     r1,r0
000324  484e              LDR      r0,|L7.1120|
000326  3820              SUBS     r0,r0,#0x20
000328  f8a0108c          STRH     r1,[r0,#0x8c]
;;;226    					S_PWD[1].d_y1 = 225; 
00032c  21e1              MOVS     r1,#0xe1
00032e  f8a0108e          STRH     r1,[r0,#0x8e]
;;;227    					
;;;228    					for( i = 0; i < sizeof( S_PWD )/sizeof( S_PWD[0]) ; i++  ){
000332  2000              MOVS     r0,#0
000334  9021              STR      r0,[sp,#0x84]
000336  e030              B        |L7.922|
                  |L7.824|
;;;229    				
;;;230    						  bush_Graph_String( FLAG_LANG, S_PWD[i]);
000338  f89d0084          LDRB     r0,[sp,#0x84]
00033c  eb0000c0          ADD      r0,r0,r0,LSL #3
000340  4947              LDR      r1,|L7.1120|
000342  3920              SUBS     r1,r1,#0x20
000344  eb0104c0          ADD      r4,r1,r0,LSL #3
000348  2234              MOVS     r2,#0x34
00034a  4621              MOV      r1,r4
00034c  a80f              ADD      r0,sp,#0x3c
00034e  f7fffffe          BL       __aeabi_memcpy4
000352  f8540f34          LDR      r0,[r4,#0x34]!
000356  901c              STR      r0,[sp,#0x70]
000358  6860              LDR      r0,[r4,#4]
00035a  901d              STR      r0,[sp,#0x74]
00035c  68a0              LDR      r0,[r4,#8]
00035e  901e              STR      r0,[sp,#0x78]
000360  89a0              LDRH     r0,[r4,#0xc]
000362  f8ad007c          STRH     r0,[sp,#0x7c]
000366  89e0              LDRH     r0,[r4,#0xe]
000368  f8ad007e          STRH     r0,[sp,#0x7e]
00036c  8a20              LDRH     r0,[r4,#0x10]
00036e  f8ad0080          STRH     r0,[sp,#0x80]
000372  8a60              LDRH     r0,[r4,#0x12]
000374  3c34              SUBS     r4,r4,#0x34
000376  f8ad0082          STRH     r0,[sp,#0x82]
00037a  223c              MOVS     r2,#0x3c
00037c  a912              ADD      r1,sp,#0x48
00037e  4668              MOV      r0,sp
000380  f7fffffe          BL       __aeabi_memcpy4
000384  481f              LDR      r0,|L7.1028|
000386  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
000388  a90f              ADD      r1,sp,#0x3c
00038a  c90e              LDM      r1,{r1-r3}
00038c  f7fffffe          BL       bush_Graph_String
000390  f89d0084          LDRB     r0,[sp,#0x84]         ;228
000394  1c40              ADDS     r0,r0,#1              ;228
000396  b2c0              UXTB     r0,r0                 ;228
000398  9021              STR      r0,[sp,#0x84]         ;228
                  |L7.922|
00039a  f89d0084          LDRB     r0,[sp,#0x84]         ;228
00039e  2802              CMP      r0,#2                 ;228
0003a0  d3ca              BCC      |L7.824|
                  |L7.930|
;;;231    					}	
;;;232    				}
;;;233    			}
;;;234    			if( FLAG_PWD ){
0003a2  4825              LDR      r0,|L7.1080|
0003a4  7800              LDRB     r0,[r0,#0]  ; FLAG_PWD
;;;235    				
;;;236    				//show_months_ListBox();
;;;237    			}
;;;238    			
;;;239    		}
;;;240    		
;;;241    		break;
0003a6  e024              B        |L7.1010|
                  |L7.936|
;;;242    
;;;243    		case WM_TIMER:{
;;;244    			
;;;245    			if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTimeSYSINFO){	
0003a8  68e8              LDR      r0,[r5,#0xc]
0003aa  f7fffffe          BL       WM_GetTimerId
0003ae  2807              CMP      r0,#7
0003b0  d104              BNE      |L7.956|
;;;246    			
;;;247    				WM_RestartTimer(pMsg->Data.v, 500);//复位定时器数值越大刷新时间越短	
0003b2  f44f71fa          MOV      r1,#0x1f4
0003b6  68e8              LDR      r0,[r5,#0xc]
0003b8  f7fffffe          BL       WM_RestartTimer
                  |L7.956|
;;;248    				
;;;249    			}	
;;;250    			break;
0003bc  e019              B        |L7.1010|
                  |L7.958|
;;;251    		}
;;;252    		break;	
;;;253    		
;;;254    		case WM_KEY:
;;;255    		
;;;256    		break;
0003be  e018              B        |L7.1010|
                  |L7.960|
;;;257    			
;;;258    		case WM_INIT_DIALOG:{
;;;259    				
;;;260    			hItem = pMsg->hWin;
0003c0  686f              LDR      r7,[r5,#4]
;;;261    			
;;;262    			WINDOW_SetBkColor(hItem, 0x004A4655);
0003c2  4928              LDR      r1,|L7.1124|
0003c4  4638              MOV      r0,r7
0003c6  f7fffffe          BL       WINDOW_SetBkColor
;;;263    			
;;;264    			WM_CreateTimer( hItem ,ID_TimerTimeSYSINFO , 20 , 0);//创建本窗口定时器
0003ca  2300              MOVS     r3,#0
0003cc  2214              MOVS     r2,#0x14
0003ce  2107              MOVS     r1,#7
0003d0  4638              MOV      r0,r7
0003d2  f7fffffe          BL       WM_CreateTimer
;;;265    			
;;;266    			MAX_LEN = sizeof(slistSYSinfo)/sizeof(slistSYSinfo[0]);
0003d6  f04f0805          MOV      r8,#5
;;;267    			
;;;268    			bush_WinObj( FLAG_LANG, pMsg, slistSYSinfo, MAX_LEN);
0003da  4643              MOV      r3,r8
0003dc  4a22              LDR      r2,|L7.1128|
0003de  4629              MOV      r1,r5
0003e0  4808              LDR      r0,|L7.1028|
0003e2  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
0003e4  f7fffffe          BL       bush_WinObj
;;;269      
;;;270    		}
;;;271    		break;
0003e8  e003              B        |L7.1010|
                  |L7.1002|
;;;272    		default:
;;;273    		
;;;274    			WM_DefaultProc(pMsg);
0003ea  4628              MOV      r0,r5
0003ec  f7fffffe          BL       WM_DefaultProc
;;;275    			
;;;276    		break;
0003f0  bf00              NOP      
                  |L7.1010|
0003f2  bf00              NOP                            ;241
;;;277    	 }
;;;278    
;;;279    }
0003f4  b022              ADD      sp,sp,#0x88
0003f6  e8bd87f0          POP      {r4-r10,pc}
;;;280    
                          ENDP

0003fa  0000              DCW      0x0000
                  |L7.1020|
                          DCD      0x00ffd700
                  |L7.1024|
                          DCD      GUI_FontSONG16
                  |L7.1028|
                          DCD      FLAG_LANG
                  |L7.1032|
000408  53797374          DCB      "System Information",0
00040c  656d2049
000410  6e666f72
000414  6d617469
000418  6f6e00  
00041b  00                DCB      0
                  |L7.1052|
00041c  e7b3bbe7          DCB      231,179,187,231,187,159,228,191,161,230,129,175
000420  bb9fe4bf
000424  a1e681af
                  |L7.1064|
000428  00                DCB      0
000429  00                DCB      0
00042a  00                DCB      0
00042b  00                DCB      0
                  |L7.1068|
                          DCD      SGhListSYSinfo
                  |L7.1072|
                          DCD      GUI_FontSONG12
                  |L7.1076|
                          DCD      0x00456654
                  |L7.1080|
                          DCD      FLAG_PWD
                  |L7.1084|
00043c  50616765          DCB      "Page Locking",0
000440  204c6f63
000444  6b696e67
000448  00      
000449  00                DCB      0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L7.1100|
00044c  e9a1b5e9          DCB      233,161,181,233,157,162,233,148,129,229,174,154,0
000450  9da2e994
000454  81e5ae9a
000458  00      
000459  00                DCB      0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L7.1116|
                          DCD      ent_pwd
                  |L7.1120|
                          DCD      S_PWD+0x20
                  |L7.1124|
                          DCD      0x004a4655
                  |L7.1128|
                          DCD      slistSYSinfo

                          AREA ||i.display_ListBox||, CODE, READONLY, ALIGN=2

                  display_ListBox PROC
;;;978    void display_ListBox( struct SGraphData _data, vu8 _lines, vu8 _haction );
;;;979    void display_ListBox( struct SGraphData _data, vu8 _lines, vu8 _haction ){
000000  b40f              PUSH     {r0-r3}
000002  b510              PUSH     {r4,lr}
000004  b086              SUB      sp,sp,#0x18
;;;980    	
;;;981    	vu8 len = 0,  i = 0, j = 0;
000006  2000              MOVS     r0,#0
000008  9005              STR      r0,[sp,#0x14]
00000a  9004              STR      r0,[sp,#0x10]
00000c  9003              STR      r0,[sp,#0xc]
;;;982    		
;;;983    	int LCD_MAX_HEIGHT = 272;     //当前屏幕的高度
00000e  f44f7488          MOV      r4,#0x110
;;;984    	
;;;985    	vu8 show_normal = 0;          //显示方向  0/不显示  1/向下   -1/向上
000012  9002              STR      r0,[sp,#8]
;;;986    	
;;;987    	vu8 f_size = 0;               //字体高度
000014  9001              STR      r0,[sp,#4]
;;;988    	
;;;989    	f_size = GUI_GetStringDistX( FLAG_LANG == 1 ? _data.f_EName : _data.f_SName );    //每行的高度
000016  492c              LDR      r1,|L8.200|
000018  7809              LDRB     r1,[r1,#0]  ; FLAG_LANG
00001a  2901              CMP      r1,#1
00001c  d101              BNE      |L8.34|
00001e  a910              ADD      r1,sp,#0x40
000020  e000              B        |L8.36|
                  |L8.34|
000022  a90b              ADD      r1,sp,#0x2c
                  |L8.36|
000024  4608              MOV      r0,r1
000026  f7fffffe          BL       GUI_GetStringDistX
00002a  b2c0              UXTB     r0,r0
00002c  9001              STR      r0,[sp,#4]
;;;990    	
;;;991    	if( _data.d_y - ( f_size + 2 ) * _lines + 20  > 0 ){     
00002e  f8bd1062          LDRH     r1,[sp,#0x62]
000032  f89d0004          LDRB     r0,[sp,#4]
000036  1c80              ADDS     r0,r0,#2
000038  f89d2068          LDRB     r2,[sp,#0x68]
00003c  fb001012          MLS      r0,r0,r2,r1
000040  3014              ADDS     r0,r0,#0x14
000042  2800              CMP      r0,#0
000044  dd01              BLE      |L8.74|
;;;992    		
;;;993    		show_normal = -1;             
000046  20ff              MOVS     r0,#0xff
000048  9002              STR      r0,[sp,#8]
                  |L8.74|
;;;994    	}
;;;995    	if( LCD_MAX_HEIGHT - _data.d_y >= ( f_size + 2 ) * _lines + 20 ){
00004a  f8bd0062          LDRH     r0,[sp,#0x62]
00004e  1a21              SUBS     r1,r4,r0
000050  f89d0004          LDRB     r0,[sp,#4]
000054  1c80              ADDS     r0,r0,#2
000056  f89d2068          LDRB     r2,[sp,#0x68]
00005a  fb10f002          SMULBB   r0,r0,r2
00005e  3014              ADDS     r0,r0,#0x14
000060  4281              CMP      r1,r0
000062  db01              BLT      |L8.104|
;;;996    		
;;;997    		show_normal = 1;
000064  2001              MOVS     r0,#1
000066  9002              STR      r0,[sp,#8]
                  |L8.104|
;;;998    	}
;;;999    	
;;;1000   	switch( _data.d_ID ){
000068  9808              LDR      r0,[sp,#0x20]
00006a  2809              CMP      r0,#9
00006c  d126              BNE      |L8.188|
;;;1001   		
;;;1002   		case 9:
;;;1003   		
;;;1004   			len = sizeof( m_List) / sizeof( m_List[0]);
00006e  200c              MOVS     r0,#0xc
000070  9005              STR      r0,[sp,#0x14]
;;;1005   			
;;;1006   			if( sloc[0] == 1024 ){
000072  4816              LDR      r0,|L8.204|
000074  6800              LDR      r0,[r0,#0]  ; sloc
000076  f5b06f80          CMP      r0,#0x400
00007a  d106              BNE      |L8.138|
;;;1007   				
;;;1008   				sloc[0] = 9;   //存放id
00007c  2009              MOVS     r0,#9
00007e  4913              LDR      r1,|L8.204|
000080  6008              STR      r0,[r1,#0]  ; sloc
;;;1009   				sloc[1] = 0;   
000082  2000              MOVS     r0,#0
000084  6048              STR      r0,[r1,#4]  ; sloc
;;;1010   				sloc[2] = 0;
000086  6088              STR      r0,[r1,#8]  ; sloc
;;;1011   				sloc[3] = 0;
000088  60c8              STR      r0,[r1,#0xc]  ; sloc
                  |L8.138|
;;;1012   			}
;;;1013   			
;;;1014   			if( show_normal != 0 ){
00008a  f89d0008          LDRB     r0,[sp,#8]
00008e  b1a0              CBZ      r0,|L8.186|
;;;1015   		
;;;1016   				if( show_normal == 1 ){
000090  f89d0008          LDRB     r0,[sp,#8]
000094  2801              CMP      r0,#1
000096  d10e              BNE      |L8.182|
;;;1017   					
;;;1018   					for( i = 0; i < len; i++ ){
000098  2000              MOVS     r0,#0
00009a  9004              STR      r0,[sp,#0x10]
00009c  e004              B        |L8.168|
                  |L8.158|
00009e  f89d0010          LDRB     r0,[sp,#0x10]
0000a2  1c40              ADDS     r0,r0,#1
0000a4  b2c0              UXTB     r0,r0
0000a6  9004              STR      r0,[sp,#0x10]
                  |L8.168|
0000a8  f89d0010          LDRB     r0,[sp,#0x10]
0000ac  f89d1014          LDRB     r1,[sp,#0x14]
0000b0  4288              CMP      r0,r1
0000b2  dbf4              BLT      |L8.158|
0000b4  e001              B        |L8.186|
                  |L8.182|
;;;1019   				
;;;1020   						//页面显示后   当前焦点坐标是记录坐标列表中的最后一位  则重新赋值
;;;1021   						
;;;1022   						
;;;1023   						
;;;1024   					}
;;;1025   					
;;;1026   					
;;;1027   				}else if( show_normal == -1 ){
0000b6  f89d0008          LDRB     r0,[sp,#8]
                  |L8.186|
;;;1028   					
;;;1029   					
;;;1030   					
;;;1031   					
;;;1032   				}	
;;;1033   			}
;;;1034   		
;;;1035   		break;
0000ba  bf00              NOP      
                  |L8.188|
0000bc  bf00              NOP      
;;;1036   	}
;;;1037   		
;;;1038   }
0000be  b006              ADD      sp,sp,#0x18
0000c0  bc10              POP      {r4}
0000c2  f85dfb14          LDR      pc,[sp],#0x14
;;;1039   
                          ENDP

0000c6  0000              DCW      0x0000
                  |L8.200|
                          DCD      FLAG_LANG
                  |L8.204|
                          DCD      sloc

                          AREA ||i.show_months_ListBox||, CODE, READONLY, ALIGN=2

                  show_months_ListBox PROC
;;;1040   //显示月份列表
;;;1041   void show_months_ListBox()
000000  b5f0              PUSH     {r4-r7,lr}
;;;1042   {
000002  b0a1              SUB      sp,sp,#0x84
;;;1043   		int i = 0, num = 0, dlen = 0;
000004  2400              MOVS     r4,#0
000006  2700              MOVS     r7,#0
000008  2600              MOVS     r6,#0
;;;1044   		
;;;1045   		int *key_loc;
;;;1046   		
;;;1047   		int key_id;
;;;1048   		
;;;1049   		dlen = sizeof(SGhListSYSinfo) / sizeof( SGhListSYSinfo[0] );
00000a  260e              MOVS     r6,#0xe
;;;1050   				
;;;1051   		key_loc = get_id_index( SGhListSYSinfo, dlen);;
00000c  4631              MOV      r1,r6
00000e  4831              LDR      r0,|L9.212|
000010  f7fffffe          BL       get_id_index
000014  4605              MOV      r5,r0
;;;1052   								
;;;1053   		if( *key_loc == 0x194  )
000016  6828              LDR      r0,[r5,#0]
000018  f5b07fca          CMP      r0,#0x194
00001c  d104              BNE      |L9.40|
;;;1054   									
;;;1055   				SGhListSYSinfo[7].focusType = 1;
00001e  2101              MOVS     r1,#1
000020  482c              LDR      r0,|L9.212|
000022  f8c011fc          STR      r1,[r0,#0x1fc]
000026  e052              B        |L9.206|
                  |L9.40|
;;;1056   								
;;;1057   		else
;;;1058   		{	
;;;1059   				if( FLAG_INPUTAUTH &&  *key_loc == 10)
000028  482b              LDR      r0,|L9.216|
00002a  7800              LDRB     r0,[r0,#0]  ; FLAG_INPUTAUTH
00002c  2800              CMP      r0,#0
00002e  d04e              BEQ      |L9.206|
000030  6828              LDR      r0,[r5,#0]
000032  280a              CMP      r0,#0xa
000034  d14b              BNE      |L9.206|
;;;1060   				{
;;;1061   						for( i = 0; i < sizeof( m_List )/sizeof( m_List[0]) ; i++  )
000036  2400              MOVS     r4,#0
000038  e047              B        |L9.202|
                  |L9.58|
;;;1062   							
;;;1063   								bush_Graph_String( FLAG_LANG , m_List[i]);		
00003a  eb0400c4          ADD      r0,r4,r4,LSL #3
00003e  4a27              LDR      r2,|L9.220|
000040  eb0201c0          ADD      r1,r2,r0,LSL #3
000044  2234              MOVS     r2,#0x34
000046  a80f              ADD      r0,sp,#0x3c
000048  f7fffffe          BL       __aeabi_memcpy4
00004c  eb0400c4          ADD      r0,r4,r4,LSL #3
000050  4922              LDR      r1,|L9.220|
000052  eb0100c0          ADD      r0,r1,r0,LSL #3
000056  6b40              LDR      r0,[r0,#0x34]
000058  901c              STR      r0,[sp,#0x70]
00005a  eb0400c4          ADD      r0,r4,r4,LSL #3
00005e  eb0100c0          ADD      r0,r1,r0,LSL #3
000062  6b80              LDR      r0,[r0,#0x38]
000064  901d              STR      r0,[sp,#0x74]
000066  eb0400c4          ADD      r0,r4,r4,LSL #3
00006a  eb0100c0          ADD      r0,r1,r0,LSL #3
00006e  6bc0              LDR      r0,[r0,#0x3c]
000070  901e              STR      r0,[sp,#0x78]
000072  eb0400c4          ADD      r0,r4,r4,LSL #3
000076  eb0100c0          ADD      r0,r1,r0,LSL #3
00007a  f8b00040          LDRH     r0,[r0,#0x40]
00007e  f8ad007c          STRH     r0,[sp,#0x7c]
000082  eb0400c4          ADD      r0,r4,r4,LSL #3
000086  eb0100c0          ADD      r0,r1,r0,LSL #3
00008a  f8b00042          LDRH     r0,[r0,#0x42]
00008e  f8ad007e          STRH     r0,[sp,#0x7e]
000092  eb0400c4          ADD      r0,r4,r4,LSL #3
000096  eb0100c0          ADD      r0,r1,r0,LSL #3
00009a  f8b00044          LDRH     r0,[r0,#0x44]
00009e  f8ad0080          STRH     r0,[sp,#0x80]
0000a2  eb0400c4          ADD      r0,r4,r4,LSL #3
0000a6  eb0100c0          ADD      r0,r1,r0,LSL #3
0000aa  f8b00046          LDRH     r0,[r0,#0x46]
0000ae  f8ad0082          STRH     r0,[sp,#0x82]
0000b2  223c              MOVS     r2,#0x3c
0000b4  a912              ADD      r1,sp,#0x48
0000b6  4668              MOV      r0,sp
0000b8  f7fffffe          BL       __aeabi_memcpy4
0000bc  4808              LDR      r0,|L9.224|
0000be  7800              LDRB     r0,[r0,#0]  ; FLAG_LANG
0000c0  a90f              ADD      r1,sp,#0x3c
0000c2  c90e              LDM      r1,{r1-r3}
0000c4  f7fffffe          BL       bush_Graph_String
0000c8  1c64              ADDS     r4,r4,#1              ;1061
                  |L9.202|
0000ca  2c0c              CMP      r4,#0xc               ;1061
0000cc  d3b5              BCC      |L9.58|
                  |L9.206|
;;;1064   				}
;;;1065   		}
;;;1066   	
;;;1067   }
0000ce  b021              ADD      sp,sp,#0x84
0000d0  bdf0              POP      {r4-r7,pc}
;;;1068   
                          ENDP

0000d2  0000              DCW      0x0000
                  |L9.212|
                          DCD      SGhListSYSinfo
                  |L9.216|
                          DCD      FLAG_INPUTAUTH
                  |L9.220|
                          DCD      m_List
                  |L9.224|
                          DCD      FLAG_LANG

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  c_password
                          %        15

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreatesysinfo
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  09010000          DCW      0x0901,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  09020055          DCW      0x0902,0x0055
000028  00e80046          DCW      0x00e8,0x0046
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  090300a4          DCW      0x0903,0x00a4
000044  00e80046          DCW      0x00e8,0x0046
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  090400f3          DCW      0x0904,0x00f3
000060  00e80046          DCW      0x00e8,0x0046
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  09050142          DCW      0x0905,0x0142
00007c  00e80046          DCW      0x00e8,0x0046
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  09060191          DCW      0x0906,0x0191
000098  00e80046          DCW      0x00e8,0x0046
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                  month_focusList
                          DCD      0x00000000
                          DCD      0x00000001
                          DCD      0x00000002
                          DCD      0x00000003
                          DCD      0x00000004
                          DCD      0x00000005
                          DCD      0x00000006
                          DCD      0x00000007
                          DCD      0x00000008
                          DCD      0x00000009
                          DCD      0x0000000a
                          DCD      0x0000000b
                  WINSI_id_DataLists
                          DCD      0x00000008
                          DCD      0x0000000a
                          DCD      0x0000000c
                          DCD      0x0000000e
                          DCD      0x0000000e
                          DCD      0x0000000e
                  v_ud_a
                          DCD      0x00000008
                          DCD      0x0000000a
                          DCD      0x0000000c

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  

                          AREA ||.data||, DATA, ALIGN=2

                  sysinfoWin
                          DCD      0x00000000
                  FLAG_PWD
000004  00                DCB      0x00
                  ent_pwd
000005  000000            DCB      0x00,0x00,0x00
                  SGhListSYSinfo
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000002
000014  e4bbaae5          DCB      0xe4,0xbb,0xaa,0xe5
000018  99a8e59e          DCB      0x99,0xa8,0xe5,0x9e
00001c  8be58fb7          DCB      0x8b,0xe5,0x8f,0xb7
000020  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000028  496e7374          DCB      0x49,0x6e,0x73,0x74
00002c  72756d65          DCB      0x72,0x75,0x6d,0x65
000030  6e74204d          DCB      0x6e,0x74,0x20,0x4d
000034  6f64656c          DCB      0x6f,0x64,0x65,0x6c
000038  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000048  001e002d          DCW      0x001e,0x002d
00004c  00000000          DCW      0x0000,0x0000
                          DCD      0x00000002
                          DCD      0x00000000
                          DCD      0x00000002
00005c  e8bf99e6          DCB      0xe8,0xbf,0x99,0xe6
000060  98afe4bb          DCB      0x98,0xaf,0xe4,0xbb
000064  aae599a8          DCB      0xaa,0xe5,0x99,0xa8
000068  e59e8be5          DCB      0xe5,0x9e,0x8b,0xe5
00006c  8fb70000          DCB      0x8f,0xb7,0x00,0x00
000070  496e7374          DCB      0x49,0x6e,0x73,0x74
000074  72756d65          DCB      0x72,0x75,0x6d,0x65
000078  6e74204d          DCB      0x6e,0x74,0x20,0x4d
00007c  6f64656c          DCB      0x6f,0x64,0x65,0x6c
000080  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000090  00b4002d          DCW      0x00b4,0x002d
000094  00000000          DCW      0x0000,0x0000
                          DCD      0x00000003
                          DCD      0x00000000
                          DCD      0x00000002
0000a4  e8bdafe4          DCB      0xe8,0xbd,0xaf,0xe4
0000a8  bbb6e789          DCB      0xbb,0xb6,0xe7,0x89
0000ac  88e69cac          DCB      0x88,0xe6,0x9c,0xac
0000b0  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0000b8  536f6674          DCB      0x53,0x6f,0x66,0x74
0000bc  77617265          DCB      0x77,0x61,0x72,0x65
0000c0  20566572          DCB      0x20,0x56,0x65,0x72
0000c4  73696f6e          DCB      0x73,0x69,0x6f,0x6e
0000c8  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0000d8  001e004b          DCW      0x001e,0x004b
0000dc  00000000          DCW      0x0000,0x0000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000002
0000ec  e8bf99e6          DCB      0xe8,0xbf,0x99,0xe6
0000f0  98afe8bd          DCB      0x98,0xaf,0xe8,0xbd
0000f4  afe4bbb6          DCB      0xaf,0xe4,0xbb,0xb6
0000f8  e78988e6          DCB      0xe7,0x89,0x88,0xe6
0000fc  9cac0000          DCB      0x9c,0xac,0x00,0x00
000100  536f6674          DCB      0x53,0x6f,0x66,0x74
000104  77617265          DCB      0x77,0x61,0x72,0x65
000108  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000120  0073004b          DCW      0x0073,0x004b
000124  00000000          DCW      0x0000,0x0000
                          DCD      0x00000005
                          DCD      0x00000000
                          DCD      0x00000002
000134  e7a1ace4          DCB      0xe7,0xa1,0xac,0xe4
000138  bbb6e789          DCB      0xbb,0xb6,0xe7,0x89
00013c  88e69cac          DCB      0x88,0xe6,0x9c,0xac
000140  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000148  48617264          DCB      0x48,0x61,0x72,0x64
00014c  77617265          DCB      0x77,0x61,0x72,0x65
000150  20566572          DCB      0x20,0x56,0x65,0x72
000154  73696f6e          DCB      0x73,0x69,0x6f,0x6e
000158  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000168  001e0069          DCW      0x001e,0x0069
00016c  00000000          DCW      0x0000,0x0000
                          DCD      0x00000006
                          DCD      0x00000000
                          DCD      0x00000002
00017c  e8bf99e6          DCB      0xe8,0xbf,0x99,0xe6
000180  98afe7a1          DCB      0x98,0xaf,0xe7,0xa1
000184  ace4bbb6          DCB      0xac,0xe4,0xbb,0xb6
000188  e78988e6          DCB      0xe7,0x89,0x88,0xe6
00018c  9cac0000          DCB      0x9c,0xac,0x00,0x00
000190  48617264          DCB      0x48,0x61,0x72,0x64
000194  77617265          DCB      0x77,0x61,0x72,0x65
000198  00000000          DCB      0x00,0x00,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0001b0  00730069          DCW      0x0073,0x0069
0001b4  00000000          DCW      0x0000,0x0000
                          DCD      0x00000007
                          DCD      0x00000000
                          DCD      0x00000002
0001c4  e7949fe4          DCB      0xe7,0x94,0x9f,0xe4
0001c8  baa7e697          DCB      0xba,0xa7,0xe6,0x97
0001cc  a5e69c9f          DCB      0xa5,0xe6,0x9c,0x9f
0001d0  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
0001d8  50726f64          DCB      0x50,0x72,0x6f,0x64
0001dc  75637469          DCB      0x75,0x63,0x74,0x69
0001e0  6f6e2044          DCB      0x6f,0x6e,0x20,0x44
0001e4  61746500          DCB      0x61,0x74,0x65,0x00
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0001f8  001e0087          DCW      0x001e,0x0087
0001fc  00000000          DCW      0x0000,0x0000
                          DCD      0x00000008
                          DCD      0x00000001
                          DCD      0x00000001
00020c  32303132          DCB      0x32,0x30,0x31,0x32
000210  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
000220  32303132          DCB      0x32,0x30,0x31,0x32
000224  00000000          DCB      0x00,0x00,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000240  00730087          DCW      0x0073,0x0087
000244  00960098          DCW      0x0096,0x0098
                          DCD      0x00000009
                          DCD      0x00000000
                          DCD      0x00000002
000254  2d000000          DCB      0x2d,0x00,0x00,0x00
                          %        16
000268  2d000000          DCB      0x2d,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000288  009b0087          DCW      0x009b,0x0087
00028c  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000a
                          DCD      0x00000000
                          DCD      0x00000001
00029c  30320000          DCB      0x30,0x32,0x00,0x00
                          %        16
0002b0  30320000          DCB      0x30,0x32,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0002d0  00ad0087          DCW      0x00ad,0x0087
0002d4  00c10098          DCW      0x00c1,0x0098
                          DCD      0x0000000b
                          DCD      0x00000000
                          DCD      0x00000002
0002e4  2d000000          DCB      0x2d,0x00,0x00,0x00
                          %        16
0002f8  2d000000          DCB      0x2d,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000318  00c60087          DCW      0x00c6,0x0087
00031c  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000c
                          DCD      0x00000000
                          DCD      0x00000001
00032c  31310000          DCB      0x31,0x31,0x00,0x00
                          %        16
000340  31310000          DCB      0x31,0x31,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000360  00d50087          DCW      0x00d5,0x0087
000364  00e90098          DCW      0x00e9,0x0098
                          DCD      0x0000000d
                          DCD      0x00000000
                          DCD      0x00000002
000374  e4bbaae5          DCB      0xe4,0xbb,0xaa,0xe5
000378  99a8e7bc          DCB      0x99,0xa8,0xe7,0xbc
00037c  96e58fb7          DCB      0x96,0xe5,0x8f,0xb7
000380  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00000000
000388  53657269          DCB      0x53,0x65,0x72,0x69
00038c  616c204e          DCB      0x61,0x6c,0x20,0x4e
000390  4f2e0000          DCB      0x4f,0x2e,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0003a8  001e00a5          DCW      0x001e,0x00a5
0003ac  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000e
                          DCD      0x00000000
                          DCD      0x00000001
0003bc  6a6b3535          DCB      0x6a,0x6b,0x35,0x35
0003c0  33300000          DCB      0x33,0x30,0x00,0x00
                          %        12
0003d0  6a6b3535          DCB      0x6a,0x6b,0x35,0x35
0003d4  33300000          DCB      0x33,0x30,0x00,0x00
                          %        12
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0003f0  007300a5          DCW      0x0073,0x00a5
0003f4  00cd0098          DCW      0x00cd,0x0098
                  S_PWD
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000002
000404  e5af86e7          DCB      0xe5,0xaf,0x86,0xe7
000408  a0813a00          DCB      0xa0,0x81,0x3a,0x00
                          %        12
000418  50617373          DCB      0x50,0x61,0x73,0x73
00041c  576f7264          DCB      0x57,0x6f,0x72,0x64
000420  3a000000          DCB      0x3a,0x00,0x00,0x00
                          %        8
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      GUI_FontSONG12
000438  001e00c3          DCW      0x001e,0x00c3
00043c  00000000          DCW      0x0000,0x0000
                          DCD      0x00000002
                          DCD      0x00000001
                          DCD      0x00000001
00044c  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
000460  00000000          DCB      0x00,0x00,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00f0ffff
                          DCD      GUI_FontSONG12
000480  007300c3          DCW      0x0073,0x00c3
000484  00cd00b6          DCW      0x00cd,0x00b6
                  m_List
                          DCD      0x00000001
                          DCD      0x00000000
                          DCD      0x00000001
000494  30310000          DCB      0x30,0x31,0x00,0x00
                          %        16
0004a8  30310000          DCB      0x30,0x31,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0004c8  00000000          DCW      0x0000,0x0000
0004cc  00000000          DCW      0x0000,0x0000
                          DCD      0x00000002
                          DCD      0x00000000
                          DCD      0x00000001
0004dc  30320000          DCB      0x30,0x32,0x00,0x00
                          %        16
0004f0  30320000          DCB      0x30,0x32,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000510  00000000          DCW      0x0000,0x0000
000514  00000000          DCW      0x0000,0x0000
                          DCD      0x00000003
                          DCD      0x00000000
                          DCD      0x00000001
000524  30330000          DCB      0x30,0x33,0x00,0x00
                          %        16
000538  30330000          DCB      0x30,0x33,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000558  00000000          DCW      0x0000,0x0000
00055c  00000000          DCW      0x0000,0x0000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000001
00056c  30340000          DCB      0x30,0x34,0x00,0x00
                          %        16
000580  30340000          DCB      0x30,0x34,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0005a0  00000000          DCW      0x0000,0x0000
0005a4  00000000          DCW      0x0000,0x0000
                          DCD      0x00000005
                          DCD      0x00000000
                          DCD      0x00000001
0005b4  30350000          DCB      0x30,0x35,0x00,0x00
                          %        16
0005c8  30350000          DCB      0x30,0x35,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0005e8  00000000          DCW      0x0000,0x0000
0005ec  00000000          DCW      0x0000,0x0000
                          DCD      0x00000006
                          DCD      0x00000000
                          DCD      0x00000001
0005fc  30360000          DCB      0x30,0x36,0x00,0x00
                          %        16
000610  30360000          DCB      0x30,0x36,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000630  00000000          DCW      0x0000,0x0000
000634  00000000          DCW      0x0000,0x0000
                          DCD      0x00000007
                          DCD      0x00000000
                          DCD      0x00000001
000644  30370000          DCB      0x30,0x37,0x00,0x00
                          %        16
000658  30370000          DCB      0x30,0x37,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000678  00000000          DCW      0x0000,0x0000
00067c  00000000          DCW      0x0000,0x0000
                          DCD      0x00000008
                          DCD      0x00000000
                          DCD      0x00000001
00068c  30380000          DCB      0x30,0x38,0x00,0x00
                          %        16
0006a0  30380000          DCB      0x30,0x38,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0006c0  00000000          DCW      0x0000,0x0000
0006c4  00000000          DCW      0x0000,0x0000
                          DCD      0x00000009
                          DCD      0x00000000
                          DCD      0x00000001
0006d4  30390000          DCB      0x30,0x39,0x00,0x00
                          %        16
0006e8  30390000          DCB      0x30,0x39,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000708  00000000          DCW      0x0000,0x0000
00070c  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000a
                          DCD      0x00000000
                          DCD      0x00000001
00071c  31300000          DCB      0x31,0x30,0x00,0x00
                          %        16
000730  31300000          DCB      0x31,0x30,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000750  00000000          DCW      0x0000,0x0000
000754  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000b
                          DCD      0x00000000
                          DCD      0x00000001
000764  31310000          DCB      0x31,0x31,0x00,0x00
                          %        16
000778  31310000          DCB      0x31,0x31,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
000798  00000000          DCW      0x0000,0x0000
00079c  00000000          DCW      0x0000,0x0000
                          DCD      0x0000000c
                          DCD      0x00000000
                          DCD      0x00000001
0007ac  31320000          DCB      0x31,0x32,0x00,0x00
                          %        16
0007c0  31320000          DCB      0x31,0x32,0x00,0x00
                          %        16
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
0007e0  00000000          DCW      0x0000,0x0000
0007e4  00000000          DCW      0x0000,0x0000
                  sloc
                          DCD      0x00000400
                          DCD      0x00000400
                          DCD      0x00000400
                          DCD      0x00000400
                  slistSYSinfo
0007f8  00e58685          DCB      0x00,0xe5,0x86,0x85
0007fc  e998bbe6          DCB      0xe9,0x98,0xbb,0xe6
000800  b58be8af          DCB      0xb5,0x8b,0xe8,0xaf
000804  95000000          DCB      0x95,0x00,0x00,0x00
                          DCD      0x00000000
00080c  00492e52          DCB      0x00,0x49,0x2e,0x52
000810  2e205445          DCB      0x2e,0x20,0x54,0x45
000814  53540000          DCB      0x53,0x54,0x00,0x00
                          %        8
000820  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000902
000830  00e7a88b          DCB      0x00,0xe7,0xa8,0x8b
000834  e68ea7e7          DCB      0xe6,0x8e,0xa7,0xe7
000838  94b5e6ba          DCB      0x94,0xb5,0xe6,0xba
00083c  90000000          DCB      0x90,0x00,0x00,0x00
                          DCD      0x00000000
000844  00504f57          DCB      0x00,0x50,0x4f,0x57
000848  45520000          DCB      0x45,0x52,0x00,0x00
                          %        12
000858  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000903
000868  00e7a88b          DCB      0x00,0xe7,0xa8,0x8b
00086c  e68ea7e8          DCB      0xe6,0x8e,0xa7,0xe8
000870  b49fe8bd          DCB      0xb4,0x9f,0xe8,0xbd
000874  bd000000          DCB      0xbd,0x00,0x00,0x00
                          DCD      0x00000000
00087c  004c4f41          DCB      0x00,0x4c,0x4f,0x41
000880  44000000          DCB      0x44,0x00,0x00,0x00
                          %        12
000890  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000904
0008a0  00e58585          DCB      0x00,0xe5,0x85,0x85
0008a4  e694bee7          DCB      0xe6,0x94,0xbe,0xe7
0008a8  94b50000          DCB      0x94,0xb5,0x00,0x00
                          %        8
0008b4  00432644          DCB      0x00,0x43,0x26,0x44
0008b8  43000000          DCB      0x43,0x00,0x00,0x00
                          %        12
0008c8  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000905
0008d8  00e7b3bb          DCB      0x00,0xe7,0xb3,0xbb
0008dc  e7bb9fe8          DCB      0xe7,0xbb,0x9f,0xe8
0008e0  aebee7bd          DCB      0xae,0xbe,0xe7,0xbd
0008e4  ae000000          DCB      0xae,0x00,0x00,0x00
                          DCD      0x00000000
0008ec  00535953          DCB      0x00,0x53,0x59,0x53
0008f0  54454d00          DCB      0x54,0x45,0x4d,0x00
                          %        12
000900  00000000          DCB      0x00,0x00,0x00,0x00
                          DCD      0x00b22222
                          DCD      0x00000000
                          DCD      0x00000906

;*** Start embedded assembler ***

#line 1 "..\\APP\\sysinfo.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_sysinfo_c_sloc____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_sysinfo_c_sloc____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_sysinfo_c_sloc____REVSH|
#line 144
|__asm___9_sysinfo_c_sloc____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
