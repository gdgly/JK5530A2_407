; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\modbus.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\modbus.d --cpu=Cortex-M4.fp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX -W --omf_browse=..\output\modbus.crf --no_multibyte_chars ..\drive\modbus.c]
                          THUMB

                          AREA ||i.Hardware_CRC||, CODE, READONLY, ALIGN=1

                  Hardware_CRC PROC
;;;1273   //-----------------------------CRC检测--------------------------------------------//
;;;1274   vu16 Hardware_CRC(vu8 *p_buffer,vu8 count)    //CRC16
000000  b503              PUSH     {r0,r1,lr}
;;;1275   {
000002  b082              SUB      sp,sp,#8
000004  4602              MOV      r2,r0
;;;1276   	vu16 CRC_Result=0xffff;
000006  f64f70ff          MOV      r0,#0xffff
00000a  9001              STR      r0,[sp,#4]
;;;1277   	vu8 i;
;;;1278   	if(count==0)
00000c  f89d000c          LDRB     r0,[sp,#0xc]
000010  b908              CBNZ     r0,|L1.22|
;;;1279   	{
;;;1280   		count=1;
000012  2001              MOVS     r0,#1
000014  9003              STR      r0,[sp,#0xc]
                  |L1.22|
;;;1281   	}
;;;1282   	while(count--)
000016  e025              B        |L1.100|
                  |L1.24|
;;;1283   	{
;;;1284   		CRC_Result^=*p_buffer;
000018  7810              LDRB     r0,[r2,#0]
00001a  f8bd1004          LDRH     r1,[sp,#4]
00001e  4048              EORS     r0,r0,r1
000020  9001              STR      r0,[sp,#4]
;;;1285   		for(i=0;i<8;i++)
000022  2000              MOVS     r0,#0
000024  9000              STR      r0,[sp,#0]
000026  e018              B        |L1.90|
                  |L1.40|
;;;1286   		{
;;;1287   			if(CRC_Result&1)
000028  f8bd0004          LDRH     r0,[sp,#4]
00002c  f0000001          AND      r0,r0,#1
000030  b150              CBZ      r0,|L1.72|
;;;1288   			{
;;;1289   				CRC_Result>>=1;
000032  f8bd0004          LDRH     r0,[sp,#4]
000036  1040              ASRS     r0,r0,#1
000038  9001              STR      r0,[sp,#4]
;;;1290   				CRC_Result^=0xA001;
00003a  f8bd0004          LDRH     r0,[sp,#4]
00003e  f24a0101          MOV      r1,#0xa001
000042  4048              EORS     r0,r0,r1
000044  9001              STR      r0,[sp,#4]
000046  e003              B        |L1.80|
                  |L1.72|
;;;1291   			}
;;;1292   			else 
;;;1293   			{
;;;1294   				CRC_Result>>=1;
000048  f8bd0004          LDRH     r0,[sp,#4]
00004c  1040              ASRS     r0,r0,#1
00004e  9001              STR      r0,[sp,#4]
                  |L1.80|
000050  f89d0000          LDRB     r0,[sp,#0]            ;1285
000054  1c40              ADDS     r0,r0,#1              ;1285
000056  b2c0              UXTB     r0,r0                 ;1285
000058  9000              STR      r0,[sp,#0]            ;1285
                  |L1.90|
00005a  f89d0000          LDRB     r0,[sp,#0]            ;1285
00005e  2808              CMP      r0,#8                 ;1285
000060  dbe2              BLT      |L1.40|
;;;1295   			}
;;;1296   		}
;;;1297   		p_buffer++;
000062  1c52              ADDS     r2,r2,#1
                  |L1.100|
000064  f89d000c          LDRB     r0,[sp,#0xc]          ;1282
000068  1e41              SUBS     r1,r0,#1              ;1282
00006a  b2c9              UXTB     r1,r1                 ;1282
00006c  9103              STR      r1,[sp,#0xc]          ;1282
00006e  2800              CMP      r0,#0                 ;1282
000070  d1d2              BNE      |L1.24|
;;;1298   	}
;;;1299   	return CRC_Result;
000072  f8bd0004          LDRH     r0,[sp,#4]
;;;1300   }
000076  b004              ADD      sp,sp,#0x10
000078  bd00              POP      {pc}
                          ENDP


                          AREA ||i.Transformation_ADC||, CODE, READONLY, ALIGN=2

                  Transformation_ADC PROC
;;;911    //===============================AD值转换成测量值============================================//
;;;912    void Transformation_ADC(void)  
000000  b508              PUSH     {r3,lr}
;;;913    {
;;;914    	vu32 var32;
;;;915    	vu32 var32a;
;;;916    /*****************************负载测量电压转换******************************************/
;;;917    	if(CLists.CLOAD_V_SW==0)//低档
000002  48fe              LDR      r0,|L2.1020|
000004  69c0              LDR      r0,[r0,#0x1c]  ; CLists
000006  2800              CMP      r0,#0
000008  d142              BNE      |L2.144|
;;;918    	{
;;;919    		var32 = Vmon_Load_value;
00000a  48fd              LDR      r0,|L2.1024|
00000c  8800              LDRH     r0,[r0,#0]  ; Vmon_Load_value
00000e  9000              STR      r0,[sp,#0]
;;;920    		var32 = var32 * CLists.CREG_Load_CorrectionV_LOW;  
000010  48fa              LDR      r0,|L2.1020|
000012  6c40              LDR      r0,[r0,#0x44]  ; CLists
000014  9900              LDR      r1,[sp,#0]
000016  4348              MULS     r0,r1,r0
000018  9000              STR      r0,[sp,#0]
;;;921    		if ((CLists.CPolar0 & 0x01) == 0x01)		  
00001a  48f8              LDR      r0,|L2.1020|
00001c  f89000cc          LDRB     r0,[r0,#0xcc]  ; CLists
000020  f0000001          AND      r0,r0,#1
000024  b178              CBZ      r0,|L2.70|
;;;922    		{
;;;923    			if (var32 < CLists.CREG_LoadV_Offset_LOW) 
000026  48f5              LDR      r0,|L2.1020|
000028  f8d00088          LDR      r0,[r0,#0x88]  ; CLists
00002c  9900              LDR      r1,[sp,#0]
00002e  4288              CMP      r0,r1
000030  d902              BLS      |L2.56|
;;;924    			{
;;;925    				var32 = 0;
000032  2000              MOVS     r0,#0
000034  9000              STR      r0,[sp,#0]
000036  e00c              B        |L2.82|
                  |L2.56|
;;;926    			}
;;;927    			else var32 = var32 - CLists.CREG_LoadV_Offset_LOW;
000038  48f0              LDR      r0,|L2.1020|
00003a  f8d00088          LDR      r0,[r0,#0x88]  ; CLists
00003e  9900              LDR      r1,[sp,#0]
000040  1a08              SUBS     r0,r1,r0
000042  9000              STR      r0,[sp,#0]
000044  e005              B        |L2.82|
                  |L2.70|
;;;928    		}
;;;929    		else var32 = var32 + CLists.CREG_LoadV_Offset_LOW;
000046  48ed              LDR      r0,|L2.1020|
000048  f8d00088          LDR      r0,[r0,#0x88]  ; CLists
00004c  9900              LDR      r1,[sp,#0]
00004e  4408              ADD      r0,r0,r1
000050  9000              STR      r0,[sp,#0]
                  |L2.82|
;;;930    		var32 = var32 >> 12;
000052  9800              LDR      r0,[sp,#0]
000054  0b00              LSRS     r0,r0,#12
000056  9000              STR      r0,[sp,#0]
;;;931    		if (var32 < 10) var32 = 0;				  //40mV以下清零
000058  9800              LDR      r0,[sp,#0]
00005a  280a              CMP      r0,#0xa
00005c  d201              BCS      |L2.98|
00005e  2000              MOVS     r0,#0
000060  9000              STR      r0,[sp,#0]
                  |L2.98|
;;;932    		CLists.CVoltage = var32;
000062  49e6              LDR      r1,|L2.1020|
000064  9800              LDR      r0,[sp,#0]
000066  62c8              STR      r0,[r1,#0x2c]  ; CLists
;;;933    		DISS_Voltage=CLists.CVoltage;
000068  4608              MOV      r0,r1
00006a  6ac0              LDR      r0,[r0,#0x2c]  ; CLists
00006c  ee000a10          VMOV     s0,r0
000070  eeb80a40          VCVT.F32.U32 s0,s0
000074  48e3              LDR      r0,|L2.1028|
000076  ed800a00          VSTR     s0,[r0,#0]
;;;934    		DISS_Voltage=DISS_Voltage/1000;//计算显示电压
00007a  ed900a00          VLDR     s0,[r0,#0]
00007e  eddf0ae2          VLDR     s1,|L2.1032|
000082  ee801a20          VDIV.F32 s2,s0,s1
000086  ed801a00          VSTR     s2,[r0,#0]
;;;935    // 		if( DISS_Voltage >= 10 ){
;;;936    // 				CLists.CLOAD_V_SW  = 1;
;;;937    // 		}
;;;938    // 	//如果DISS_Voltage的值  >=10 CLists.CLOAD_V_SW  =1
;;;939    		var32 = 0;
00008a  2000              MOVS     r0,#0
00008c  9000              STR      r0,[sp,#0]
00008e  e042              B        |L2.278|
                  |L2.144|
;;;940    	}
;;;941    	else//高档
;;;942    	{
;;;943    		var32 = Vmon_Load_value;
000090  48db              LDR      r0,|L2.1024|
000092  8800              LDRH     r0,[r0,#0]  ; Vmon_Load_value
000094  9000              STR      r0,[sp,#0]
;;;944    		var32 = var32 * CLists.CREG_Load_CorrectionV_HIG;  
000096  48d9              LDR      r0,|L2.1020|
000098  6c80              LDR      r0,[r0,#0x48]  ; CLists
00009a  9900              LDR      r1,[sp,#0]
00009c  4348              MULS     r0,r1,r0
00009e  9000              STR      r0,[sp,#0]
;;;945    		if ((CLists.CPolar0 & 0x04) == 0x04)		  
0000a0  48d6              LDR      r0,|L2.1020|
0000a2  f89000cc          LDRB     r0,[r0,#0xcc]  ; CLists
0000a6  f0000004          AND      r0,r0,#4
0000aa  2804              CMP      r0,#4
0000ac  d10f              BNE      |L2.206|
;;;946    		{
;;;947    			if (var32 < CLists.CREG_LoadV_Offset_HIG) 
0000ae  48d3              LDR      r0,|L2.1020|
0000b0  f8d0008c          LDR      r0,[r0,#0x8c]  ; CLists
0000b4  9900              LDR      r1,[sp,#0]
0000b6  4288              CMP      r0,r1
0000b8  d902              BLS      |L2.192|
;;;948    			{
;;;949    				var32 = 0;
0000ba  2000              MOVS     r0,#0
0000bc  9000              STR      r0,[sp,#0]
0000be  e00c              B        |L2.218|
                  |L2.192|
;;;950    			}
;;;951    			else var32 = var32 - CLists.CREG_LoadV_Offset_HIG;
0000c0  48ce              LDR      r0,|L2.1020|
0000c2  f8d0008c          LDR      r0,[r0,#0x8c]  ; CLists
0000c6  9900              LDR      r1,[sp,#0]
0000c8  1a08              SUBS     r0,r1,r0
0000ca  9000              STR      r0,[sp,#0]
0000cc  e005              B        |L2.218|
                  |L2.206|
;;;952    		}
;;;953    		else var32 = var32 + CLists.CREG_LoadV_Offset_HIG;
0000ce  48cb              LDR      r0,|L2.1020|
0000d0  f8d0008c          LDR      r0,[r0,#0x8c]  ; CLists
0000d4  9900              LDR      r1,[sp,#0]
0000d6  4408              ADD      r0,r0,r1
0000d8  9000              STR      r0,[sp,#0]
                  |L2.218|
;;;954    		var32 = var32 >> 12;
0000da  9800              LDR      r0,[sp,#0]
0000dc  0b00              LSRS     r0,r0,#12
0000de  9000              STR      r0,[sp,#0]
;;;955    		if (var32 < 10) var32 = 0;				  //40mV以下清零
0000e0  9800              LDR      r0,[sp,#0]
0000e2  280a              CMP      r0,#0xa
0000e4  d201              BCS      |L2.234|
0000e6  2000              MOVS     r0,#0
0000e8  9000              STR      r0,[sp,#0]
                  |L2.234|
;;;956    		CLists.CVoltage = var32;
0000ea  49c4              LDR      r1,|L2.1020|
0000ec  9800              LDR      r0,[sp,#0]
0000ee  62c8              STR      r0,[r1,#0x2c]  ; CLists
;;;957    		DISS_Voltage=CLists.CVoltage;
0000f0  4608              MOV      r0,r1
0000f2  6ac0              LDR      r0,[r0,#0x2c]  ; CLists
0000f4  ee000a10          VMOV     s0,r0
0000f8  eeb80a40          VCVT.F32.U32 s0,s0
0000fc  48c1              LDR      r0,|L2.1028|
0000fe  ed800a00          VSTR     s0,[r0,#0]
;;;958    		DISS_Voltage=DISS_Voltage/1000;//计算显示电压
000102  ed900a00          VLDR     s0,[r0,#0]
000106  eddf0ac0          VLDR     s1,|L2.1032|
00010a  ee801a20          VDIV.F32 s2,s0,s1
00010e  ed801a00          VSTR     s2,[r0,#0]
;;;959    // 		if( DISS_Voltage < 12 ){
;;;960    // 				CLists.CLOAD_V_SW  = 0;
;;;961    // 		}
;;;962       //如果DISS_Voltage的值  <12  CLists.CLOAD_V_SW  = 0
;;;963    		var32 = 0;
000112  2000              MOVS     r0,#0
000114  9000              STR      r0,[sp,#0]
                  |L2.278|
;;;964    	}
;;;965    	
;;;966    	/*******************负载测量电流转换**************************************/
;;;967    	if(CLists.CLOAD_I_SW==0)//低档
000116  48b9              LDR      r0,|L2.1020|
000118  6a00              LDR      r0,[r0,#0x20]  ; CLists
00011a  bbe8              CBNZ     r0,|L2.408|
;;;968    	{
;;;969    		var32 = Imon_Load_value;
00011c  48bb              LDR      r0,|L2.1036|
00011e  8800              LDRH     r0,[r0,#0]  ; Imon_Load_value
000120  9000              STR      r0,[sp,#0]
;;;970    		var32 = var32 * CLists.CREG_Load_CorrectionA_LOW;  
000122  48b6              LDR      r0,|L2.1020|
000124  6cc0              LDR      r0,[r0,#0x4c]  ; CLists
000126  9900              LDR      r1,[sp,#0]
000128  4348              MULS     r0,r1,r0
00012a  9000              STR      r0,[sp,#0]
;;;971    		if ((CLists.CPolar2 & 0x01) == 0x01)		  
00012c  48b3              LDR      r0,|L2.1020|
00012e  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
000132  f0000001          AND      r0,r0,#1
000136  b178              CBZ      r0,|L2.344|
;;;972    		{
;;;973    			if (var32 < CLists.CREG_LoadA_Offset_LOW) 
000138  48b0              LDR      r0,|L2.1020|
00013a  f8d00090          LDR      r0,[r0,#0x90]  ; CLists
00013e  9900              LDR      r1,[sp,#0]
000140  4288              CMP      r0,r1
000142  d902              BLS      |L2.330|
;;;974    			{
;;;975    				var32 = 0;
000144  2000              MOVS     r0,#0
000146  9000              STR      r0,[sp,#0]
000148  e00c              B        |L2.356|
                  |L2.330|
;;;976    			}
;;;977    			else var32 = var32 - CLists.CREG_LoadA_Offset_LOW;
00014a  48ac              LDR      r0,|L2.1020|
00014c  f8d00090          LDR      r0,[r0,#0x90]  ; CLists
000150  9900              LDR      r1,[sp,#0]
000152  1a08              SUBS     r0,r1,r0
000154  9000              STR      r0,[sp,#0]
000156  e005              B        |L2.356|
                  |L2.344|
;;;978    		}
;;;979    		else var32 = var32 + CLists.CREG_LoadA_Offset_LOW;
000158  48a8              LDR      r0,|L2.1020|
00015a  f8d00090          LDR      r0,[r0,#0x90]  ; CLists
00015e  9900              LDR      r1,[sp,#0]
000160  4408              ADD      r0,r0,r1
000162  9000              STR      r0,[sp,#0]
                  |L2.356|
;;;980    		var32 = var32 >> 12;
000164  9800              LDR      r0,[sp,#0]
000166  0b00              LSRS     r0,r0,#12
000168  9000              STR      r0,[sp,#0]
;;;981    		CLists.CLaod_Current = var32;
00016a  49a4              LDR      r1,|L2.1020|
00016c  9800              LDR      r0,[sp,#0]
00016e  6348              STR      r0,[r1,#0x34]  ; CLists
;;;982    		DISS_Current=CLists.CLaod_Current;
000170  4608              MOV      r0,r1
000172  6b40              LDR      r0,[r0,#0x34]  ; CLists
000174  ee000a10          VMOV     s0,r0
000178  eeb80a40          VCVT.F32.U32 s0,s0
00017c  48a4              LDR      r0,|L2.1040|
00017e  ed800a00          VSTR     s0,[r0,#0]
;;;983    		DISS_Current=DISS_Current/1000;//计算显示电流
000182  ed900a00          VLDR     s0,[r0,#0]
000186  eddf0aa0          VLDR     s1,|L2.1032|
00018a  ee801a20          VDIV.F32 s2,s0,s1
00018e  ed801a00          VSTR     s2,[r0,#0]
;;;984    		var32 = 0;	
000192  2000              MOVS     r0,#0
000194  9000              STR      r0,[sp,#0]
000196  e03d              B        |L2.532|
                  |L2.408|
000198  e7ff              B        |L2.410|
                  |L2.410|
;;;985    	}
;;;986    	else//高档
;;;987    	{
;;;988    		var32 = Imon_Load_value;
00019a  489c              LDR      r0,|L2.1036|
00019c  8800              LDRH     r0,[r0,#0]  ; Imon_Load_value
00019e  9000              STR      r0,[sp,#0]
;;;989    		var32 = var32 * CLists.CREG_Load_CorrectionA_LOW;  
0001a0  4896              LDR      r0,|L2.1020|
0001a2  6cc0              LDR      r0,[r0,#0x4c]  ; CLists
0001a4  9900              LDR      r1,[sp,#0]
0001a6  4348              MULS     r0,r1,r0
0001a8  9000              STR      r0,[sp,#0]
;;;990    		if ((CLists.CPolar4 & 0x01) == 0x01)		  
0001aa  4894              LDR      r0,|L2.1020|
0001ac  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
0001b0  f0000001          AND      r0,r0,#1
0001b4  b178              CBZ      r0,|L2.470|
;;;991    		{
;;;992    			if (var32 < CLists.CREG_LoadA_Offset_HIG) 
0001b6  4891              LDR      r0,|L2.1020|
0001b8  f8d00094          LDR      r0,[r0,#0x94]  ; CLists
0001bc  9900              LDR      r1,[sp,#0]
0001be  4288              CMP      r0,r1
0001c0  d902              BLS      |L2.456|
;;;993    			{
;;;994    				var32 = 0;
0001c2  2000              MOVS     r0,#0
0001c4  9000              STR      r0,[sp,#0]
0001c6  e00c              B        |L2.482|
                  |L2.456|
;;;995    			}
;;;996    			else var32 = var32 - CLists.CREG_LoadA_Offset_HIG;
0001c8  488c              LDR      r0,|L2.1020|
0001ca  f8d00094          LDR      r0,[r0,#0x94]  ; CLists
0001ce  9900              LDR      r1,[sp,#0]
0001d0  1a08              SUBS     r0,r1,r0
0001d2  9000              STR      r0,[sp,#0]
0001d4  e005              B        |L2.482|
                  |L2.470|
;;;997    		}
;;;998    		else var32 = var32 + CLists.CREG_LoadA_Offset_HIG;
0001d6  4889              LDR      r0,|L2.1020|
0001d8  f8d00094          LDR      r0,[r0,#0x94]  ; CLists
0001dc  9900              LDR      r1,[sp,#0]
0001de  4408              ADD      r0,r0,r1
0001e0  9000              STR      r0,[sp,#0]
                  |L2.482|
;;;999    		var32 = var32 >> 12;
0001e2  9800              LDR      r0,[sp,#0]
0001e4  0b00              LSRS     r0,r0,#12
0001e6  9000              STR      r0,[sp,#0]
;;;1000   		CLists.CLaod_Current = var32;
0001e8  4984              LDR      r1,|L2.1020|
0001ea  9800              LDR      r0,[sp,#0]
0001ec  6348              STR      r0,[r1,#0x34]  ; CLists
;;;1001   		DISS_Current=CLists.CLaod_Current;
0001ee  4608              MOV      r0,r1
0001f0  6b40              LDR      r0,[r0,#0x34]  ; CLists
0001f2  ee000a10          VMOV     s0,r0
0001f6  eeb80a40          VCVT.F32.U32 s0,s0
0001fa  4885              LDR      r0,|L2.1040|
0001fc  ed800a00          VSTR     s0,[r0,#0]
;;;1002   		DISS_Current=DISS_Current/1000;//计算显示电流
000200  ed900a00          VLDR     s0,[r0,#0]
000204  eddf0a80          VLDR     s1,|L2.1032|
000208  ee801a20          VDIV.F32 s2,s0,s1
00020c  ed801a00          VSTR     s2,[r0,#0]
;;;1003   		var32 = 0;
000210  2000              MOVS     r0,#0
000212  9000              STR      r0,[sp,#0]
                  |L2.532|
;;;1004   	}
;;;1005   	
;;;1006   	/*************************负载电压和电流控制转换**************************************/
;;;1007   	if(CLists.CLOAD_MODE==0)//CC
000214  4879              LDR      r0,|L2.1020|
000216  6980              LDR      r0,[r0,#0x18]  ; CLists
000218  2800              CMP      r0,#0
00021a  d170              BNE      |L2.766|
;;;1008   	{
;;;1009   		if(CLists.CLOAD_I_SW==0)//低档
00021c  4877              LDR      r0,|L2.1020|
00021e  6a00              LDR      r0,[r0,#0x20]  ; CLists
000220  bba8              CBNZ     r0,|L2.654|
;;;1010   		{
;;;1011   			var32 = CLists.CSET_Current_Laod;
000222  4876              LDR      r0,|L2.1020|
000224  6940              LDR      r0,[r0,#0x14]  ; CLists
000226  9000              STR      r0,[sp,#0]
;;;1012   			var32=var32<<12;   
000228  9800              LDR      r0,[sp,#0]
00022a  0300              LSLS     r0,r0,#12
00022c  9000              STR      r0,[sp,#0]
;;;1013   			if ((CLists.CPolar2 & 0x04) == 0)			   
00022e  4873              LDR      r0,|L2.1020|
000230  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
000234  f0000004          AND      r0,r0,#4
000238  b978              CBNZ     r0,|L2.602|
;;;1014   			{
;;;1015   				if (var32 < CLists.CSET_LoadA_Offset_LOW) var32 = 0;
00023a  4870              LDR      r0,|L2.1020|
00023c  f8d000a0          LDR      r0,[r0,#0xa0]  ; CLists
000240  9900              LDR      r1,[sp,#0]
000242  4288              CMP      r0,r1
000244  d902              BLS      |L2.588|
000246  2000              MOVS     r0,#0
000248  9000              STR      r0,[sp,#0]
00024a  e00c              B        |L2.614|
                  |L2.588|
;;;1016   				else var32 = var32 - CLists.CSET_LoadA_Offset_LOW;
00024c  486b              LDR      r0,|L2.1020|
00024e  f8d000a0          LDR      r0,[r0,#0xa0]  ; CLists
000252  9900              LDR      r1,[sp,#0]
000254  1a08              SUBS     r0,r1,r0
000256  9000              STR      r0,[sp,#0]
000258  e005              B        |L2.614|
                  |L2.602|
;;;1017   			}
;;;1018   			else var32 = var32 + CLists.CSET_LoadA_Offset_LOW;
00025a  4868              LDR      r0,|L2.1020|
00025c  f8d000a0          LDR      r0,[r0,#0xa0]  ; CLists
000260  9900              LDR      r1,[sp,#0]
000262  4408              ADD      r0,r0,r1
000264  9000              STR      r0,[sp,#0]
                  |L2.614|
;;;1019   			var32 = var32/CLists.CSET_Load_CorrectionA_LOW;
000266  4865              LDR      r0,|L2.1020|
000268  6dc0              LDR      r0,[r0,#0x5c]  ; CLists
00026a  9900              LDR      r1,[sp,#0]
00026c  fbb1f0f0          UDIV     r0,r1,r0
000270  9000              STR      r0,[sp,#0]
;;;1020   			var32=var32>>1;
000272  9800              LDR      r0,[sp,#0]
000274  0840              LSRS     r0,r0,#1
000276  9000              STR      r0,[sp,#0]
;;;1021   			Contr_Laod = var32;
000278  4966              LDR      r1,|L2.1044|
00027a  9800              LDR      r0,[sp,#0]
00027c  8008              STRH     r0,[r1,#0]
;;;1022   			if(CLists.CSET_Current_Laod==0)
00027e  485f              LDR      r0,|L2.1020|
000280  6940              LDR      r0,[r0,#0x14]  ; CLists
000282  b908              CBNZ     r0,|L2.648|
;;;1023   			{
;;;1024   				Contr_Laod=0;
000284  2000              MOVS     r0,#0
000286  8008              STRH     r0,[r1,#0]
                  |L2.648|
;;;1025   			}
;;;1026   			var32 = 0;
000288  2000              MOVS     r0,#0
00028a  9000              STR      r0,[sp,#0]
00028c  e0aa              B        |L2.996|
                  |L2.654|
00028e  e7ff              B        |L2.656|
                  |L2.656|
;;;1027   		}
;;;1028   		else//高档
;;;1029   		{
;;;1030   			var32 = CLists.CSET_Current_Laod;
000290  485a              LDR      r0,|L2.1020|
000292  6940              LDR      r0,[r0,#0x14]  ; CLists
000294  9000              STR      r0,[sp,#0]
;;;1031   			var32=var32<<12;   
000296  9800              LDR      r0,[sp,#0]
000298  0300              LSLS     r0,r0,#12
00029a  9000              STR      r0,[sp,#0]
;;;1032   			if ((CLists.CPolar3 & 0x04) == 0)			   
00029c  4857              LDR      r0,|L2.1020|
00029e  f89000cf          LDRB     r0,[r0,#0xcf]  ; CLists
0002a2  f0000004          AND      r0,r0,#4
0002a6  b978              CBNZ     r0,|L2.712|
;;;1033   			{
;;;1034   				if (var32 < CLists.CSET_LoadA_Offset_HIG) var32 = 0;
0002a8  4854              LDR      r0,|L2.1020|
0002aa  f8d000a4          LDR      r0,[r0,#0xa4]  ; CLists
0002ae  9900              LDR      r1,[sp,#0]
0002b0  4288              CMP      r0,r1
0002b2  d902              BLS      |L2.698|
0002b4  2000              MOVS     r0,#0
0002b6  9000              STR      r0,[sp,#0]
0002b8  e00c              B        |L2.724|
                  |L2.698|
;;;1035   				else var32 = var32 - CLists.CSET_LoadA_Offset_HIG;
0002ba  4850              LDR      r0,|L2.1020|
0002bc  f8d000a4          LDR      r0,[r0,#0xa4]  ; CLists
0002c0  9900              LDR      r1,[sp,#0]
0002c2  1a08              SUBS     r0,r1,r0
0002c4  9000              STR      r0,[sp,#0]
0002c6  e005              B        |L2.724|
                  |L2.712|
;;;1036   			}
;;;1037   			else var32 = var32 + CLists.CSET_LoadA_Offset_HIG;
0002c8  484c              LDR      r0,|L2.1020|
0002ca  f8d000a4          LDR      r0,[r0,#0xa4]  ; CLists
0002ce  9900              LDR      r1,[sp,#0]
0002d0  4408              ADD      r0,r0,r1
0002d2  9000              STR      r0,[sp,#0]
                  |L2.724|
;;;1038   			var32 = var32/CLists.CSET_Load_CorrectionA_HIG;
0002d4  4849              LDR      r0,|L2.1020|
0002d6  6e00              LDR      r0,[r0,#0x60]  ; CLists
0002d8  9900              LDR      r1,[sp,#0]
0002da  fbb1f0f0          UDIV     r0,r1,r0
0002de  9000              STR      r0,[sp,#0]
;;;1039   			var32=var32>>1;
0002e0  9800              LDR      r0,[sp,#0]
0002e2  0840              LSRS     r0,r0,#1
0002e4  9000              STR      r0,[sp,#0]
;;;1040   			Contr_Laod = var32;
0002e6  494b              LDR      r1,|L2.1044|
0002e8  9800              LDR      r0,[sp,#0]
0002ea  8008              STRH     r0,[r1,#0]
;;;1041   			if(CLists.CSET_Current_Laod==0)
0002ec  4843              LDR      r0,|L2.1020|
0002ee  6940              LDR      r0,[r0,#0x14]  ; CLists
0002f0  b908              CBNZ     r0,|L2.758|
;;;1042   			{
;;;1043   				Contr_Laod=0;
0002f2  2000              MOVS     r0,#0
0002f4  8008              STRH     r0,[r1,#0]
                  |L2.758|
;;;1044   			}
;;;1045   			var32 = 0;
0002f6  2000              MOVS     r0,#0
0002f8  9000              STR      r0,[sp,#0]
0002fa  e073              B        |L2.996|
0002fc  e7ff              B        |L2.766|
                  |L2.766|
;;;1046   		}
;;;1047   		
;;;1048   	}
;;;1049   	else if(CLists.CLOAD_MODE==1)//CV
0002fe  483f              LDR      r0,|L2.1020|
000300  6980              LDR      r0,[r0,#0x18]  ; CLists
000302  2801              CMP      r0,#1
000304  d16e              BNE      |L2.996|
;;;1050   	{
;;;1051   		if(CLists.CLOAD_V_SW==0)//低档
000306  483d              LDR      r0,|L2.1020|
000308  69c0              LDR      r0,[r0,#0x1c]  ; CLists
00030a  bba8              CBNZ     r0,|L2.888|
;;;1052   		{
;;;1053   			var32 = CLists.CSET_Voltage_Laod;
00030c  483b              LDR      r0,|L2.1020|
00030e  6900              LDR      r0,[r0,#0x10]  ; CLists
000310  9000              STR      r0,[sp,#0]
;;;1054   			var32=var32<<12;   
000312  9800              LDR      r0,[sp,#0]
000314  0300              LSLS     r0,r0,#12
000316  9000              STR      r0,[sp,#0]
;;;1055   			if ((CLists.CPolar2 & 0x04) == 0)			   
000318  4838              LDR      r0,|L2.1020|
00031a  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
00031e  f0000004          AND      r0,r0,#4
000322  b978              CBNZ     r0,|L2.836|
;;;1056   			{
;;;1057   				if (var32 < CLists.CSET_LoadV_Offset_LOW) var32 = 0;
000324  4835              LDR      r0,|L2.1020|
000326  f8d00098          LDR      r0,[r0,#0x98]  ; CLists
00032a  9900              LDR      r1,[sp,#0]
00032c  4288              CMP      r0,r1
00032e  d902              BLS      |L2.822|
000330  2000              MOVS     r0,#0
000332  9000              STR      r0,[sp,#0]
000334  e00c              B        |L2.848|
                  |L2.822|
;;;1058   				else var32 = var32 - CLists.CSET_LoadV_Offset_LOW;
000336  4831              LDR      r0,|L2.1020|
000338  f8d00098          LDR      r0,[r0,#0x98]  ; CLists
00033c  9900              LDR      r1,[sp,#0]
00033e  1a08              SUBS     r0,r1,r0
000340  9000              STR      r0,[sp,#0]
000342  e005              B        |L2.848|
                  |L2.836|
;;;1059   			}
;;;1060   			else var32 = var32 + CLists.CSET_LoadV_Offset_LOW;
000344  482d              LDR      r0,|L2.1020|
000346  f8d00098          LDR      r0,[r0,#0x98]  ; CLists
00034a  9900              LDR      r1,[sp,#0]
00034c  4408              ADD      r0,r0,r1
00034e  9000              STR      r0,[sp,#0]
                  |L2.848|
;;;1061   			var32 = var32/CLists.CSET_Load_CorrectionV_LOW;
000350  482a              LDR      r0,|L2.1020|
000352  6d40              LDR      r0,[r0,#0x54]  ; CLists
000354  9900              LDR      r1,[sp,#0]
000356  fbb1f0f0          UDIV     r0,r1,r0
00035a  9000              STR      r0,[sp,#0]
;;;1062   			var32=var32>>1;
00035c  9800              LDR      r0,[sp,#0]
00035e  0840              LSRS     r0,r0,#1
000360  9000              STR      r0,[sp,#0]
;;;1063   			Contr_Laod = var32;
000362  492c              LDR      r1,|L2.1044|
000364  9800              LDR      r0,[sp,#0]
000366  8008              STRH     r0,[r1,#0]
;;;1064   			if(CLists.CSET_Voltage_Laod==0)
000368  4824              LDR      r0,|L2.1020|
00036a  6900              LDR      r0,[r0,#0x10]  ; CLists
00036c  b908              CBNZ     r0,|L2.882|
;;;1065   			{
;;;1066   				Contr_Laod=0;
00036e  2000              MOVS     r0,#0
000370  8008              STRH     r0,[r1,#0]
                  |L2.882|
;;;1067   			}
;;;1068   			var32 = 0;
000372  2000              MOVS     r0,#0
000374  9000              STR      r0,[sp,#0]
000376  e035              B        |L2.996|
                  |L2.888|
000378  e7ff              B        |L2.890|
                  |L2.890|
;;;1069   		}
;;;1070   		else//高档
;;;1071   		{
;;;1072   			var32 = CLists.CSET_Voltage_Laod;
00037a  4820              LDR      r0,|L2.1020|
00037c  6900              LDR      r0,[r0,#0x10]  ; CLists
00037e  9000              STR      r0,[sp,#0]
;;;1073   			var32=var32<<12;   
000380  9800              LDR      r0,[sp,#0]
000382  0300              LSLS     r0,r0,#12
000384  9000              STR      r0,[sp,#0]
;;;1074   			if ((CLists.CPolar2 & 0x04) == 0)			   
000386  481d              LDR      r0,|L2.1020|
000388  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
00038c  f0000004          AND      r0,r0,#4
000390  b978              CBNZ     r0,|L2.946|
;;;1075   			{
;;;1076   				if (var32 < CLists.CSET_LoadV_Offset_HIG) var32 = 0;
000392  481a              LDR      r0,|L2.1020|
000394  f8d0009c          LDR      r0,[r0,#0x9c]  ; CLists
000398  9900              LDR      r1,[sp,#0]
00039a  4288              CMP      r0,r1
00039c  d902              BLS      |L2.932|
00039e  2000              MOVS     r0,#0
0003a0  9000              STR      r0,[sp,#0]
0003a2  e00c              B        |L2.958|
                  |L2.932|
;;;1077   				else var32 = var32 - CLists.CSET_LoadV_Offset_HIG;
0003a4  4815              LDR      r0,|L2.1020|
0003a6  f8d0009c          LDR      r0,[r0,#0x9c]  ; CLists
0003aa  9900              LDR      r1,[sp,#0]
0003ac  1a08              SUBS     r0,r1,r0
0003ae  9000              STR      r0,[sp,#0]
0003b0  e005              B        |L2.958|
                  |L2.946|
;;;1078   			}
;;;1079   			else var32 = var32 + CLists.CSET_LoadV_Offset_HIG;
0003b2  4812              LDR      r0,|L2.1020|
0003b4  f8d0009c          LDR      r0,[r0,#0x9c]  ; CLists
0003b8  9900              LDR      r1,[sp,#0]
0003ba  4408              ADD      r0,r0,r1
0003bc  9000              STR      r0,[sp,#0]
                  |L2.958|
;;;1080   			var32 = var32/CLists.CSET_Load_CorrectionV_HIG;
0003be  480f              LDR      r0,|L2.1020|
0003c0  6d80              LDR      r0,[r0,#0x58]  ; CLists
0003c2  9900              LDR      r1,[sp,#0]
0003c4  fbb1f0f0          UDIV     r0,r1,r0
0003c8  9000              STR      r0,[sp,#0]
;;;1081   			var32=var32>>1;
0003ca  9800              LDR      r0,[sp,#0]
0003cc  0840              LSRS     r0,r0,#1
0003ce  9000              STR      r0,[sp,#0]
;;;1082   			Contr_Laod = var32;
0003d0  4910              LDR      r1,|L2.1044|
0003d2  9800              LDR      r0,[sp,#0]
0003d4  8008              STRH     r0,[r1,#0]
;;;1083   			if(CLists.CSET_Voltage_Laod==0)
0003d6  4809              LDR      r0,|L2.1020|
0003d8  6900              LDR      r0,[r0,#0x10]  ; CLists
0003da  b908              CBNZ     r0,|L2.992|
;;;1084   			{
;;;1085   				Contr_Laod=0;
0003dc  2000              MOVS     r0,#0
0003de  8008              STRH     r0,[r1,#0]
                  |L2.992|
;;;1086   			}
;;;1087   			var32 = 0;
0003e0  2000              MOVS     r0,#0
0003e2  9000              STR      r0,[sp,#0]
                  |L2.996|
;;;1088   		}
;;;1089   		
;;;1090   	}
;;;1091   /*****************************内阻值转换*******************************************/
;;;1092   	if(CLists.CRCONT_SW==0)//低档
0003e4  4805              LDR      r0,|L2.1020|
0003e6  6a40              LDR      r0,[r0,#0x24]  ; CLists
0003e8  bbf0              CBNZ     r0,|L2.1128|
;;;1093   	{
;;;1094   		var32 = Rmon_value;
0003ea  480b              LDR      r0,|L2.1048|
0003ec  8800              LDRH     r0,[r0,#0]  ; Rmon_value
0003ee  9000              STR      r0,[sp,#0]
;;;1095   		var32 = var32 * CLists.CREG_CorrectionR_LOW;  
0003f0  4802              LDR      r0,|L2.1020|
0003f2  6f80              LDR      r0,[r0,#0x78]  ; CLists
0003f4  9900              LDR      r1,[sp,#0]
0003f6  4348              MULS     r0,r1,r0
0003f8  9000              STR      r0,[sp,#0]
;;;1096   		if ((CLists.CPolar4 & 0x01) == 0x01)		  
0003fa  e00f              B        |L2.1052|
                  |L2.1020|
                          DCD      CLists
                  |L2.1024|
                          DCD      Vmon_Load_value
                  |L2.1028|
                          DCD      DISS_Voltage
                  |L2.1032|
000408  447a0000          DCFS     0x447a0000 ; 1000
                  |L2.1036|
                          DCD      Imon_Load_value
                  |L2.1040|
                          DCD      DISS_Current
                  |L2.1044|
                          DCD      Contr_Laod
                  |L2.1048|
                          DCD      Rmon_value
                  |L2.1052|
00041c  48f8              LDR      r0,|L2.2048|
00041e  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
000422  f0000001          AND      r0,r0,#1
000426  b178              CBZ      r0,|L2.1096|
;;;1097   		{
;;;1098   			if (var32 < CLists.CREG_ReadR_Offset_LOW) 
000428  48f5              LDR      r0,|L2.2048|
00042a  f8d000bc          LDR      r0,[r0,#0xbc]  ; CLists
00042e  9900              LDR      r1,[sp,#0]
000430  4288              CMP      r0,r1
000432  d902              BLS      |L2.1082|
;;;1099   			{
;;;1100   				var32 = 0;
000434  2000              MOVS     r0,#0
000436  9000              STR      r0,[sp,#0]
000438  e00c              B        |L2.1108|
                  |L2.1082|
;;;1101   			}
;;;1102   			else var32 = var32 - CLists.CREG_ReadR_Offset_LOW;
00043a  48f1              LDR      r0,|L2.2048|
00043c  f8d000bc          LDR      r0,[r0,#0xbc]  ; CLists
000440  9900              LDR      r1,[sp,#0]
000442  1a08              SUBS     r0,r1,r0
000444  9000              STR      r0,[sp,#0]
000446  e005              B        |L2.1108|
                  |L2.1096|
;;;1103   		}
;;;1104   		else var32 = var32 + CLists.CREG_ReadR_Offset_LOW;
000448  48ed              LDR      r0,|L2.2048|
00044a  f8d000bc          LDR      r0,[r0,#0xbc]  ; CLists
00044e  9900              LDR      r1,[sp,#0]
000450  4408              ADD      r0,r0,r1
000452  9000              STR      r0,[sp,#0]
                  |L2.1108|
;;;1105   		var32 = var32 >> 12;
000454  9800              LDR      r0,[sp,#0]
000456  0b00              LSRS     r0,r0,#12
000458  9000              STR      r0,[sp,#0]
;;;1106   		if (var32 < 1)
00045a  9800              LDR      r0,[sp,#0]
00045c  b908              CBNZ     r0,|L2.1122|
;;;1107   		{
;;;1108   			var32 = 0;				  //清零
00045e  2000              MOVS     r0,#0
000460  9000              STR      r0,[sp,#0]
                  |L2.1122|
;;;1109   		}
;;;1110   		CLists.CR_VLUE = var32;
000462  49e7              LDR      r1,|L2.2048|
000464  9800              LDR      r0,[sp,#0]
000466  e000              B        |L2.1130|
                  |L2.1128|
000468  e003              B        |L2.1138|
                  |L2.1130|
00046a  6388              STR      r0,[r1,#0x38]  ; CLists
;;;1111   		var32 = 0;	
00046c  2000              MOVS     r0,#0
00046e  9000              STR      r0,[sp,#0]
000470  e030              B        |L2.1236|
                  |L2.1138|
;;;1112   	}
;;;1113   	else//高档
;;;1114   	{
;;;1115   		var32 = Rmon_value;
000472  48e4              LDR      r0,|L2.2052|
000474  8800              LDRH     r0,[r0,#0]  ; Rmon_value
000476  9000              STR      r0,[sp,#0]
;;;1116   		var32 = var32 * CLists.CREG_CorrectionR_HIG;  
000478  48e1              LDR      r0,|L2.2048|
00047a  6fc0              LDR      r0,[r0,#0x7c]  ; CLists
00047c  9900              LDR      r1,[sp,#0]
00047e  4348              MULS     r0,r1,r0
000480  9000              STR      r0,[sp,#0]
;;;1117   		if ((CLists.CPolar4 & 0x04) == 0x04)		  
000482  48df              LDR      r0,|L2.2048|
000484  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
000488  f0000004          AND      r0,r0,#4
00048c  2804              CMP      r0,#4
00048e  d10f              BNE      |L2.1200|
;;;1118   		{
;;;1119   			if (var32 < CLists.CREG_ReadR_Offset_HIG) 
000490  48db              LDR      r0,|L2.2048|
000492  f8d000c0          LDR      r0,[r0,#0xc0]  ; CLists
000496  9900              LDR      r1,[sp,#0]
000498  4288              CMP      r0,r1
00049a  d902              BLS      |L2.1186|
;;;1120   			{
;;;1121   				var32 = 0;
00049c  2000              MOVS     r0,#0
00049e  9000              STR      r0,[sp,#0]
0004a0  e00c              B        |L2.1212|
                  |L2.1186|
;;;1122   			}
;;;1123   			else var32 = var32 - CLists.CREG_ReadR_Offset_HIG;
0004a2  48d7              LDR      r0,|L2.2048|
0004a4  f8d000c0          LDR      r0,[r0,#0xc0]  ; CLists
0004a8  9900              LDR      r1,[sp,#0]
0004aa  1a08              SUBS     r0,r1,r0
0004ac  9000              STR      r0,[sp,#0]
0004ae  e005              B        |L2.1212|
                  |L2.1200|
;;;1124   		}
;;;1125   		else var32 = var32 + CLists.CREG_ReadR_Offset_HIG;
0004b0  48d3              LDR      r0,|L2.2048|
0004b2  f8d000c0          LDR      r0,[r0,#0xc0]  ; CLists
0004b6  9900              LDR      r1,[sp,#0]
0004b8  4408              ADD      r0,r0,r1
0004ba  9000              STR      r0,[sp,#0]
                  |L2.1212|
;;;1126   		var32 = var32 >> 12;
0004bc  9800              LDR      r0,[sp,#0]
0004be  0b00              LSRS     r0,r0,#12
0004c0  9000              STR      r0,[sp,#0]
;;;1127   		if (var32 < 1)
0004c2  9800              LDR      r0,[sp,#0]
0004c4  b908              CBNZ     r0,|L2.1226|
;;;1128   		{
;;;1129   			var32 = 0;				  //清零
0004c6  2000              MOVS     r0,#0
0004c8  9000              STR      r0,[sp,#0]
                  |L2.1226|
;;;1130   		}
;;;1131   		CLists.CR_VLUE = var32;
0004ca  49cd              LDR      r1,|L2.2048|
0004cc  9800              LDR      r0,[sp,#0]
0004ce  6388              STR      r0,[r1,#0x38]  ; CLists
;;;1132   		var32 = 0;	
0004d0  2000              MOVS     r0,#0
0004d2  9000              STR      r0,[sp,#0]
                  |L2.1236|
;;;1133   	}
;;;1134   	
;;;1135   	/*****************************稳压电源测量电压转换*******************************************/
;;;1136   	var32 = Vmon_POWE_value;
0004d4  48cc              LDR      r0,|L2.2056|
0004d6  8800              LDRH     r0,[r0,#0]  ; Vmon_POWE_value
0004d8  9000              STR      r0,[sp,#0]
;;;1137   	var32 = var32 * CLists.CREG_POWER_CorrectionV;  
0004da  48c9              LDR      r0,|L2.2048|
0004dc  6e40              LDR      r0,[r0,#0x64]  ; CLists
0004de  9900              LDR      r1,[sp,#0]
0004e0  4348              MULS     r0,r1,r0
0004e2  9000              STR      r0,[sp,#0]
;;;1138   	if ((CLists.CPolar5 & 0x01) == 0x01)		  
0004e4  48c6              LDR      r0,|L2.2048|
0004e6  f89000d1          LDRB     r0,[r0,#0xd1]  ; CLists
0004ea  f0000001          AND      r0,r0,#1
0004ee  b178              CBZ      r0,|L2.1296|
;;;1139   	{
;;;1140   		if (var32 < CLists.CREG_POWERV_Offset) 
0004f0  48c3              LDR      r0,|L2.2048|
0004f2  f8d000a8          LDR      r0,[r0,#0xa8]  ; CLists
0004f6  9900              LDR      r1,[sp,#0]
0004f8  4288              CMP      r0,r1
0004fa  d902              BLS      |L2.1282|
;;;1141   		{
;;;1142   			var32 = 0;
0004fc  2000              MOVS     r0,#0
0004fe  9000              STR      r0,[sp,#0]
000500  e00c              B        |L2.1308|
                  |L2.1282|
;;;1143   		}
;;;1144   		else var32 = var32 - CLists.CREG_POWERV_Offset;
000502  48bf              LDR      r0,|L2.2048|
000504  f8d000a8          LDR      r0,[r0,#0xa8]  ; CLists
000508  9900              LDR      r1,[sp,#0]
00050a  1a08              SUBS     r0,r1,r0
00050c  9000              STR      r0,[sp,#0]
00050e  e005              B        |L2.1308|
                  |L2.1296|
;;;1145   	}
;;;1146   	else var32 = var32 + CLists.CREG_POWERV_Offset;
000510  48bb              LDR      r0,|L2.2048|
000512  f8d000a8          LDR      r0,[r0,#0xa8]  ; CLists
000516  9900              LDR      r1,[sp,#0]
000518  4408              ADD      r0,r0,r1
00051a  9000              STR      r0,[sp,#0]
                  |L2.1308|
;;;1147   	var32 = var32 >> 12;
00051c  9800              LDR      r0,[sp,#0]
00051e  0b00              LSRS     r0,r0,#12
000520  9000              STR      r0,[sp,#0]
;;;1148   	if (var32 < 40) var32 = 0;				  //40mV以下清零
000522  9800              LDR      r0,[sp,#0]
000524  2828              CMP      r0,#0x28
000526  d201              BCS      |L2.1324|
000528  2000              MOVS     r0,#0
00052a  9000              STR      r0,[sp,#0]
                  |L2.1324|
;;;1149   	CLists.CPOW_Voltage = var32;
00052c  49b4              LDR      r1,|L2.2048|
00052e  9800              LDR      r0,[sp,#0]
000530  6288              STR      r0,[r1,#0x28]  ; CLists
;;;1150   	DISS_POW_Voltage=CLists.CPOW_Voltage;
000532  4608              MOV      r0,r1
000534  6a80              LDR      r0,[r0,#0x28]  ; CLists
000536  ee000a10          VMOV     s0,r0
00053a  eeb80a40          VCVT.F32.U32 s0,s0
00053e  48b3              LDR      r0,|L2.2060|
000540  ed800a00          VSTR     s0,[r0,#0]
;;;1151   	DISS_POW_Voltage=DISS_POW_Voltage/1000;//计算显示电压
000544  ed900a00          VLDR     s0,[r0,#0]
000548  ed5f0a51          VLDR     s1,|L2.1032|
00054c  ee801a20          VDIV.F32 s2,s0,s1
000550  ed801a00          VSTR     s2,[r0,#0]
;;;1152   	var32 = 0;
000554  2000              MOVS     r0,#0
000556  9000              STR      r0,[sp,#0]
;;;1153   /*****************************稳压电源测量电流转换*******************************************/
;;;1154   	var32 = Imon_POWE_value;
000558  48ad              LDR      r0,|L2.2064|
00055a  8800              LDRH     r0,[r0,#0]  ; Imon_POWE_value
00055c  9000              STR      r0,[sp,#0]
;;;1155   	if(flag_CC_MODE==1)
00055e  48ad              LDR      r0,|L2.2068|
000560  7800              LDRB     r0,[r0,#0]  ; flagE
000562  f3c010c0          UBFX     r0,r0,#7,#1
000566  b3c0              CBZ      r0,|L2.1498|
;;;1156   	{
;;;1157   		var32 = var32 * CLists.CREG_POWER_CorrectionA_CC;	   
000568  4608              MOV      r0,r1
00056a  6e80              LDR      r0,[r0,#0x68]  ; CLists
00056c  9900              LDR      r1,[sp,#0]
00056e  4348              MULS     r0,r1,r0
000570  9000              STR      r0,[sp,#0]
;;;1158   		if ((CLists.CPolar6 & 0x01) == 0x01)			   
000572  48a3              LDR      r0,|L2.2048|
000574  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
000578  f0000001          AND      r0,r0,#1
00057c  b178              CBZ      r0,|L2.1438|
;;;1159   		{
;;;1160   			if (var32 < CLists.CREG_POWERA_Offset_CC) var32 = 0;
00057e  48a0              LDR      r0,|L2.2048|
000580  f8d000ac          LDR      r0,[r0,#0xac]  ; CLists
000584  9900              LDR      r1,[sp,#0]
000586  4288              CMP      r0,r1
000588  d902              BLS      |L2.1424|
00058a  2000              MOVS     r0,#0
00058c  9000              STR      r0,[sp,#0]
00058e  e00c              B        |L2.1450|
                  |L2.1424|
;;;1161   			else var32 = var32 - CLists.CREG_POWERA_Offset_CC;
000590  489b              LDR      r0,|L2.2048|
000592  f8d000ac          LDR      r0,[r0,#0xac]  ; CLists
000596  9900              LDR      r1,[sp,#0]
000598  1a08              SUBS     r0,r1,r0
00059a  9000              STR      r0,[sp,#0]
00059c  e005              B        |L2.1450|
                  |L2.1438|
;;;1162   		}
;;;1163   		else
;;;1164   		{
;;;1165   			var32 = var32 + CLists.CREG_POWERA_Offset_CC;
00059e  4898              LDR      r0,|L2.2048|
0005a0  f8d000ac          LDR      r0,[r0,#0xac]  ; CLists
0005a4  9900              LDR      r1,[sp,#0]
0005a6  4408              ADD      r0,r0,r1
0005a8  9000              STR      r0,[sp,#0]
                  |L2.1450|
;;;1166   		}	
;;;1167   		var32 = var32 >> 12;
0005aa  9800              LDR      r0,[sp,#0]
0005ac  0b00              LSRS     r0,r0,#12
0005ae  9000              STR      r0,[sp,#0]
;;;1168   		CLists.CCurrent = var32;;
0005b0  4993              LDR      r1,|L2.2048|
0005b2  9800              LDR      r0,[sp,#0]
0005b4  6308              STR      r0,[r1,#0x30]  ; CLists
;;;1169   		DISS_POW_Current=CLists.CCurrent;
0005b6  4608              MOV      r0,r1
0005b8  6b00              LDR      r0,[r0,#0x30]  ; CLists
0005ba  ee000a10          VMOV     s0,r0
0005be  eeb80a40          VCVT.F32.U32 s0,s0
0005c2  4895              LDR      r0,|L2.2072|
0005c4  ed800a00          VSTR     s0,[r0,#0]
;;;1170   		DISS_POW_Current=DISS_POW_Current/1000;//计算显示电流
0005c8  ed900a00          VLDR     s0,[r0,#0]
0005cc  ed5f0a72          VLDR     s1,|L2.1032|
0005d0  ee801a20          VDIV.F32 s2,s0,s1
0005d4  ed801a00          VSTR     s2,[r0,#0]
0005d8  e039              B        |L2.1614|
                  |L2.1498|
0005da  e7ff              B        |L2.1500|
                  |L2.1500|
;;;1171   	}
;;;1172   	else
;;;1173   	{
;;;1174   		var32 = var32 * CLists.CREG_POWER_CorrectionA_CV;	   
0005dc  4888              LDR      r0,|L2.2048|
0005de  6ec0              LDR      r0,[r0,#0x6c]  ; CLists
0005e0  9900              LDR      r1,[sp,#0]
0005e2  4348              MULS     r0,r1,r0
0005e4  9000              STR      r0,[sp,#0]
;;;1175   		if ((CLists.CPolar6 & 0x08) == 0x08)			   
0005e6  4886              LDR      r0,|L2.2048|
0005e8  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
0005ec  f0000008          AND      r0,r0,#8
0005f0  2808              CMP      r0,#8
0005f2  d10f              BNE      |L2.1556|
;;;1176   		{
;;;1177   			if (var32 < CLists.CREG_POWERA_Offset_CV) var32 = 0;
0005f4  4882              LDR      r0,|L2.2048|
0005f6  f8d000b0          LDR      r0,[r0,#0xb0]  ; CLists
0005fa  9900              LDR      r1,[sp,#0]
0005fc  4288              CMP      r0,r1
0005fe  d902              BLS      |L2.1542|
000600  2000              MOVS     r0,#0
000602  9000              STR      r0,[sp,#0]
000604  e00c              B        |L2.1568|
                  |L2.1542|
;;;1178   			else var32 = var32 - CLists.CREG_POWERA_Offset_CV;
000606  487e              LDR      r0,|L2.2048|
000608  f8d000b0          LDR      r0,[r0,#0xb0]  ; CLists
00060c  9900              LDR      r1,[sp,#0]
00060e  1a08              SUBS     r0,r1,r0
000610  9000              STR      r0,[sp,#0]
000612  e005              B        |L2.1568|
                  |L2.1556|
;;;1179   		}
;;;1180   		else
;;;1181   		{
;;;1182   			var32 = var32 + CLists.CREG_POWERA_Offset_CV;
000614  487a              LDR      r0,|L2.2048|
000616  f8d000b0          LDR      r0,[r0,#0xb0]  ; CLists
00061a  9900              LDR      r1,[sp,#0]
00061c  4408              ADD      r0,r0,r1
00061e  9000              STR      r0,[sp,#0]
                  |L2.1568|
;;;1183   		}	
;;;1184   		var32 = var32 >> 12;
000620  9800              LDR      r0,[sp,#0]
000622  0b00              LSRS     r0,r0,#12
000624  9000              STR      r0,[sp,#0]
;;;1185   		CLists.CCurrent = var32;;
000626  4976              LDR      r1,|L2.2048|
000628  9800              LDR      r0,[sp,#0]
00062a  6308              STR      r0,[r1,#0x30]  ; CLists
;;;1186   		DISS_POW_Current=CLists.CCurrent;
00062c  4608              MOV      r0,r1
00062e  6b00              LDR      r0,[r0,#0x30]  ; CLists
000630  ee000a10          VMOV     s0,r0
000634  eeb80a40          VCVT.F32.U32 s0,s0
000638  4877              LDR      r0,|L2.2072|
00063a  ed800a00          VSTR     s0,[r0,#0]
;;;1187   		DISS_POW_Current=DISS_POW_Current/1000;//计算显示电流
00063e  ed900a00          VLDR     s0,[r0,#0]
000642  ed5f0a8f          VLDR     s1,|L2.1032|
000646  ee801a20          VDIV.F32 s2,s0,s1
00064a  ed801a00          VSTR     s2,[r0,#0]
                  |L2.1614|
;;;1188   	}
;;;1189   /**************************稳压电源设置电压转换******************************************/
;;;1190   	var32 = CLists.CSET_Voltage;
00064e  486c              LDR      r0,|L2.2048|
000650  6880              LDR      r0,[r0,#8]  ; CLists
000652  9000              STR      r0,[sp,#0]
;;;1191   	var32=var32<<12;   
000654  9800              LDR      r0,[sp,#0]
000656  0300              LSLS     r0,r0,#12
000658  9000              STR      r0,[sp,#0]
;;;1192   	if ((CLists.CPolar5 & 0x04) == 0)			   
00065a  4869              LDR      r0,|L2.2048|
00065c  f89000d1          LDRB     r0,[r0,#0xd1]  ; CLists
000660  f0000004          AND      r0,r0,#4
000664  b978              CBNZ     r0,|L2.1670|
;;;1193   	{
;;;1194   		if (var32 < CLists.CSET_POWERV_Offset) var32 = 0;
000666  4866              LDR      r0,|L2.2048|
000668  f8d000b4          LDR      r0,[r0,#0xb4]  ; CLists
00066c  9900              LDR      r1,[sp,#0]
00066e  4288              CMP      r0,r1
000670  d902              BLS      |L2.1656|
000672  2000              MOVS     r0,#0
000674  9000              STR      r0,[sp,#0]
000676  e00c              B        |L2.1682|
                  |L2.1656|
;;;1195   		else var32 = var32 - CLists.CSET_POWERV_Offset;
000678  4861              LDR      r0,|L2.2048|
00067a  f8d000b4          LDR      r0,[r0,#0xb4]  ; CLists
00067e  9900              LDR      r1,[sp,#0]
000680  1a08              SUBS     r0,r1,r0
000682  9000              STR      r0,[sp,#0]
000684  e005              B        |L2.1682|
                  |L2.1670|
;;;1196   	}
;;;1197   	else var32 = var32 + CLists.CSET_POWERV_Offset;
000686  485e              LDR      r0,|L2.2048|
000688  f8d000b4          LDR      r0,[r0,#0xb4]  ; CLists
00068c  9900              LDR      r1,[sp,#0]
00068e  4408              ADD      r0,r0,r1
000690  9000              STR      r0,[sp,#0]
                  |L2.1682|
;;;1198   	var32 = var32/CLists.CSET_POWER_CorrectionV;
000692  485b              LDR      r0,|L2.2048|
000694  6f00              LDR      r0,[r0,#0x70]  ; CLists
000696  9900              LDR      r1,[sp,#0]
000698  fbb1f0f0          UDIV     r0,r1,r0
00069c  9000              STR      r0,[sp,#0]
;;;1199   	var32=var32>>1;
00069e  9800              LDR      r0,[sp,#0]
0006a0  0840              LSRS     r0,r0,#1
0006a2  9000              STR      r0,[sp,#0]
;;;1200   	Contr_Voltage = var32;
0006a4  495d              LDR      r1,|L2.2076|
0006a6  9800              LDR      r0,[sp,#0]
0006a8  8008              STRH     r0,[r1,#0]
;;;1201   	if(CLists.CSET_Voltage==0)
0006aa  4855              LDR      r0,|L2.2048|
0006ac  6880              LDR      r0,[r0,#8]  ; CLists
0006ae  b908              CBNZ     r0,|L2.1716|
;;;1202   	{
;;;1203   		Contr_Voltage=0;
0006b0  2000              MOVS     r0,#0
0006b2  8008              STRH     r0,[r1,#0]
                  |L2.1716|
;;;1204   	}
;;;1205   	var32 = 0;
0006b4  2000              MOVS     r0,#0
0006b6  9000              STR      r0,[sp,#0]
;;;1206   /**************************稳压电源设置电流转换**************************************/
;;;1207   	var32 = CLists.CSET_Current;
0006b8  4851              LDR      r0,|L2.2048|
0006ba  68c0              LDR      r0,[r0,#0xc]  ; CLists
0006bc  9000              STR      r0,[sp,#0]
;;;1208   	var32=var32<<12;   
0006be  9800              LDR      r0,[sp,#0]
0006c0  0300              LSLS     r0,r0,#12
0006c2  9000              STR      r0,[sp,#0]
;;;1209   	if ((CLists.CPolar6 & 0x04) == 0)			   
0006c4  484e              LDR      r0,|L2.2048|
0006c6  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
0006ca  f0000004          AND      r0,r0,#4
0006ce  b978              CBNZ     r0,|L2.1776|
;;;1210   	{
;;;1211   		if (var32 < CLists.CSET_POWERA_Offset) var32 = 0;
0006d0  484b              LDR      r0,|L2.2048|
0006d2  f8d000b8          LDR      r0,[r0,#0xb8]  ; CLists
0006d6  9900              LDR      r1,[sp,#0]
0006d8  4288              CMP      r0,r1
0006da  d902              BLS      |L2.1762|
0006dc  2000              MOVS     r0,#0
0006de  9000              STR      r0,[sp,#0]
0006e0  e00c              B        |L2.1788|
                  |L2.1762|
;;;1212   		else var32 = var32 - CLists.CSET_POWERA_Offset;
0006e2  4847              LDR      r0,|L2.2048|
0006e4  f8d000b8          LDR      r0,[r0,#0xb8]  ; CLists
0006e8  9900              LDR      r1,[sp,#0]
0006ea  1a08              SUBS     r0,r1,r0
0006ec  9000              STR      r0,[sp,#0]
0006ee  e005              B        |L2.1788|
                  |L2.1776|
;;;1213   	}
;;;1214   	else var32 = var32 + CLists.CSET_POWERA_Offset;
0006f0  4843              LDR      r0,|L2.2048|
0006f2  f8d000b8          LDR      r0,[r0,#0xb8]  ; CLists
0006f6  9900              LDR      r1,[sp,#0]
0006f8  4408              ADD      r0,r0,r1
0006fa  9000              STR      r0,[sp,#0]
                  |L2.1788|
;;;1215   	var32 = var32/CLists.CSET_POWER_CorrectionA;
0006fc  4840              LDR      r0,|L2.2048|
0006fe  6f40              LDR      r0,[r0,#0x74]  ; CLists
000700  9900              LDR      r1,[sp,#0]
000702  fbb1f0f0          UDIV     r0,r1,r0
000706  9000              STR      r0,[sp,#0]
;;;1216   	var32=var32>>1;
000708  9800              LDR      r0,[sp,#0]
00070a  0840              LSRS     r0,r0,#1
00070c  9000              STR      r0,[sp,#0]
;;;1217   	Contr_Current = var32;
00070e  4944              LDR      r1,|L2.2080|
000710  9800              LDR      r0,[sp,#0]
000712  8008              STRH     r0,[r1,#0]
;;;1218   	if(CLists.CSET_Current==0)
000714  483a              LDR      r0,|L2.2048|
000716  68c0              LDR      r0,[r0,#0xc]  ; CLists
000718  b908              CBNZ     r0,|L2.1822|
;;;1219   	{
;;;1220   		Contr_Current=0;
00071a  2000              MOVS     r0,#0
00071c  8008              STRH     r0,[r1,#0]
                  |L2.1822|
;;;1221   	}
;;;1222   	var32 = 0;
00071e  2000              MOVS     r0,#0
000720  9000              STR      r0,[sp,#0]
;;;1223   	
;;;1224   /********************识别电阻1转换******************************/
;;;1225   	var32=(R1mon_value*1000)/(65535-R1mon_value);
000722  4840              LDR      r0,|L2.2084|
000724  8800              LDRH     r0,[r0,#0]  ; R1mon_value
000726  f44f717a          MOV      r1,#0x3e8
00072a  4348              MULS     r0,r1,r0
00072c  493d              LDR      r1,|L2.2084|
00072e  8809              LDRH     r1,[r1,#0]  ; R1mon_value
000730  f64f72ff          MOV      r2,#0xffff
000734  1a51              SUBS     r1,r2,r1
000736  fb90f0f1          SDIV     r0,r0,r1
00073a  9000              STR      r0,[sp,#0]
;;;1226   	//var32 = R1mon_value;
;;;1227   	var32 = var32 * CLists.CREG_CorrectionR1;  
00073c  4830              LDR      r0,|L2.2048|
00073e  f8d00080          LDR      r0,[r0,#0x80]  ; CLists
000742  9900              LDR      r1,[sp,#0]
000744  4348              MULS     r0,r1,r0
000746  9000              STR      r0,[sp,#0]
;;;1228   	if ((CLists.CPolar7 & 0x01) == 0x01)		  
000748  482d              LDR      r0,|L2.2048|
00074a  f89000d3          LDRB     r0,[r0,#0xd3]  ; CLists
00074e  f0000001          AND      r0,r0,#1
000752  b178              CBZ      r0,|L2.1908|
;;;1229   	{
;;;1230   		if (var32 < CLists.CREG_ReadR1_Offset) 
000754  482a              LDR      r0,|L2.2048|
000756  f8d000c4          LDR      r0,[r0,#0xc4]  ; CLists
00075a  9900              LDR      r1,[sp,#0]
00075c  4288              CMP      r0,r1
00075e  d902              BLS      |L2.1894|
;;;1231   		{
;;;1232   			var32 = 0;
000760  2000              MOVS     r0,#0
000762  9000              STR      r0,[sp,#0]
000764  e00c              B        |L2.1920|
                  |L2.1894|
;;;1233   		}
;;;1234   		else var32 = var32 - CLists.CREG_ReadR1_Offset;
000766  4826              LDR      r0,|L2.2048|
000768  f8d000c4          LDR      r0,[r0,#0xc4]  ; CLists
00076c  9900              LDR      r1,[sp,#0]
00076e  1a08              SUBS     r0,r1,r0
000770  9000              STR      r0,[sp,#0]
000772  e005              B        |L2.1920|
                  |L2.1908|
;;;1235   	}
;;;1236   	else var32 = var32 + CLists.CREG_ReadR1_Offset;
000774  4822              LDR      r0,|L2.2048|
000776  f8d000c4          LDR      r0,[r0,#0xc4]  ; CLists
00077a  9900              LDR      r1,[sp,#0]
00077c  4408              ADD      r0,r0,r1
00077e  9000              STR      r0,[sp,#0]
                  |L2.1920|
;;;1237   	var32 = var32 >> 12;
000780  9800              LDR      r0,[sp,#0]
000782  0b00              LSRS     r0,r0,#12
000784  9000              STR      r0,[sp,#0]
;;;1238   	if (var32 < 1)
000786  9800              LDR      r0,[sp,#0]
000788  b908              CBNZ     r0,|L2.1934|
;;;1239   	{
;;;1240   		var32 = 0;				  //清零
00078a  2000              MOVS     r0,#0
00078c  9000              STR      r0,[sp,#0]
                  |L2.1934|
;;;1241   	}
;;;1242   	CLists.CR1_VLUE = var32;
00078e  491c              LDR      r1,|L2.2048|
000790  9800              LDR      r0,[sp,#0]
000792  63c8              STR      r0,[r1,#0x3c]  ; CLists
;;;1243   	var32 = 0;	
000794  2000              MOVS     r0,#0
000796  9000              STR      r0,[sp,#0]
;;;1244   	
;;;1245   	
;;;1246   /********************识别电阻2转换******************************/	
;;;1247   	var32 = R2mon_value;
000798  4823              LDR      r0,|L2.2088|
00079a  8800              LDRH     r0,[r0,#0]  ; R2mon_value
00079c  9000              STR      r0,[sp,#0]
;;;1248   	var32 = var32 * CLists.CREG_CorrectionR2;  
00079e  4608              MOV      r0,r1
0007a0  f8d00084          LDR      r0,[r0,#0x84]  ; CLists
0007a4  9900              LDR      r1,[sp,#0]
0007a6  4348              MULS     r0,r1,r0
0007a8  9000              STR      r0,[sp,#0]
;;;1249   	if ((CLists.CPolar7 & 0x04) == 0x04)		  
0007aa  4815              LDR      r0,|L2.2048|
0007ac  f89000d3          LDRB     r0,[r0,#0xd3]  ; CLists
0007b0  f0000004          AND      r0,r0,#4
0007b4  2804              CMP      r0,#4
0007b6  d10f              BNE      |L2.2008|
;;;1250   	{
;;;1251   		if (var32 < CLists.CREG_ReadR2_Offset) 
0007b8  4811              LDR      r0,|L2.2048|
0007ba  f8d000c8          LDR      r0,[r0,#0xc8]  ; CLists
0007be  9900              LDR      r1,[sp,#0]
0007c0  4288              CMP      r0,r1
0007c2  d902              BLS      |L2.1994|
;;;1252   		{
;;;1253   			var32 = 0;
0007c4  2000              MOVS     r0,#0
0007c6  9000              STR      r0,[sp,#0]
0007c8  e00c              B        |L2.2020|
                  |L2.1994|
;;;1254   		}
;;;1255   		else var32 = var32 - CLists.CREG_ReadR2_Offset;
0007ca  480d              LDR      r0,|L2.2048|
0007cc  f8d000c8          LDR      r0,[r0,#0xc8]  ; CLists
0007d0  9900              LDR      r1,[sp,#0]
0007d2  1a08              SUBS     r0,r1,r0
0007d4  9000              STR      r0,[sp,#0]
0007d6  e005              B        |L2.2020|
                  |L2.2008|
;;;1256   	}
;;;1257   	else var32 = var32 + CLists.CREG_ReadR2_Offset;
0007d8  4809              LDR      r0,|L2.2048|
0007da  f8d000c8          LDR      r0,[r0,#0xc8]  ; CLists
0007de  9900              LDR      r1,[sp,#0]
0007e0  4408              ADD      r0,r0,r1
0007e2  9000              STR      r0,[sp,#0]
                  |L2.2020|
;;;1258   	var32 = var32 >> 12;
0007e4  9800              LDR      r0,[sp,#0]
0007e6  0b00              LSRS     r0,r0,#12
0007e8  9000              STR      r0,[sp,#0]
;;;1259   	if (var32 < 1)
0007ea  9800              LDR      r0,[sp,#0]
0007ec  b908              CBNZ     r0,|L2.2034|
;;;1260   	{
;;;1261   		var32 = 0;				  //清零
0007ee  2000              MOVS     r0,#0
0007f0  9000              STR      r0,[sp,#0]
                  |L2.2034|
;;;1262   	}
;;;1263   	CLists.CR1_VLUE = var32;
0007f2  4903              LDR      r1,|L2.2048|
0007f4  9800              LDR      r0,[sp,#0]
0007f6  63c8              STR      r0,[r1,#0x3c]  ; CLists
;;;1264   	var32 = 0;	
0007f8  2000              MOVS     r0,#0
0007fa  9000              STR      r0,[sp,#0]
;;;1265   }
0007fc  bd08              POP      {r3,pc}
0007fe  0000              DCW      0x0000
                  |L2.2048|
                          DCD      CLists
                  |L2.2052|
                          DCD      Rmon_value
                  |L2.2056|
                          DCD      Vmon_POWE_value
                  |L2.2060|
                          DCD      DISS_POW_Voltage
                  |L2.2064|
                          DCD      Imon_POWE_value
                  |L2.2068|
                          DCD      flagE
                  |L2.2072|
                          DCD      DISS_POW_Current
                  |L2.2076|
                          DCD      Contr_Voltage
                  |L2.2080|
                          DCD      Contr_Current
                  |L2.2084|
                          DCD      R1mon_value
                  |L2.2088|
                          DCD      R2mon_value
                          ENDP


                          AREA ||i.UART_Action||, CODE, READONLY, ALIGN=2

                  UART_Action PROC
;;;45     //===========================MODBUS协议=============================//
;;;46     void UART_Action(void)
000000  b500              PUSH     {lr}
;;;47     {//RUT格式：
000002  b087              SUB      sp,sp,#0x1c
;;;48     	//ADDR  命令码  读寄存器的起始地址高   读寄存器的起始地址低  读数据字个数高字节   读数据个数低字节  CRC高 CRC低
;;;49     	//返回格式：ADDR 命令码 返回数据字节数  数据高  数据低 ..... CRC高  CRC低
;;;50     	if (UART_Buffer_Rece[0] == ADDR)
000004  48f9              LDR      r0,|L3.1004|
000006  7800              LDRB     r0,[r0,#0]  ; UART_Buffer_Rece
000008  49f9              LDR      r1,|L3.1008|
00000a  7809              LDRB     r1,[r1,#0]  ; ADDR
00000c  4288              CMP      r0,r1
                  |L3.14|
00000e  d17d              BNE      |L3.268|
;;;51     	{
;;;52     		if (UART_Buffer_Rece[1] == (0x03))	//命令3 读数据   
000010  48f6              LDR      r0,|L3.1004|
000012  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000014  2803              CMP      r0,#3
000016  d1fa              BNE      |L3.14|
;;;53     		{																		 
;;;54     			vu8 i;
;;;55     			vu16 crc_result;
;;;56     			crc_result = (UART_Buffer_Rece[6] << 8) + UART_Buffer_Rece[7];
000018  48f4              LDR      r0,|L3.1004|
00001a  79c0              LDRB     r0,[r0,#7]  ; UART_Buffer_Rece
00001c  49f3              LDR      r1,|L3.1004|
00001e  7989              LDRB     r1,[r1,#6]  ; UART_Buffer_Rece
000020  eb002001          ADD      r0,r0,r1,LSL #8
000024  b280              UXTH     r0,r0
000026  9005              STR      r0,[sp,#0x14]
;;;57     			if ((crc_result == Hardware_CRC(UART_Buffer_Rece,6)) ||(crc_result == 0) )
000028  2106              MOVS     r1,#6
00002a  48f0              LDR      r0,|L3.1004|
00002c  f7fffffe          BL       Hardware_CRC
000030  f8bd1014          LDRH     r1,[sp,#0x14]
000034  4288              CMP      r0,r1
000036  d003              BEQ      |L3.64|
000038  f8bd0014          LDRH     r0,[sp,#0x14]
00003c  2800              CMP      r0,#0
00003e  d175              BNE      |L3.300|
                  |L3.64|
;;;58     			{
;;;59     				if (UART_Buffer_Rece[3] < 0x07)    								//如果寄存器在可读范围内
000040  48ea              LDR      r0,|L3.1004|
000042  78c0              LDRB     r0,[r0,#3]  ; UART_Buffer_Rece
000044  2807              CMP      r0,#7
000046  da71              BGE      |L3.300|
;;;60     				{
;;;61     					if ((UART_Buffer_Rece[3] + UART_Buffer_Rece[5]) < 0x0F)		//如果最后一个读取的寄存器地址在可读范围内
000048  48e8              LDR      r0,|L3.1004|
00004a  78c0              LDRB     r0,[r0,#3]  ; UART_Buffer_Rece
00004c  49e7              LDR      r1,|L3.1004|
00004e  7949              LDRB     r1,[r1,#5]  ; UART_Buffer_Rece
000050  4408              ADD      r0,r0,r1
000052  280f              CMP      r0,#0xf
000054  da6a              BGE      |L3.300|
;;;62     					{							
;;;63     						UART_Buffer_Send[0] = ADDR;
000056  48e6              LDR      r0,|L3.1008|
000058  7800              LDRB     r0,[r0,#0]  ; ADDR
00005a  49e6              LDR      r1,|L3.1012|
00005c  7008              STRB     r0,[r1,#0]
;;;64     						UART_Buffer_Send[1] = 0x03;
00005e  2003              MOVS     r0,#3
000060  7048              STRB     r0,[r1,#1]
;;;65     						UART_Buffer_Send[2] = UART_Buffer_Rece[5]*2;
000062  48e2              LDR      r0,|L3.1004|
000064  7940              LDRB     r0,[r0,#5]  ; UART_Buffer_Rece
000066  0640              LSLS     r0,r0,#25
000068  0e00              LSRS     r0,r0,#24
00006a  7088              STRB     r0,[r1,#2]
;;;66     						for (i=0;i<UART_Buffer_Send[2];i++)
00006c  2000              MOVS     r0,#0
00006e  9006              STR      r0,[sp,#0x18]
000070  e030              B        |L3.212|
                  |L3.114|
;;;67     						{
;;;68     							if ((i % 2) == 0) UART_Buffer_Send[3 + i] = Run_Control[UART_Buffer_Rece[3] + i / 2] >> 8;
000072  f89d0018          LDRB     r0,[sp,#0x18]
000076  eb0071d0          ADD      r1,r0,r0,LSR #31
00007a  1049              ASRS     r1,r1,#1
00007c  eba00141          SUB      r1,r0,r1,LSL #1
000080  b991              CBNZ     r1,|L3.168|
000082  f89d0018          LDRB     r0,[sp,#0x18]
000086  eb0071d0          ADD      r1,r0,r0,LSR #31
00008a  4ad8              LDR      r2,|L3.1004|
00008c  78d2              LDRB     r2,[r2,#3]  ; UART_Buffer_Rece
00008e  eb020161          ADD      r1,r2,r1,ASR #1
000092  4ad9              LDR      r2,|L3.1016|
000094  f8521021          LDR      r1,[r2,r1,LSL #2]
000098  f3c12207          UBFX     r2,r1,#8,#8
00009c  f89d1018          LDRB     r1,[sp,#0x18]
0000a0  1cc9              ADDS     r1,r1,#3
0000a2  4bd4              LDR      r3,|L3.1012|
0000a4  545a              STRB     r2,[r3,r1]
0000a6  e010              B        |L3.202|
                  |L3.168|
;;;69     							else UART_Buffer_Send[3 + i] = Run_Control[UART_Buffer_Rece[3] + i / 2];														
0000a8  f89d0018          LDRB     r0,[sp,#0x18]
0000ac  eb0071d0          ADD      r1,r0,r0,LSR #31
0000b0  4ace              LDR      r2,|L3.1004|
0000b2  78d2              LDRB     r2,[r2,#3]  ; UART_Buffer_Rece
0000b4  eb020161          ADD      r1,r2,r1,ASR #1
0000b8  4acf              LDR      r2,|L3.1016|
0000ba  f8521021          LDR      r1,[r2,r1,LSL #2]
0000be  b2ca              UXTB     r2,r1
0000c0  f89d1018          LDRB     r1,[sp,#0x18]
0000c4  1cc9              ADDS     r1,r1,#3
0000c6  4bcb              LDR      r3,|L3.1012|
0000c8  545a              STRB     r2,[r3,r1]
                  |L3.202|
0000ca  f89d0018          LDRB     r0,[sp,#0x18]         ;66
0000ce  1c40              ADDS     r0,r0,#1              ;66
0000d0  b2c0              UXTB     r0,r0                 ;66
0000d2  9006              STR      r0,[sp,#0x18]         ;66
                  |L3.212|
0000d4  48c7              LDR      r0,|L3.1012|
0000d6  7880              LDRB     r0,[r0,#2]            ;66  ; UART_Buffer_Send
0000d8  f89d1018          LDRB     r1,[sp,#0x18]         ;66
0000dc  4288              CMP      r0,r1                 ;66
0000de  dcc8              BGT      |L3.114|
;;;70     						}
;;;71     						crc_result = Hardware_CRC(UART_Buffer_Send,UART_Buffer_Send[2] + 3);
0000e0  48c4              LDR      r0,|L3.1012|
0000e2  7880              LDRB     r0,[r0,#2]  ; UART_Buffer_Send
0000e4  1cc0              ADDS     r0,r0,#3
0000e6  b2c1              UXTB     r1,r0
0000e8  48c2              LDR      r0,|L3.1012|
0000ea  f7fffffe          BL       Hardware_CRC
0000ee  9005              STR      r0,[sp,#0x14]
;;;72     						UART_Buffer_Send[3 + UART_Buffer_Send[2]] = crc_result >> 8;
0000f0  f8bd0014          LDRH     r0,[sp,#0x14]
0000f4  1201              ASRS     r1,r0,#8
0000f6  48bf              LDR      r0,|L3.1012|
0000f8  7880              LDRB     r0,[r0,#2]  ; UART_Buffer_Send
0000fa  1cc0              ADDS     r0,r0,#3
0000fc  4abd              LDR      r2,|L3.1012|
0000fe  5411              STRB     r1,[r2,r0]
;;;73     						UART_Buffer_Send[4 + UART_Buffer_Send[2]] = crc_result;
000100  f8bd0014          LDRH     r0,[sp,#0x14]
000104  b2c1              UXTB     r1,r0
000106  4610              MOV      r0,r2
000108  7880              LDRB     r0,[r0,#2]  ; UART_Buffer_Send
00010a  e001              B        |L3.272|
                  |L3.268|
00010c  e00f              B        |L3.302|
00010e  e00d              B        |L3.300|
                  |L3.272|
000110  1d00              ADDS     r0,r0,#4
000112  5411              STRB     r1,[r2,r0]
;;;74     						Transmit_BUFFERsize = UART_Buffer_Send[2] + 5;
000114  4610              MOV      r0,r2
000116  7880              LDRB     r0,[r0,#2]  ; UART_Buffer_Send
000118  1d40              ADDS     r0,r0,#5
00011a  49b8              LDR      r1,|L3.1020|
00011c  7008              STRB     r0,[r1,#0]
;;;75     						UART_SEND_flag=1;
00011e  48b8              LDR      r0,|L3.1024|
000120  6800              LDR      r0,[r0,#0]  ; flagA
000122  f0200010          BIC      r0,r0,#0x10
000126  3010              ADDS     r0,r0,#0x10
000128  49b5              LDR      r1,|L3.1024|
00012a  6008              STR      r0,[r1,#0]  ; flagA
                  |L3.300|
;;;76     					}
;;;77     				}
;;;78     			}	
;;;79     		}
00012c  bf00              NOP      
                  |L3.302|
;;;80     	} 
;;;81     //===============================写寄存器=================================
;;;82     	if ((UART_Buffer_Rece[0] == 0) || (UART_Buffer_Rece[0] == ADDR) || (UART_Buffer_Rece[0] == ((ADDR-1)/4+100)))	 
00012e  49af              LDR      r1,|L3.1004|
000130  7809              LDRB     r1,[r1,#0]  ; UART_Buffer_Rece
000132  b189              CBZ      r1,|L3.344|
000134  49ad              LDR      r1,|L3.1004|
000136  7809              LDRB     r1,[r1,#0]  ; UART_Buffer_Rece
000138  4aad              LDR      r2,|L3.1008|
00013a  7812              LDRB     r2,[r2,#0]  ; ADDR
00013c  4291              CMP      r1,r2
00013e  d00b              BEQ      |L3.344|
000140  49ab              LDR      r1,|L3.1008|
000142  7809              LDRB     r1,[r1,#0]  ; ADDR
000144  1e48              SUBS     r0,r1,#1
000146  17c1              ASRS     r1,r0,#31
000148  eb007191          ADD      r1,r0,r1,LSR #30
00014c  1089              ASRS     r1,r1,#2
00014e  3164              ADDS     r1,r1,#0x64
000150  4aa6              LDR      r2,|L3.1004|
000152  7812              LDRB     r2,[r2,#0]  ; UART_Buffer_Rece
000154  4291              CMP      r1,r2
000156  d175              BNE      |L3.580|
                  |L3.344|
;;;83     	{
;;;84     		vu8 var8;
;;;85     		vu8 a=0;
000158  2000              MOVS     r0,#0
00015a  9005              STR      r0,[sp,#0x14]
;;;86     		vu16 var16;
;;;87     		vu16 crc_result;
;;;88     //=========================以下命令6 写单个寄存器===========================
;;;89     		if (UART_Buffer_Rece[1] == 6)                                 //判断第二个字节是否为命令6
00015c  48a3              LDR      r0,|L3.1004|
00015e  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000160  2806              CMP      r0,#6
000162  d14c              BNE      |L3.510|
;;;90     		{
;;;91     			if (UART_Buffer_Rece[3] < 0x05)							  //判断需要写的地址是否在可写范围内
000164  48a1              LDR      r0,|L3.1004|
000166  78c0              LDRB     r0,[r0,#3]  ; UART_Buffer_Rece
000168  2805              CMP      r0,#5
00016a  da48              BGE      |L3.510|
;;;92     			{
;;;93     				crc_result = (UART_Buffer_Rece[6] << 8) + UART_Buffer_Rece[7];
00016c  489f              LDR      r0,|L3.1004|
00016e  79c0              LDRB     r0,[r0,#7]  ; UART_Buffer_Rece
000170  499e              LDR      r1,|L3.1004|
000172  7989              LDRB     r1,[r1,#6]  ; UART_Buffer_Rece
000174  eb002001          ADD      r0,r0,r1,LSL #8
000178  b280              UXTH     r0,r0
00017a  9003              STR      r0,[sp,#0xc]
;;;94     				if ((crc_result == Hardware_CRC(UART_Buffer_Rece,6)) ||(crc_result == 0) )		  //检查CRC
00017c  2106              MOVS     r1,#6
00017e  489b              LDR      r0,|L3.1004|
000180  f7fffffe          BL       Hardware_CRC
000184  f8bd100c          LDRH     r1,[sp,#0xc]
000188  4288              CMP      r0,r1
00018a  d002              BEQ      |L3.402|
00018c  f8bd000c          LDRH     r0,[sp,#0xc]
000190  bba8              CBNZ     r0,|L3.510|
                  |L3.402|
;;;95     				{
;;;96     					var16 = (UART_Buffer_Rece[4] << 8) + UART_Buffer_Rece[5];	//第5 6个字节为要写入的数据
000192  4896              LDR      r0,|L3.1004|
000194  7940              LDRB     r0,[r0,#5]  ; UART_Buffer_Rece
000196  4995              LDR      r1,|L3.1004|
000198  7909              LDRB     r1,[r1,#4]  ; UART_Buffer_Rece
00019a  eb002001          ADD      r0,r0,r1,LSL #8
00019e  b280              UXTH     r0,r0
0001a0  9004              STR      r0,[sp,#0x10]
;;;97     					var8 = UART_Buffer_Rece[3];	        						//第3 4个字节为要写入的地址
0001a2  4892              LDR      r0,|L3.1004|
0001a4  78c0              LDRB     r0,[r0,#3]  ; UART_Buffer_Rece
0001a6  9006              STR      r0,[sp,#0x18]
;;;98     					Run_Control[var8] = var16;			    //将数据写入指定的地址
0001a8  f8bd0010          LDRH     r0,[sp,#0x10]
0001ac  4992              LDR      r1,|L3.1016|
0001ae  f89d2018          LDRB     r2,[sp,#0x18]
0001b2  f8410022          STR      r0,[r1,r2,LSL #2]
;;;99     
;;;100    					if (UART_Buffer_Rece[0] == ADDR)							//广播模式下不返回数据
0001b6  488d              LDR      r0,|L3.1004|
0001b8  7800              LDRB     r0,[r0,#0]  ; UART_Buffer_Rece
0001ba  498d              LDR      r1,|L3.1008|
0001bc  7809              LDRB     r1,[r1,#0]  ; ADDR
0001be  4288              CMP      r0,r1
0001c0  d11d              BNE      |L3.510|
;;;101    					{
;;;102    						for (a=0;a<8;a++)
0001c2  2000              MOVS     r0,#0
0001c4  9005              STR      r0,[sp,#0x14]
0001c6  e00c              B        |L3.482|
                  |L3.456|
;;;103    						{UART_Buffer_Send[a] = UART_Buffer_Rece[a];}
0001c8  4888              LDR      r0,|L3.1004|
0001ca  f89d1014          LDRB     r1,[sp,#0x14]
0001ce  5c40              LDRB     r0,[r0,r1]
0001d0  4988              LDR      r1,|L3.1012|
0001d2  f89d2014          LDRB     r2,[sp,#0x14]
0001d6  5488              STRB     r0,[r1,r2]
0001d8  f89d0014          LDRB     r0,[sp,#0x14]         ;102
0001dc  1c40              ADDS     r0,r0,#1              ;102
0001de  b2c0              UXTB     r0,r0                 ;102
0001e0  9005              STR      r0,[sp,#0x14]         ;102
                  |L3.482|
0001e2  f89d0014          LDRB     r0,[sp,#0x14]         ;102
0001e6  2808              CMP      r0,#8                 ;102
0001e8  dbee              BLT      |L3.456|
;;;104    						Transmit_BUFFERsize = 8;						//原样数据返回，不计算CRC
0001ea  2008              MOVS     r0,#8
0001ec  4983              LDR      r1,|L3.1020|
0001ee  7008              STRB     r0,[r1,#0]
;;;105    						UART_SEND_flag=1;
0001f0  4883              LDR      r0,|L3.1024|
0001f2  6800              LDR      r0,[r0,#0]  ; flagA
0001f4  f0200010          BIC      r0,r0,#0x10
0001f8  3010              ADDS     r0,r0,#0x10
0001fa  4981              LDR      r1,|L3.1024|
0001fc  6008              STR      r0,[r1,#0]  ; flagA
                  |L3.510|
;;;106    					}
;;;107    				}
;;;108    			}
;;;109    		}
;;;110    //=======================================以下是命令16，连写寄存器===========================================
;;;111    //功能码16格式:
;;;112    //     地址 命令 写入起始地址高  写入起始地址低 写入字数高  写入字数低 写入字节数  数据高 数据低 ......CRC高 CRC低
;;;113    //返回数据格式:
;;;114    //     地址 命令 写入起始地址高  写入起始地址低  写入字节数高 写入字节数低  CRC高  CRC低 
;;;115    		if (UART_Buffer_Rece[1] == 16)										  
0001fe  487b              LDR      r0,|L3.1004|
000200  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000202  2810              CMP      r0,#0x10
000204  d16c              BNE      |L3.736|
;;;116    		{	
;;;117    			if ((UART_Buffer_Rece[6] == 6) && (UART_Buffer_Rece[3] == 0x00))	//规定连写寄存器的个数
000206  4879              LDR      r0,|L3.1004|
000208  7980              LDRB     r0,[r0,#6]  ; UART_Buffer_Rece
00020a  2806              CMP      r0,#6
00020c  d168              BNE      |L3.736|
00020e  4877              LDR      r0,|L3.1004|
000210  78c0              LDRB     r0,[r0,#3]  ; UART_Buffer_Rece
000212  2800              CMP      r0,#0
000214  d164              BNE      |L3.736|
;;;118    			{
;;;119    				crc_result = (UART_Buffer_Rece[13] << 8) + UART_Buffer_Rece[14];
000216  4875              LDR      r0,|L3.1004|
000218  7b80              LDRB     r0,[r0,#0xe]  ; UART_Buffer_Rece
00021a  4974              LDR      r1,|L3.1004|
00021c  7b49              LDRB     r1,[r1,#0xd]  ; UART_Buffer_Rece
00021e  eb002001          ADD      r0,r0,r1,LSL #8
000222  b280              UXTH     r0,r0
000224  9003              STR      r0,[sp,#0xc]
;;;120    				if ((crc_result == Hardware_CRC(UART_Buffer_Rece,13)) ||(crc_result == 0) )	   //检查CRC
000226  210d              MOVS     r1,#0xd
000228  4870              LDR      r0,|L3.1004|
00022a  f7fffffe          BL       Hardware_CRC
00022e  f8bd100c          LDRH     r1,[sp,#0xc]
000232  4288              CMP      r0,r1
000234  d003              BEQ      |L3.574|
000236  f8bd000c          LDRH     r0,[sp,#0xc]
00023a  2800              CMP      r0,#0
00023c  d150              BNE      |L3.736|
                  |L3.574|
;;;121    				{												
;;;122    					for (var8=0;var8<3;var8++) Run_Control[var8] = (UART_Buffer_Rece[var8*2+7] << 8) + UART_Buffer_Rece[var8*2+8];
00023e  2000              MOVS     r0,#0
000240  9006              STR      r0,[sp,#0x18]
000242  e01a              B        |L3.634|
                  |L3.580|
000244  e04d              B        |L3.738|
                  |L3.582|
000246  f89d0018          LDRB     r0,[sp,#0x18]
00024a  2108              MOVS     r1,#8
00024c  eb010040          ADD      r0,r1,r0,LSL #1
000250  4966              LDR      r1,|L3.1004|
000252  5c09              LDRB     r1,[r1,r0]
000254  f89d0018          LDRB     r0,[sp,#0x18]
000258  2207              MOVS     r2,#7
00025a  eb020040          ADD      r0,r2,r0,LSL #1
00025e  4a63              LDR      r2,|L3.1004|
000260  5c10              LDRB     r0,[r2,r0]
000262  eb012000          ADD      r0,r1,r0,LSL #8
000266  4964              LDR      r1,|L3.1016|
000268  f89d2018          LDRB     r2,[sp,#0x18]
00026c  f8410022          STR      r0,[r1,r2,LSL #2]
000270  f89d0018          LDRB     r0,[sp,#0x18]
000274  1c40              ADDS     r0,r0,#1
000276  b2c0              UXTB     r0,r0
000278  9006              STR      r0,[sp,#0x18]
                  |L3.634|
00027a  f89d0018          LDRB     r0,[sp,#0x18]
00027e  2803              CMP      r0,#3
000280  dbe1              BLT      |L3.582|
;;;123    
;;;124    					if (UART_Buffer_Rece[0] == ADDR)					  //广播模式不返回数据
000282  485a              LDR      r0,|L3.1004|
000284  7800              LDRB     r0,[r0,#0]  ; UART_Buffer_Rece
000286  495a              LDR      r1,|L3.1008|
000288  7809              LDRB     r1,[r1,#0]  ; ADDR
00028a  4288              CMP      r0,r1
00028c  d128              BNE      |L3.736|
;;;125    					{
;;;126    						UART_Buffer_Send[0] = ADDR;
00028e  4858              LDR      r0,|L3.1008|
000290  7800              LDRB     r0,[r0,#0]  ; ADDR
000292  4958              LDR      r1,|L3.1012|
000294  7008              STRB     r0,[r1,#0]
;;;127    						UART_Buffer_Send[1] = 16;
000296  2010              MOVS     r0,#0x10
000298  7048              STRB     r0,[r1,#1]
;;;128    						UART_Buffer_Send[2] = UART_Buffer_Rece[2];
00029a  4854              LDR      r0,|L3.1004|
00029c  7880              LDRB     r0,[r0,#2]  ; UART_Buffer_Rece
00029e  7088              STRB     r0,[r1,#2]
;;;129    						UART_Buffer_Send[3] = UART_Buffer_Rece[3];
0002a0  4852              LDR      r0,|L3.1004|
0002a2  78c0              LDRB     r0,[r0,#3]  ; UART_Buffer_Rece
0002a4  70c8              STRB     r0,[r1,#3]
;;;130    						UART_Buffer_Send[4] = UART_Buffer_Rece[4];
0002a6  4851              LDR      r0,|L3.1004|
0002a8  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0002aa  7108              STRB     r0,[r1,#4]
;;;131    						UART_Buffer_Send[5] = UART_Buffer_Rece[5];
0002ac  484f              LDR      r0,|L3.1004|
0002ae  7940              LDRB     r0,[r0,#5]  ; UART_Buffer_Rece
0002b0  7148              STRB     r0,[r1,#5]
;;;132    						crc_result = Hardware_CRC(UART_Buffer_Send,6);	 //计算CRC码
0002b2  2106              MOVS     r1,#6
0002b4  484f              LDR      r0,|L3.1012|
0002b6  f7fffffe          BL       Hardware_CRC
0002ba  9003              STR      r0,[sp,#0xc]
;;;133    						UART_Buffer_Send[6] = crc_result>>8;
0002bc  f8bd000c          LDRH     r0,[sp,#0xc]
0002c0  1200              ASRS     r0,r0,#8
0002c2  494c              LDR      r1,|L3.1012|
0002c4  7188              STRB     r0,[r1,#6]
;;;134    						UART_Buffer_Send[7] = crc_result;				 
0002c6  f8bd000c          LDRH     r0,[sp,#0xc]
0002ca  71c8              STRB     r0,[r1,#7]
;;;135    						Transmit_BUFFERsize = 8;					     //设置发送字节数长度
0002cc  2008              MOVS     r0,#8
0002ce  494b              LDR      r1,|L3.1020|
0002d0  7008              STRB     r0,[r1,#0]
;;;136    						UART_SEND_flag=1;
0002d2  484b              LDR      r0,|L3.1024|
0002d4  6800              LDR      r0,[r0,#0]  ; flagA
0002d6  f0200010          BIC      r0,r0,#0x10
0002da  3010              ADDS     r0,r0,#0x10
0002dc  4948              LDR      r1,|L3.1024|
0002de  6008              STR      r0,[r1,#0]  ; flagA
                  |L3.736|
;;;137    					}
;;;138    				}
;;;139    			}			 
;;;140    		}
;;;141    	}
0002e0  bf00              NOP      
                  |L3.738|
;;;142    /*************************************以下为校准部分**************************************************************************/
;;;143    	if (((UART_Buffer_Rece[0] == 0x01)&&(UART_Buffer_Rece[2] == 0xA5)))			   //校准开始
0002e2  4842              LDR      r0,|L3.1004|
0002e4  7800              LDRB     r0,[r0,#0]  ; UART_Buffer_Rece
0002e6  2801              CMP      r0,#1
                  |L3.744|
0002e8  f04180b4          BNE.W    |L3.5204|
0002ec  483f              LDR      r0,|L3.1004|
0002ee  7880              LDRB     r0,[r0,#2]  ; UART_Buffer_Rece
0002f0  28a5              CMP      r0,#0xa5
0002f2  d1f9              BNE      |L3.744|
;;;144    	{ 
;;;145    		vu16 crc_result;
;;;146    		crc_result = (UART_Buffer_Rece[6] << 8) + UART_Buffer_Rece[7];
0002f4  483d              LDR      r0,|L3.1004|
0002f6  79c0              LDRB     r0,[r0,#7]  ; UART_Buffer_Rece
0002f8  493c              LDR      r1,|L3.1004|
0002fa  7989              LDRB     r1,[r1,#6]  ; UART_Buffer_Rece
0002fc  eb002001          ADD      r0,r0,r1,LSL #8
000300  b280              UXTH     r0,r0
000302  9006              STR      r0,[sp,#0x18]
;;;147    		if (crc_result == Hardware_CRC(UART_Buffer_Rece,6) ||crc_result==0)
000304  2106              MOVS     r1,#6
000306  4839              LDR      r0,|L3.1004|
000308  f7fffffe          BL       Hardware_CRC
00030c  f8bd1018          LDRH     r1,[sp,#0x18]
000310  4288              CMP      r0,r1
000312  d004              BEQ      |L3.798|
000314  f8bd0018          LDRH     r0,[sp,#0x18]
000318  2800              CMP      r0,#0
00031a  f041809a          BNE.W    |L3.5202|
                  |L3.798|
;;;148    		{
;;;149    			/**************负载电压低档校准***************************/
;;;150    			if(UART_Buffer_Rece[1] == 0x01)
00031e  4833              LDR      r0,|L3.1004|
000320  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000322  2801              CMP      r0,#1
000324  d110              BNE      |L3.840|
;;;151    			{
;;;152    				Modify_A_READ=0;
000326  2000              MOVS     r0,#0
000328  4936              LDR      r1,|L3.1028|
00032a  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;153    				Modify_A_ACT=0;
00032c  4936              LDR      r1,|L3.1032|
00032e  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;154    				Modify_A_READ = Vmon_Load_value;//测量电压值
000330  4836              LDR      r0,|L3.1036|
000332  8800              LDRH     r0,[r0,#0]  ; Vmon_Load_value
000334  4933              LDR      r1,|L3.1028|
000336  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;155    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
000338  482c              LDR      r0,|L3.1004|
00033a  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
00033c  492b              LDR      r1,|L3.1004|
00033e  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000340  eb002001          ADD      r0,r0,r1,LSL #8
000344  4930              LDR      r1,|L3.1032|
000346  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.840|
;;;156    			}
;;;157    			if (UART_Buffer_Rece[1] == 0x02)			   //电压测量校准完成
000348  4828              LDR      r0,|L3.1004|
00034a  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
00034c  2802              CMP      r0,#2
00034e  d17b              BNE      |L3.1096|
;;;158    			{
;;;159    				vu32 var16;
;;;160    				vu32 var32a;
;;;161    				vu32 var32b;
;;;162    				
;;;163    				vu32 var16a;
;;;164    				vu32 var32c;
;;;165    				vu32 var32d;
;;;166    				Modify_B_READ=0;
000350  2000              MOVS     r0,#0
000352  492f              LDR      r1,|L3.1040|
000354  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;167    				Modify_B_ACT=0;
000356  492f              LDR      r1,|L3.1044|
000358  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;168    				Modify_B_READ =Vmon_Load_value;//测量电压值
00035a  482c              LDR      r0,|L3.1036|
00035c  8800              LDRH     r0,[r0,#0]  ; Vmon_Load_value
00035e  492c              LDR      r1,|L3.1040|
000360  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;169    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段
000362  4822              LDR      r0,|L3.1004|
000364  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000366  4921              LDR      r1,|L3.1004|
000368  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
00036a  eb002001          ADD      r0,r0,r1,LSL #8
00036e  4929              LDR      r1,|L3.1044|
000370  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;170    				var32a = Modify_B_ACT;
000372  4608              MOV      r0,r1
000374  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000376  9004              STR      r0,[sp,#0x10]
;;;171    				var32a = var32a - Modify_A_ACT;
000378  4923              LDR      r1,|L3.1032|
00037a  9804              LDR      r0,[sp,#0x10]
00037c  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
00037e  1a40              SUBS     r0,r0,r1
000380  9004              STR      r0,[sp,#0x10]
;;;172    				var32a = var32a << 12;
000382  9804              LDR      r0,[sp,#0x10]
000384  0300              LSLS     r0,r0,#12
000386  9004              STR      r0,[sp,#0x10]
;;;173    				var16 = Modify_B_READ - Modify_A_READ;
000388  4821              LDR      r0,|L3.1040|
00038a  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
00038c  491d              LDR      r1,|L3.1028|
00038e  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
000390  1a40              SUBS     r0,r0,r1
000392  9005              STR      r0,[sp,#0x14]
;;;174    				var32a = var32a / var16;
000394  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000398  fbb0f0f1          UDIV     r0,r0,r1
00039c  9004              STR      r0,[sp,#0x10]
;;;175    				CLists.CREG_Load_CorrectionV_LOW = var32a;
00039e  491e              LDR      r1,|L3.1048|
0003a0  9804              LDR      r0,[sp,#0x10]
0003a2  6448              STR      r0,[r1,#0x44]  ; CLists
;;;176    				var32a=0;
0003a4  2000              MOVS     r0,#0
0003a6  9004              STR      r0,[sp,#0x10]
;;;177    				var32a = Modify_B_ACT;
0003a8  481a              LDR      r0,|L3.1044|
0003aa  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
0003ac  9004              STR      r0,[sp,#0x10]
;;;178    				var32a = var32a << 12;
0003ae  9804              LDR      r0,[sp,#0x10]
0003b0  0300              LSLS     r0,r0,#12
0003b2  9004              STR      r0,[sp,#0x10]
;;;179    				var32b = Modify_B_READ;
0003b4  4816              LDR      r0,|L3.1040|
0003b6  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
0003b8  9003              STR      r0,[sp,#0xc]
;;;180    				var32b = var32b * CLists.CREG_Load_CorrectionV_LOW;    //内阻电压测量参数低档	
0003ba  4608              MOV      r0,r1
0003bc  6c40              LDR      r0,[r0,#0x44]  ; CLists
0003be  9903              LDR      r1,[sp,#0xc]
0003c0  4348              MULS     r0,r1,r0
0003c2  9003              STR      r0,[sp,#0xc]
;;;181    				if (var32a < var32b)
0003c4  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0003c8  4288              CMP      r0,r1
0003ca  d227              BCS      |L3.1052|
;;;182    				{
;;;183    					var32b = var32b - var32a;
0003cc  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0003d0  1a40              SUBS     r0,r0,r1
0003d2  9003              STR      r0,[sp,#0xc]
;;;184    					CLists.CREG_LoadV_Offset_LOW = var32b;     //内阻电压测量参数  
0003d4  4910              LDR      r1,|L3.1048|
0003d6  9803              LDR      r0,[sp,#0xc]
0003d8  f8c10088          STR      r0,[r1,#0x88]  ; CLists
;;;185    					CLists.CPolar0 |= 0x01;
0003dc  4608              MOV      r0,r1
0003de  f89000cc          LDRB     r0,[r0,#0xcc]  ; CLists
0003e2  f0400001          ORR      r0,r0,#1
0003e6  f88100cc          STRB     r0,[r1,#0xcc]
0003ea  e026              B        |L3.1082|
                  |L3.1004|
                          DCD      UART_Buffer_Rece
                  |L3.1008|
                          DCD      ADDR
                  |L3.1012|
                          DCD      UART_Buffer_Send
                  |L3.1016|
                          DCD      Run_Control
                  |L3.1020|
                          DCD      Transmit_BUFFERsize
                  |L3.1024|
                          DCD      flagA
                  |L3.1028|
                          DCD      Modify_A_READ
                  |L3.1032|
                          DCD      Modify_A_ACT
                  |L3.1036|
                          DCD      Vmon_Load_value
                  |L3.1040|
                          DCD      Modify_B_READ
                  |L3.1044|
                          DCD      Modify_B_ACT
                  |L3.1048|
                          DCD      CLists
                  |L3.1052|
;;;186    				}
;;;187    				else 
;;;188    				{
;;;189    					var32a = var32a - var32b;
00041c  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000420  1a40              SUBS     r0,r0,r1
000422  9004              STR      r0,[sp,#0x10]
;;;190    					CLists.CREG_LoadV_Offset_LOW = var32a;
000424  49fd              LDR      r1,|L3.2076|
000426  9804              LDR      r0,[sp,#0x10]
000428  f8c10088          STR      r0,[r1,#0x88]  ; CLists
;;;191    					CLists.CPolar0 &= ~0x01;
00042c  4608              MOV      r0,r1
00042e  f89000cc          LDRB     r0,[r0,#0xcc]  ; CLists
000432  f0200001          BIC      r0,r0,#1
000436  f88100cc          STRB     r0,[r1,#0xcc]
                  |L3.1082|
;;;192    				}			
;;;193    					//参数写进FLASH
;;;194    				Flag_DAC_OFF=0;
00043a  48f9              LDR      r0,|L3.2080|
00043c  6800              LDR      r0,[r0,#0]  ; flagB
00043e  f0200008          BIC      r0,r0,#8
000442  49f7              LDR      r1,|L3.2080|
000444  6008              STR      r0,[r1,#0]  ; flagB
;;;195    			}
000446  bf00              NOP      
                  |L3.1096|
;;;196    			
;;;197    			/**************负载电压高档校准***************************/
;;;198    			if(UART_Buffer_Rece[1] == 0x03)
000448  48f6              LDR      r0,|L3.2084|
00044a  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
00044c  2803              CMP      r0,#3
00044e  d110              BNE      |L3.1138|
;;;199    			{
;;;200    				Modify_A_READ=0;
000450  2000              MOVS     r0,#0
000452  49f5              LDR      r1,|L3.2088|
000454  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;201    				Modify_A_ACT=0;
000456  49f5              LDR      r1,|L3.2092|
000458  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;202    				Modify_A_READ = Vmon_Load_value;//测量电压值
00045a  48f5              LDR      r0,|L3.2096|
00045c  8800              LDRH     r0,[r0,#0]  ; Vmon_Load_value
00045e  49f2              LDR      r1,|L3.2088|
000460  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;203    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
000462  48f0              LDR      r0,|L3.2084|
000464  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000466  49ef              LDR      r1,|L3.2084|
000468  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
00046a  eb002001          ADD      r0,r0,r1,LSL #8
00046e  49ef              LDR      r1,|L3.2092|
000470  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.1138|
;;;204    			}
;;;205    			if (UART_Buffer_Rece[1] == 0x04)			   //电压测量校准完成
000472  48ec              LDR      r0,|L3.2084|
000474  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000476  2804              CMP      r0,#4
000478  d163              BNE      |L3.1346|
;;;206    			{
;;;207    				vu32 var16;
;;;208    				vu32 var32a;
;;;209    				vu32 var32b;
;;;210    				
;;;211    				vu32 var16a;
;;;212    				vu32 var32c;
;;;213    				vu32 var32d;
;;;214    				Modify_B_READ=0;
00047a  2000              MOVS     r0,#0
00047c  49ed              LDR      r1,|L3.2100|
00047e  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;215    				Modify_B_ACT=0;
000480  49ed              LDR      r1,|L3.2104|
000482  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;216    				Modify_B_READ =Vmon_Load_value;//测量电压值
000484  48ea              LDR      r0,|L3.2096|
000486  8800              LDRH     r0,[r0,#0]  ; Vmon_Load_value
000488  49ea              LDR      r1,|L3.2100|
00048a  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;217    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段
00048c  48e5              LDR      r0,|L3.2084|
00048e  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000490  49e4              LDR      r1,|L3.2084|
000492  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000494  eb002001          ADD      r0,r0,r1,LSL #8
000498  49e7              LDR      r1,|L3.2104|
00049a  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;218    				var32a = Modify_B_ACT;
00049c  4608              MOV      r0,r1
00049e  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
0004a0  9004              STR      r0,[sp,#0x10]
;;;219    				var32a = var32a - Modify_A_ACT;
0004a2  49e2              LDR      r1,|L3.2092|
0004a4  9804              LDR      r0,[sp,#0x10]
0004a6  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
0004a8  1a40              SUBS     r0,r0,r1
0004aa  9004              STR      r0,[sp,#0x10]
;;;220    				var32a = var32a << 12;
0004ac  9804              LDR      r0,[sp,#0x10]
0004ae  0300              LSLS     r0,r0,#12
0004b0  9004              STR      r0,[sp,#0x10]
;;;221    				var16 = Modify_B_READ - Modify_A_READ;
0004b2  48e0              LDR      r0,|L3.2100|
0004b4  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
0004b6  49dc              LDR      r1,|L3.2088|
0004b8  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
0004ba  1a40              SUBS     r0,r0,r1
0004bc  9005              STR      r0,[sp,#0x14]
;;;222    				var32a = var32a / var16;
0004be  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0004c2  fbb0f0f1          UDIV     r0,r0,r1
0004c6  9004              STR      r0,[sp,#0x10]
;;;223    				CLists.CREG_Load_CorrectionV_HIG = var32a;
0004c8  49d4              LDR      r1,|L3.2076|
0004ca  9804              LDR      r0,[sp,#0x10]
0004cc  6488              STR      r0,[r1,#0x48]  ; CLists
;;;224    				var32a=0;
0004ce  2000              MOVS     r0,#0
0004d0  9004              STR      r0,[sp,#0x10]
;;;225    				var32a = Modify_B_ACT;
0004d2  48d9              LDR      r0,|L3.2104|
0004d4  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
0004d6  9004              STR      r0,[sp,#0x10]
;;;226    				var32a = var32a << 12;
0004d8  9804              LDR      r0,[sp,#0x10]
0004da  0300              LSLS     r0,r0,#12
0004dc  9004              STR      r0,[sp,#0x10]
;;;227    				var32b = Modify_B_READ;
0004de  48d5              LDR      r0,|L3.2100|
0004e0  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
0004e2  9003              STR      r0,[sp,#0xc]
;;;228    				var32b = var32b * CLists.CREG_Load_CorrectionV_HIG;      //内阻电压测量参数高档
0004e4  4608              MOV      r0,r1
0004e6  6c80              LDR      r0,[r0,#0x48]  ; CLists
0004e8  9903              LDR      r1,[sp,#0xc]
0004ea  4348              MULS     r0,r1,r0
0004ec  9003              STR      r0,[sp,#0xc]
;;;229    				if (var32a < var32b)
0004ee  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0004f2  4288              CMP      r0,r1
0004f4  d20f              BCS      |L3.1302|
;;;230    				{
;;;231    					var32b = var32b - var32a;
0004f6  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0004fa  1a40              SUBS     r0,r0,r1
0004fc  9003              STR      r0,[sp,#0xc]
;;;232    					CLists.CREG_LoadV_Offset_HIG = var32b;     //内阻电压测量参数
0004fe  49c7              LDR      r1,|L3.2076|
000500  9803              LDR      r0,[sp,#0xc]
000502  f8c1008c          STR      r0,[r1,#0x8c]  ; CLists
;;;233    					CLists.CPolar0 |= 0x04;
000506  4608              MOV      r0,r1
000508  f89000cc          LDRB     r0,[r0,#0xcc]  ; CLists
00050c  f0400004          ORR      r0,r0,#4
000510  f88100cc          STRB     r0,[r1,#0xcc]
000514  e00e              B        |L3.1332|
                  |L3.1302|
;;;234    				}
;;;235    				else 
;;;236    				{
;;;237    					var32a = var32a - var32b;
000516  e9dd1003          LDRD     r1,r0,[sp,#0xc]
00051a  1a40              SUBS     r0,r0,r1
00051c  9004              STR      r0,[sp,#0x10]
;;;238    					CLists.CREG_LoadV_Offset_HIG = var32a;
00051e  49bf              LDR      r1,|L3.2076|
000520  9804              LDR      r0,[sp,#0x10]
000522  f8c1008c          STR      r0,[r1,#0x8c]  ; CLists
;;;239    					CLists.CPolar0 &= ~0x04;
000526  4608              MOV      r0,r1
000528  f89000cc          LDRB     r0,[r0,#0xcc]  ; CLists
00052c  f0200004          BIC      r0,r0,#4
000530  f88100cc          STRB     r0,[r1,#0xcc]
                  |L3.1332|
;;;240    				}			
;;;241    					//参数写进FLASH
;;;242    				Flag_DAC_OFF=0;
000534  48ba              LDR      r0,|L3.2080|
000536  6800              LDR      r0,[r0,#0]  ; flagB
000538  f0200008          BIC      r0,r0,#8
00053c  49b8              LDR      r1,|L3.2080|
00053e  6008              STR      r0,[r1,#0]  ; flagB
;;;243    			}
000540  bf00              NOP      
                  |L3.1346|
;;;244    	     /*****************负载电流测量和控制校准*************************/
;;;245    			if (UART_Buffer_Rece[1] == 0x05)			   //CC模式校准
000542  48b8              LDR      r0,|L3.2084|
000544  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000546  2805              CMP      r0,#5
000548  d116              BNE      |L3.1400|
;;;246    			{
;;;247    				Modify_A_READ=0;
00054a  2000              MOVS     r0,#0
00054c  49b6              LDR      r1,|L3.2088|
00054e  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;248    				Modify_C_READ=0;
000550  49ba              LDR      r1,|L3.2108|
000552  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;249    				Modify_A_ACT=0;
000554  49b5              LDR      r1,|L3.2092|
000556  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;250    				Modify_A_READ = Imon_Load_value;//
000558  48b9              LDR      r0,|L3.2112|
00055a  8800              LDRH     r0,[r0,#0]  ; Imon_Load_value
00055c  49b2              LDR      r1,|L3.2088|
00055e  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;251    				Modify_C_READ = Contr_Laod;//
000560  48b8              LDR      r0,|L3.2116|
000562  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
000564  49b5              LDR      r1,|L3.2108|
000566  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;252    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
000568  48ae              LDR      r0,|L3.2084|
00056a  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
00056c  49ad              LDR      r1,|L3.2084|
00056e  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000570  eb002001          ADD      r0,r0,r1,LSL #8
000574  49ad              LDR      r1,|L3.2092|
000576  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.1400|
;;;253    			}
;;;254    			if (UART_Buffer_Rece[1] == 0x06)			   
000578  48aa              LDR      r0,|L3.2084|
00057a  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
00057c  2806              CMP      r0,#6
00057e  d17d              BNE      |L3.1660|
;;;255    			{
;;;256    				vu32 var16;
;;;257    				vu32 var32a;
;;;258    				vu32 var32b;
;;;259    				
;;;260    				vu32 var16a;
;;;261    				vu32 var32c;
;;;262    				vu32 var32d;
;;;263    				Modify_B_READ=0;
000580  2000              MOVS     r0,#0
000582  49ac              LDR      r1,|L3.2100|
000584  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;264    				Modify_D_READ=0;
000586  49b0              LDR      r1,|L3.2120|
000588  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;265    				Modify_B_ACT=0;
00058a  49ab              LDR      r1,|L3.2104|
00058c  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;266    				
;;;267    				Modify_B_READ = Imon_Load_value;
00058e  48ac              LDR      r0,|L3.2112|
000590  8800              LDRH     r0,[r0,#0]  ; Imon_Load_value
000592  49a8              LDR      r1,|L3.2100|
000594  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;268    				Modify_D_READ = Contr_Laod;
000596  48ab              LDR      r0,|L3.2116|
000598  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
00059a  49ab              LDR      r1,|L3.2120|
00059c  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;269    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
00059e  48a1              LDR      r0,|L3.2084|
0005a0  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0005a2  49a0              LDR      r1,|L3.2084|
0005a4  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0005a6  eb002001          ADD      r0,r0,r1,LSL #8
0005aa  49a3              LDR      r1,|L3.2104|
0005ac  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;270    				
;;;271    				var32a = Modify_B_ACT;
0005ae  4608              MOV      r0,r1
0005b0  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
0005b2  9004              STR      r0,[sp,#0x10]
;;;272    				var32a = var32a - Modify_A_ACT;
0005b4  499d              LDR      r1,|L3.2092|
0005b6  9804              LDR      r0,[sp,#0x10]
0005b8  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
0005ba  1a40              SUBS     r0,r0,r1
0005bc  9004              STR      r0,[sp,#0x10]
;;;273    				var32a = var32a << 12;
0005be  9804              LDR      r0,[sp,#0x10]
0005c0  0300              LSLS     r0,r0,#12
0005c2  9004              STR      r0,[sp,#0x10]
;;;274    				var16 = Modify_B_READ - Modify_A_READ;
0005c4  489b              LDR      r0,|L3.2100|
0005c6  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
0005c8  4997              LDR      r1,|L3.2088|
0005ca  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
0005cc  1a40              SUBS     r0,r0,r1
0005ce  9005              STR      r0,[sp,#0x14]
;;;275    				var32a = var32a / var16;
0005d0  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0005d4  fbb0f0f1          UDIV     r0,r0,r1
0005d8  9004              STR      r0,[sp,#0x10]
;;;276    				CLists.CREG_Load_CorrectionA_LOW = var32a;
0005da  4990              LDR      r1,|L3.2076|
0005dc  9804              LDR      r0,[sp,#0x10]
0005de  64c8              STR      r0,[r1,#0x4c]  ; CLists
;;;277    				var32a = Modify_B_ACT;
0005e0  4895              LDR      r0,|L3.2104|
0005e2  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
0005e4  9004              STR      r0,[sp,#0x10]
;;;278    				var32a = var32a << 12;
0005e6  9804              LDR      r0,[sp,#0x10]
0005e8  0300              LSLS     r0,r0,#12
0005ea  9004              STR      r0,[sp,#0x10]
;;;279    				var32b = Modify_B_READ;
0005ec  4891              LDR      r0,|L3.2100|
0005ee  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
0005f0  9003              STR      r0,[sp,#0xc]
;;;280    				var32b = var32b * CLists.CREG_Load_CorrectionA_LOW;    //负载CC模式电流测量参数低档
0005f2  4608              MOV      r0,r1
0005f4  6cc0              LDR      r0,[r0,#0x4c]  ; CLists
0005f6  9903              LDR      r1,[sp,#0xc]
0005f8  4348              MULS     r0,r1,r0
0005fa  9003              STR      r0,[sp,#0xc]
;;;281    				if (var32a < var32b)
0005fc  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000600  4288              CMP      r0,r1
000602  d20f              BCS      |L3.1572|
;;;282    				{
;;;283    					var32b = var32b - var32a;
000604  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000608  1a40              SUBS     r0,r0,r1
00060a  9003              STR      r0,[sp,#0xc]
;;;284    					CLists.CREG_LoadA_Offset_LOW = var32b;     //负载CC模式电流测量参数
00060c  4983              LDR      r1,|L3.2076|
00060e  9803              LDR      r0,[sp,#0xc]
000610  f8c10090          STR      r0,[r1,#0x90]  ; CLists
;;;285    					CLists.CPolar2 |= 0x01;
000614  4608              MOV      r0,r1
000616  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
00061a  f0400001          ORR      r0,r0,#1
00061e  f88100ce          STRB     r0,[r1,#0xce]
000622  e00e              B        |L3.1602|
                  |L3.1572|
;;;286    				}
;;;287    				else 
;;;288    				{
;;;289    					var32a = var32a - var32b;
000624  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000628  1a40              SUBS     r0,r0,r1
00062a  9004              STR      r0,[sp,#0x10]
;;;290    					CLists.CREG_LoadA_Offset_LOW = var32a;
00062c  497b              LDR      r1,|L3.2076|
00062e  9804              LDR      r0,[sp,#0x10]
000630  f8c10090          STR      r0,[r1,#0x90]  ; CLists
;;;291    					CLists.CPolar2 &= ~0x01;					
000634  4608              MOV      r0,r1
000636  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
00063a  f0200001          BIC      r0,r0,#1
00063e  f88100ce          STRB     r0,[r1,#0xce]
                  |L3.1602|
;;;292    				}
;;;293    	//---------------------------------------------------------------------------------//
;;;294    				var32c = Modify_B_ACT; 
000642  487d              LDR      r0,|L3.2104|
000644  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000646  9001              STR      r0,[sp,#4]
;;;295    				var32c = var32c - Modify_A_ACT;
000648  4978              LDR      r1,|L3.2092|
00064a  9801              LDR      r0,[sp,#4]
00064c  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
00064e  1a40              SUBS     r0,r0,r1
000650  9001              STR      r0,[sp,#4]
;;;296    				var32c = var32c << 12;
000652  9801              LDR      r0,[sp,#4]
000654  0300              LSLS     r0,r0,#12
000656  9001              STR      r0,[sp,#4]
;;;297    				var16a=Modify_D_READ-Modify_C_READ;
000658  487b              LDR      r0,|L3.2120|
00065a  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
00065c  4977              LDR      r1,|L3.2108|
00065e  6809              LDR      r1,[r1,#0]  ; Modify_C_READ
000660  1a40              SUBS     r0,r0,r1
000662  9002              STR      r0,[sp,#8]
;;;298    				var16a=var16a*2;
000664  9802              LDR      r0,[sp,#8]
000666  0040              LSLS     r0,r0,#1
000668  9002              STR      r0,[sp,#8]
;;;299    				var32c=var32c/var16a;
00066a  e9dd0101          LDRD     r0,r1,[sp,#4]
00066e  fbb0f0f1          UDIV     r0,r0,r1
000672  9001              STR      r0,[sp,#4]
;;;300    				CLists.CSET_Load_CorrectionA_LOW = var32c;
000674  4969              LDR      r1,|L3.2076|
000676  9801              LDR      r0,[sp,#4]
000678  65c8              STR      r0,[r1,#0x5c]  ; CLists
;;;301    				var32c = Modify_B_ACT;
00067a  e000              B        |L3.1662|
                  |L3.1660|
00067c  e038              B        |L3.1776|
                  |L3.1662|
00067e  486e              LDR      r0,|L3.2104|
000680  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000682  9001              STR      r0,[sp,#4]
;;;302    				var32c = var32c << 12;
000684  9801              LDR      r0,[sp,#4]
000686  0300              LSLS     r0,r0,#12
000688  9001              STR      r0,[sp,#4]
;;;303    				var32d = CLists.CSET_Load_CorrectionA_LOW;     //负载CC模式控制电流低档
00068a  4608              MOV      r0,r1
00068c  6dc0              LDR      r0,[r0,#0x5c]  ; CLists
00068e  9000              STR      r0,[sp,#0]
;;;304    				var32d = var32d * (Modify_D_READ*2);
000690  486d              LDR      r0,|L3.2120|
000692  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000694  0040              LSLS     r0,r0,#1
000696  9900              LDR      r1,[sp,#0]
000698  4348              MULS     r0,r1,r0
00069a  9000              STR      r0,[sp,#0]
;;;305    				if (var32c < var32d)
00069c  e9dd1000          LDRD     r1,r0,[sp,#0]
0006a0  4288              CMP      r0,r1
0006a2  d20f              BCS      |L3.1732|
;;;306    				{
;;;307    					var32d = var32d - var32c;
0006a4  e9dd0100          LDRD     r0,r1,[sp,#0]
0006a8  1a40              SUBS     r0,r0,r1
0006aa  9000              STR      r0,[sp,#0]
;;;308    					CLists.CSET_LoadA_Offset_LOW = var32d;    //负载CC模式控制电流参数  	
0006ac  495b              LDR      r1,|L3.2076|
0006ae  9800              LDR      r0,[sp,#0]
0006b0  f8c100a0          STR      r0,[r1,#0xa0]  ; CLists
;;;309    					CLists.CPolar2 |= 0x04;
0006b4  4608              MOV      r0,r1
0006b6  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
0006ba  f0400004          ORR      r0,r0,#4
0006be  f88100ce          STRB     r0,[r1,#0xce]
0006c2  e00e              B        |L3.1762|
                  |L3.1732|
;;;310    				}
;;;311    				else 
;;;312    				{
;;;313    					var32c = var32c - var32d;
0006c4  e9dd1000          LDRD     r1,r0,[sp,#0]
0006c8  1a40              SUBS     r0,r0,r1
0006ca  9001              STR      r0,[sp,#4]
;;;314    					CLists.CSET_LoadA_Offset_LOW = var32c;
0006cc  4953              LDR      r1,|L3.2076|
0006ce  9801              LDR      r0,[sp,#4]
0006d0  f8c100a0          STR      r0,[r1,#0xa0]  ; CLists
;;;315    					CLists.CPolar2 &= ~0x04;
0006d4  4608              MOV      r0,r1
0006d6  f89000ce          LDRB     r0,[r0,#0xce]  ; CLists
0006da  f0200004          BIC      r0,r0,#4
0006de  f88100ce          STRB     r0,[r1,#0xce]
                  |L3.1762|
;;;316    				}
;;;317    					
;;;318    				Flag_DAC_OFF =0;
0006e2  484f              LDR      r0,|L3.2080|
0006e4  6800              LDR      r0,[r0,#0]  ; flagB
0006e6  f0200008          BIC      r0,r0,#8
0006ea  494d              LDR      r1,|L3.2080|
0006ec  6008              STR      r0,[r1,#0]  ; flagB
;;;319    			}
0006ee  bf00              NOP      
                  |L3.1776|
;;;320    			
;;;321    			/*****************负载高档电流测量和控制校准*************************/
;;;322    			if (UART_Buffer_Rece[1] == 0x07)			   //CC模式校准
0006f0  484c              LDR      r0,|L3.2084|
0006f2  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0006f4  2807              CMP      r0,#7
0006f6  d116              BNE      |L3.1830|
;;;323    			{
;;;324    				Modify_A_READ=0;
0006f8  2000              MOVS     r0,#0
0006fa  494b              LDR      r1,|L3.2088|
0006fc  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;325    				Modify_C_READ=0;
0006fe  494f              LDR      r1,|L3.2108|
000700  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;326    				Modify_A_ACT=0;
000702  494a              LDR      r1,|L3.2092|
000704  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;327    				Modify_A_READ = Imon_Load_value;//
000706  484e              LDR      r0,|L3.2112|
000708  8800              LDRH     r0,[r0,#0]  ; Imon_Load_value
00070a  4947              LDR      r1,|L3.2088|
00070c  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;328    				Modify_C_READ = Contr_Laod;//
00070e  484d              LDR      r0,|L3.2116|
000710  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
000712  494a              LDR      r1,|L3.2108|
000714  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;329    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
000716  4843              LDR      r0,|L3.2084|
000718  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
00071a  4942              LDR      r1,|L3.2084|
00071c  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
00071e  eb002001          ADD      r0,r0,r1,LSL #8
000722  4942              LDR      r1,|L3.2092|
000724  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.1830|
;;;330    			}
;;;331    			if (UART_Buffer_Rece[1] == 0x08)			   
000726  483f              LDR      r0,|L3.2084|
000728  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
00072a  2808              CMP      r0,#8
00072c  d175              BNE      |L3.2074|
;;;332    			{
;;;333    				vu32 var16;
;;;334    				vu32 var32a;
;;;335    				vu32 var32b;
;;;336    				
;;;337    				vu32 var16a;
;;;338    				vu32 var32c;
;;;339    				vu32 var32d;
;;;340    				Modify_B_READ=0;
00072e  2000              MOVS     r0,#0
000730  4940              LDR      r1,|L3.2100|
000732  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;341    				Modify_D_READ=0;
000734  4944              LDR      r1,|L3.2120|
000736  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;342    				Modify_B_ACT=0;
000738  493f              LDR      r1,|L3.2104|
00073a  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;343    				
;;;344    				Modify_B_READ = Imon_Load_value;
00073c  4840              LDR      r0,|L3.2112|
00073e  8800              LDRH     r0,[r0,#0]  ; Imon_Load_value
000740  493c              LDR      r1,|L3.2100|
000742  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;345    				Modify_D_READ = Contr_Laod;
000744  483f              LDR      r0,|L3.2116|
000746  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
000748  493f              LDR      r1,|L3.2120|
00074a  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;346    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
00074c  4835              LDR      r0,|L3.2084|
00074e  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000750  4934              LDR      r1,|L3.2084|
000752  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000754  eb002001          ADD      r0,r0,r1,LSL #8
000758  4937              LDR      r1,|L3.2104|
00075a  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;347    				
;;;348    				var32a = Modify_B_ACT;
00075c  4608              MOV      r0,r1
00075e  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000760  9004              STR      r0,[sp,#0x10]
;;;349    				var32a = var32a - Modify_A_ACT;
000762  4932              LDR      r1,|L3.2092|
000764  9804              LDR      r0,[sp,#0x10]
000766  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000768  1a40              SUBS     r0,r0,r1
00076a  9004              STR      r0,[sp,#0x10]
;;;350    				var32a = var32a << 12;
00076c  9804              LDR      r0,[sp,#0x10]
00076e  0300              LSLS     r0,r0,#12
000770  9004              STR      r0,[sp,#0x10]
;;;351    				var16 = Modify_B_READ - Modify_A_READ;
000772  4830              LDR      r0,|L3.2100|
000774  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000776  492c              LDR      r1,|L3.2088|
000778  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
00077a  1a40              SUBS     r0,r0,r1
00077c  9005              STR      r0,[sp,#0x14]
;;;352    				var32a = var32a / var16;
00077e  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000782  fbb0f0f1          UDIV     r0,r0,r1
000786  9004              STR      r0,[sp,#0x10]
;;;353    				CLists.CREG_Load_CorrectionA_LOW = var32a;
000788  4924              LDR      r1,|L3.2076|
00078a  9804              LDR      r0,[sp,#0x10]
00078c  64c8              STR      r0,[r1,#0x4c]  ; CLists
;;;354    				var32a = Modify_B_ACT;
00078e  482a              LDR      r0,|L3.2104|
000790  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000792  9004              STR      r0,[sp,#0x10]
;;;355    				var32a = var32a << 12;
000794  9804              LDR      r0,[sp,#0x10]
000796  0300              LSLS     r0,r0,#12
000798  9004              STR      r0,[sp,#0x10]
;;;356    				var32b = Modify_B_READ;
00079a  4826              LDR      r0,|L3.2100|
00079c  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
00079e  9003              STR      r0,[sp,#0xc]
;;;357    				var32b = var32b * CLists.CREG_Load_CorrectionA_LOW;   //负载CC模式电流测量参数低档
0007a0  4608              MOV      r0,r1
0007a2  6cc0              LDR      r0,[r0,#0x4c]  ; CLists
0007a4  9903              LDR      r1,[sp,#0xc]
0007a6  4348              MULS     r0,r1,r0
0007a8  9003              STR      r0,[sp,#0xc]
;;;358    				if (var32a < var32b)
0007aa  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0007ae  4288              CMP      r0,r1
0007b0  d20f              BCS      |L3.2002|
;;;359    				{
;;;360    					var32b = var32b - var32a;
0007b2  e9dd0103          LDRD     r0,r1,[sp,#0xc]
0007b6  1a40              SUBS     r0,r0,r1
0007b8  9003              STR      r0,[sp,#0xc]
;;;361    					CLists.CREG_LoadA_Offset_HIG = var32b;     //负载CC模式电流测量参数
0007ba  4918              LDR      r1,|L3.2076|
0007bc  9803              LDR      r0,[sp,#0xc]
0007be  f8c10094          STR      r0,[r1,#0x94]  ; CLists
;;;362    					CLists.CPolar3 |= 0x01;
0007c2  4608              MOV      r0,r1
0007c4  f89000cf          LDRB     r0,[r0,#0xcf]  ; CLists
0007c8  f0400001          ORR      r0,r0,#1
0007cc  f88100cf          STRB     r0,[r1,#0xcf]
0007d0  e00e              B        |L3.2032|
                  |L3.2002|
;;;363    				}
;;;364    				else 
;;;365    				{
;;;366    					var32a = var32a - var32b;
0007d2  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0007d6  1a40              SUBS     r0,r0,r1
0007d8  9004              STR      r0,[sp,#0x10]
;;;367    					CLists.CREG_LoadA_Offset_HIG = var32a;
0007da  4910              LDR      r1,|L3.2076|
0007dc  9804              LDR      r0,[sp,#0x10]
0007de  f8c10094          STR      r0,[r1,#0x94]  ; CLists
;;;368    					CLists.CPolar3 &= ~0x01;					
0007e2  4608              MOV      r0,r1
0007e4  f89000cf          LDRB     r0,[r0,#0xcf]  ; CLists
0007e8  f0200001          BIC      r0,r0,#1
0007ec  f88100cf          STRB     r0,[r1,#0xcf]
                  |L3.2032|
;;;369    				}
;;;370    	//---------------------------------------------------------------------------------//
;;;371    				var32c = Modify_B_ACT; 
0007f0  4811              LDR      r0,|L3.2104|
0007f2  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
0007f4  9001              STR      r0,[sp,#4]
;;;372    				var32c = var32c - Modify_A_ACT;
0007f6  490d              LDR      r1,|L3.2092|
0007f8  9801              LDR      r0,[sp,#4]
0007fa  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
0007fc  1a40              SUBS     r0,r0,r1
0007fe  9001              STR      r0,[sp,#4]
;;;373    				var32c = var32c << 12;
000800  9801              LDR      r0,[sp,#4]
000802  0300              LSLS     r0,r0,#12
000804  9001              STR      r0,[sp,#4]
;;;374    				var16a=Modify_D_READ-Modify_C_READ;
000806  4810              LDR      r0,|L3.2120|
000808  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
00080a  490c              LDR      r1,|L3.2108|
00080c  6809              LDR      r1,[r1,#0]  ; Modify_C_READ
00080e  1a40              SUBS     r0,r0,r1
000810  9002              STR      r0,[sp,#8]
;;;375    				var16a=var16a*2;
000812  9802              LDR      r0,[sp,#8]
000814  0040              LSLS     r0,r0,#1
000816  9002              STR      r0,[sp,#8]
;;;376    				var32c=var32c/var16a;
000818  e018              B        |L3.2124|
                  |L3.2074|
00081a  e058              B        |L3.2254|
                  |L3.2076|
                          DCD      CLists
                  |L3.2080|
                          DCD      flagB
                  |L3.2084|
                          DCD      UART_Buffer_Rece
                  |L3.2088|
                          DCD      Modify_A_READ
                  |L3.2092|
                          DCD      Modify_A_ACT
                  |L3.2096|
                          DCD      Vmon_Load_value
                  |L3.2100|
                          DCD      Modify_B_READ
                  |L3.2104|
                          DCD      Modify_B_ACT
                  |L3.2108|
                          DCD      Modify_C_READ
                  |L3.2112|
                          DCD      Imon_Load_value
                  |L3.2116|
                          DCD      Contr_Laod
                  |L3.2120|
                          DCD      Modify_D_READ
                  |L3.2124|
00084c  e9dd0101          LDRD     r0,r1,[sp,#4]
000850  fbb0f0f1          UDIV     r0,r0,r1
000854  9001              STR      r0,[sp,#4]
;;;377    				CLists.CSET_Load_CorrectionA_HIG = var32c;
000856  49fe              LDR      r1,|L3.3152|
000858  9801              LDR      r0,[sp,#4]
00085a  6608              STR      r0,[r1,#0x60]  ; CLists
;;;378    				var32c = Modify_B_ACT;
00085c  48fd              LDR      r0,|L3.3156|
00085e  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000860  9001              STR      r0,[sp,#4]
;;;379    				var32c = var32c << 12;
000862  9801              LDR      r0,[sp,#4]
000864  0300              LSLS     r0,r0,#12
000866  9001              STR      r0,[sp,#4]
;;;380    				var32d = CLists.CSET_Load_CorrectionA_HIG;  //负载CC模式电流测量参数高档
000868  4608              MOV      r0,r1
00086a  6e00              LDR      r0,[r0,#0x60]  ; CLists
00086c  9000              STR      r0,[sp,#0]
;;;381    				var32d = var32d * (Modify_D_READ*2);
00086e  48fa              LDR      r0,|L3.3160|
000870  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000872  0040              LSLS     r0,r0,#1
000874  9900              LDR      r1,[sp,#0]
000876  4348              MULS     r0,r1,r0
000878  9000              STR      r0,[sp,#0]
;;;382    				if (var32c < var32d)
00087a  e9dd1000          LDRD     r1,r0,[sp,#0]
00087e  4288              CMP      r0,r1
000880  d20f              BCS      |L3.2210|
;;;383    				{
;;;384    					var32d = var32d - var32c;
000882  e9dd0100          LDRD     r0,r1,[sp,#0]
000886  1a40              SUBS     r0,r0,r1
000888  9000              STR      r0,[sp,#0]
;;;385    					CLists.CSET_LoadA_Offset_HIG = var32d;   //负载CC模式控制电流参数
00088a  49f1              LDR      r1,|L3.3152|
00088c  9800              LDR      r0,[sp,#0]
00088e  f8c100a4          STR      r0,[r1,#0xa4]  ; CLists
;;;386    					CLists.CPolar3 |= 0x04;
000892  4608              MOV      r0,r1
000894  f89000cf          LDRB     r0,[r0,#0xcf]  ; CLists
000898  f0400004          ORR      r0,r0,#4
00089c  f88100cf          STRB     r0,[r1,#0xcf]
0008a0  e00e              B        |L3.2240|
                  |L3.2210|
;;;387    				}
;;;388    				else 
;;;389    				{
;;;390    					var32c = var32c - var32d;
0008a2  e9dd1000          LDRD     r1,r0,[sp,#0]
0008a6  1a40              SUBS     r0,r0,r1
0008a8  9001              STR      r0,[sp,#4]
;;;391    					CLists.CSET_LoadA_Offset_HIG = var32c;
0008aa  49e9              LDR      r1,|L3.3152|
0008ac  9801              LDR      r0,[sp,#4]
0008ae  f8c100a4          STR      r0,[r1,#0xa4]  ; CLists
;;;392    					CLists.CPolar3 &= ~0x04;
0008b2  4608              MOV      r0,r1
0008b4  f89000cf          LDRB     r0,[r0,#0xcf]  ; CLists
0008b8  f0200004          BIC      r0,r0,#4
0008bc  f88100cf          STRB     r0,[r1,#0xcf]
                  |L3.2240|
;;;393    				}
;;;394    					
;;;395    				Flag_DAC_OFF =0;
0008c0  48e6              LDR      r0,|L3.3164|
0008c2  6800              LDR      r0,[r0,#0]  ; flagB
0008c4  f0200008          BIC      r0,r0,#8
0008c8  49e4              LDR      r1,|L3.3164|
0008ca  6008              STR      r0,[r1,#0]  ; flagB
;;;396    			}
0008cc  bf00              NOP      
                  |L3.2254|
;;;397    	/*************************负载CV模式电压控制校准低档*******************************/
;;;398    			if(UART_Buffer_Rece[1] == 0x09)
0008ce  48e4              LDR      r0,|L3.3168|
0008d0  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0008d2  2809              CMP      r0,#9
0008d4  d112              BNE      |L3.2300|
;;;399    			{
;;;400    				Modify_A_READ=0;
0008d6  2000              MOVS     r0,#0
0008d8  49e2              LDR      r1,|L3.3172|
0008da  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;401    				Modify_C_READ=0;
0008dc  49e2              LDR      r1,|L3.3176|
0008de  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;402    				Modify_A_ACT=0;
0008e0  49e2              LDR      r1,|L3.3180|
0008e2  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;403    				Modify_C_READ = Contr_Laod;//设置电压值
0008e4  48e2              LDR      r0,|L3.3184|
0008e6  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
0008e8  49df              LDR      r1,|L3.3176|
0008ea  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;404    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
0008ec  48dc              LDR      r0,|L3.3168|
0008ee  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0008f0  49db              LDR      r1,|L3.3168|
0008f2  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0008f4  eb002001          ADD      r0,r0,r1,LSL #8
0008f8  49dc              LDR      r1,|L3.3180|
0008fa  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.2300|
;;;405    			}
;;;406    			if (UART_Buffer_Rece[1] == 0x0A)			   //电压测量校准完成
0008fc  48d8              LDR      r0,|L3.3168|
0008fe  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000900  280a              CMP      r0,#0xa
000902  d167              BNE      |L3.2516|
;;;407    			{
;;;408    				vu32 var16;
;;;409    				vu32 var32a;
;;;410    				vu32 var32b;
;;;411    				
;;;412    				vu32 var16a;
;;;413    				vu32 var32c;
;;;414    				vu32 var32d;
;;;415    				
;;;416    				Modify_B_READ=0;
000904  2000              MOVS     r0,#0
000906  49db              LDR      r1,|L3.3188|
000908  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;417    				Modify_D_READ=0;
00090a  49d3              LDR      r1,|L3.3160|
00090c  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;418    				Modify_B_ACT=0;
00090e  49d1              LDR      r1,|L3.3156|
000910  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;419    			
;;;420    				Modify_D_READ =Contr_Laod;//设置电压值
000912  48d7              LDR      r0,|L3.3184|
000914  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
000916  49d0              LDR      r1,|L3.3160|
000918  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;421    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段	
00091a  48d1              LDR      r0,|L3.3168|
00091c  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
00091e  49d0              LDR      r1,|L3.3168|
000920  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000922  eb002001          ADD      r0,r0,r1,LSL #8
000926  49cb              LDR      r1,|L3.3156|
000928  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;422    				var32c = Modify_B_ACT; //CV模式电压控制校准
00092a  4608              MOV      r0,r1
00092c  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
00092e  9004              STR      r0,[sp,#0x10]
;;;423    				var32c = var32c - Modify_A_ACT;
000930  49ce              LDR      r1,|L3.3180|
000932  9804              LDR      r0,[sp,#0x10]
000934  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000936  1a40              SUBS     r0,r0,r1
000938  9004              STR      r0,[sp,#0x10]
;;;424    				var32c = var32c << 12;
00093a  9804              LDR      r0,[sp,#0x10]
00093c  0300              LSLS     r0,r0,#12
00093e  9004              STR      r0,[sp,#0x10]
;;;425    				var16a=Modify_D_READ-Modify_C_READ;
000940  48c5              LDR      r0,|L3.3160|
000942  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000944  49c8              LDR      r1,|L3.3176|
000946  6809              LDR      r1,[r1,#0]  ; Modify_C_READ
000948  1a40              SUBS     r0,r0,r1
00094a  9005              STR      r0,[sp,#0x14]
;;;426    				var16a=(var16a*2);
00094c  9805              LDR      r0,[sp,#0x14]
00094e  0040              LSLS     r0,r0,#1
000950  9005              STR      r0,[sp,#0x14]
;;;427    				var32c=var32c/var16a;
000952  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000956  fbb0f0f1          UDIV     r0,r0,r1
00095a  9004              STR      r0,[sp,#0x10]
;;;428    				CLists.CSET_Load_CorrectionV_LOW = var32c;
00095c  49bc              LDR      r1,|L3.3152|
00095e  9804              LDR      r0,[sp,#0x10]
000960  6548              STR      r0,[r1,#0x54]  ; CLists
;;;429    				var32c = Modify_B_ACT;
000962  48bc              LDR      r0,|L3.3156|
000964  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000966  9004              STR      r0,[sp,#0x10]
;;;430    				var32c = var32c << 12;
000968  9804              LDR      r0,[sp,#0x10]
00096a  0300              LSLS     r0,r0,#12
00096c  9004              STR      r0,[sp,#0x10]
;;;431    				var32d = CLists.CSET_Load_CorrectionV_LOW;   //负载CV模式控制电压抵挡
00096e  4608              MOV      r0,r1
000970  6d40              LDR      r0,[r0,#0x54]  ; CLists
000972  9003              STR      r0,[sp,#0xc]
;;;432    				var32d = var32d * (Modify_D_READ*2);
000974  48b8              LDR      r0,|L3.3160|
000976  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000978  0040              LSLS     r0,r0,#1
00097a  9903              LDR      r1,[sp,#0xc]
00097c  4348              MULS     r0,r1,r0
00097e  9003              STR      r0,[sp,#0xc]
;;;433    				if (var32c < var32d)
000980  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000984  4288              CMP      r0,r1
000986  d20f              BCS      |L3.2472|
;;;434    				{
;;;435    					var32d = var32d - var32c;
000988  e9dd0103          LDRD     r0,r1,[sp,#0xc]
00098c  1a40              SUBS     r0,r0,r1
00098e  9003              STR      r0,[sp,#0xc]
;;;436    					CLists.CSET_LoadV_Offset_LOW = var32d;    	//负载CV模式控制电压参数   
000990  49af              LDR      r1,|L3.3152|
000992  9803              LDR      r0,[sp,#0xc]
000994  f8c10098          STR      r0,[r1,#0x98]  ; CLists
;;;437    					CLists.CPolar1 |= 0x01;
000998  4608              MOV      r0,r1
00099a  f89000cd          LDRB     r0,[r0,#0xcd]  ; CLists
00099e  f0400001          ORR      r0,r0,#1
0009a2  f88100cd          STRB     r0,[r1,#0xcd]
0009a6  e00e              B        |L3.2502|
                  |L3.2472|
;;;438    				}
;;;439    				else 
;;;440    				{
;;;441    					var32c = var32c - var32d;
0009a8  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0009ac  1a40              SUBS     r0,r0,r1
0009ae  9004              STR      r0,[sp,#0x10]
;;;442    					CLists.CSET_LoadV_Offset_LOW = var32c;
0009b0  49a7              LDR      r1,|L3.3152|
0009b2  9804              LDR      r0,[sp,#0x10]
0009b4  f8c10098          STR      r0,[r1,#0x98]  ; CLists
;;;443    					CLists.CPolar1 &= ~0x01;
0009b8  4608              MOV      r0,r1
0009ba  f89000cd          LDRB     r0,[r0,#0xcd]  ; CLists
0009be  f0200001          BIC      r0,r0,#1
0009c2  f88100cd          STRB     r0,[r1,#0xcd]
                  |L3.2502|
;;;444    				}
;;;445    					//参数写进FLASH
;;;446    				Flag_DAC_OFF=0;
0009c6  48a5              LDR      r0,|L3.3164|
0009c8  6800              LDR      r0,[r0,#0]  ; flagB
0009ca  f0200008          BIC      r0,r0,#8
0009ce  49a3              LDR      r1,|L3.3164|
0009d0  6008              STR      r0,[r1,#0]  ; flagB
;;;447    			}
0009d2  bf00              NOP      
                  |L3.2516|
;;;448    			/*************************负载CV模式电压控制校准低档*******************************/
;;;449    			if(UART_Buffer_Rece[1] == 0x0B)
0009d4  48a2              LDR      r0,|L3.3168|
0009d6  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0009d8  280b              CMP      r0,#0xb
0009da  d112              BNE      |L3.2562|
;;;450    			{
;;;451    				Modify_A_READ=0;
0009dc  2000              MOVS     r0,#0
0009de  49a1              LDR      r1,|L3.3172|
0009e0  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;452    				Modify_C_READ=0;
0009e2  49a1              LDR      r1,|L3.3176|
0009e4  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;453    				Modify_A_ACT=0;
0009e6  49a1              LDR      r1,|L3.3180|
0009e8  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;454    				Modify_C_READ = Contr_Laod;//设置电压值
0009ea  48a1              LDR      r0,|L3.3184|
0009ec  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
0009ee  499e              LDR      r1,|L3.3176|
0009f0  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;455    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
0009f2  489b              LDR      r0,|L3.3168|
0009f4  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0009f6  499a              LDR      r1,|L3.3168|
0009f8  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0009fa  eb002001          ADD      r0,r0,r1,LSL #8
0009fe  499b              LDR      r1,|L3.3180|
000a00  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.2562|
;;;456    			}
;;;457    			if (UART_Buffer_Rece[1] == 0x0C)			   //电压测量校准完成
000a02  4897              LDR      r0,|L3.3168|
000a04  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000a06  280c              CMP      r0,#0xc
000a08  d167              BNE      |L3.2778|
;;;458    			{
;;;459    				vu32 var16;
;;;460    				vu32 var32a;
;;;461    				vu32 var32b;
;;;462    				
;;;463    				vu32 var16a;
;;;464    				vu32 var32c;
;;;465    				vu32 var32d;
;;;466    				
;;;467    				Modify_B_READ=0;
000a0a  2000              MOVS     r0,#0
000a0c  4999              LDR      r1,|L3.3188|
000a0e  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;468    				Modify_D_READ=0;
000a10  4991              LDR      r1,|L3.3160|
000a12  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;469    				Modify_B_ACT=0;
000a14  498f              LDR      r1,|L3.3156|
000a16  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;470    			
;;;471    				Modify_D_READ =Contr_Laod;//设置电压值
000a18  4895              LDR      r0,|L3.3184|
000a1a  8800              LDRH     r0,[r0,#0]  ; Contr_Laod
000a1c  498e              LDR      r1,|L3.3160|
000a1e  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;472    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段	
000a20  488f              LDR      r0,|L3.3168|
000a22  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000a24  498e              LDR      r1,|L3.3168|
000a26  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000a28  eb002001          ADD      r0,r0,r1,LSL #8
000a2c  4989              LDR      r1,|L3.3156|
000a2e  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;473    				var32c = Modify_B_ACT; //CV模式电压控制校准
000a30  4608              MOV      r0,r1
000a32  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000a34  9004              STR      r0,[sp,#0x10]
;;;474    				var32c = var32c - Modify_A_ACT;
000a36  498d              LDR      r1,|L3.3180|
000a38  9804              LDR      r0,[sp,#0x10]
000a3a  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000a3c  1a40              SUBS     r0,r0,r1
000a3e  9004              STR      r0,[sp,#0x10]
;;;475    				var32c = var32c << 12;
000a40  9804              LDR      r0,[sp,#0x10]
000a42  0300              LSLS     r0,r0,#12
000a44  9004              STR      r0,[sp,#0x10]
;;;476    				var16a=Modify_D_READ-Modify_C_READ;
000a46  4884              LDR      r0,|L3.3160|
000a48  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000a4a  4987              LDR      r1,|L3.3176|
000a4c  6809              LDR      r1,[r1,#0]  ; Modify_C_READ
000a4e  1a40              SUBS     r0,r0,r1
000a50  9005              STR      r0,[sp,#0x14]
;;;477    				var16a=(var16a*2);
000a52  9805              LDR      r0,[sp,#0x14]
000a54  0040              LSLS     r0,r0,#1
000a56  9005              STR      r0,[sp,#0x14]
;;;478    				var32c=var32c/var16a;
000a58  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000a5c  fbb0f0f1          UDIV     r0,r0,r1
000a60  9004              STR      r0,[sp,#0x10]
;;;479    				CLists.CSET_Load_CorrectionV_LOW = var32c;
000a62  497b              LDR      r1,|L3.3152|
000a64  9804              LDR      r0,[sp,#0x10]
000a66  6548              STR      r0,[r1,#0x54]  ; CLists
;;;480    				var32c = Modify_B_ACT;
000a68  487a              LDR      r0,|L3.3156|
000a6a  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000a6c  9004              STR      r0,[sp,#0x10]
;;;481    				var32c = var32c << 12;
000a6e  9804              LDR      r0,[sp,#0x10]
000a70  0300              LSLS     r0,r0,#12
000a72  9004              STR      r0,[sp,#0x10]
;;;482    				var32d = CLists.CSET_Load_CorrectionV_HIG;      //负载CV模式控制电压高档
000a74  4608              MOV      r0,r1
000a76  6d80              LDR      r0,[r0,#0x58]  ; CLists
000a78  9003              STR      r0,[sp,#0xc]
;;;483    				var32d = var32d * (Modify_D_READ*2);
000a7a  4877              LDR      r0,|L3.3160|
000a7c  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000a7e  0040              LSLS     r0,r0,#1
000a80  9903              LDR      r1,[sp,#0xc]
000a82  4348              MULS     r0,r1,r0
000a84  9003              STR      r0,[sp,#0xc]
;;;484    				if (var32c < var32d)
000a86  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000a8a  4288              CMP      r0,r1
000a8c  d20f              BCS      |L3.2734|
;;;485    				{
;;;486    					var32d = var32d - var32c;
000a8e  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000a92  1a40              SUBS     r0,r0,r1
000a94  9003              STR      r0,[sp,#0xc]
;;;487    					CLists.CSET_LoadV_Offset_HIG = var32d;
000a96  496e              LDR      r1,|L3.3152|
000a98  9803              LDR      r0,[sp,#0xc]
000a9a  f8c1009c          STR      r0,[r1,#0x9c]  ; CLists
;;;488    					CLists.CPolar1 |= 0x04;
000a9e  4608              MOV      r0,r1
000aa0  f89000cd          LDRB     r0,[r0,#0xcd]  ; CLists
000aa4  f0400004          ORR      r0,r0,#4
000aa8  f88100cd          STRB     r0,[r1,#0xcd]
000aac  e00e              B        |L3.2764|
                  |L3.2734|
;;;489    				}
;;;490    				else 
;;;491    				{
;;;492    					var32c = var32c - var32d;
000aae  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000ab2  1a40              SUBS     r0,r0,r1
000ab4  9004              STR      r0,[sp,#0x10]
;;;493    					CLists.CSET_LoadV_Offset_HIG = var32c;      //负载CV模式控制电压参数
000ab6  4966              LDR      r1,|L3.3152|
000ab8  9804              LDR      r0,[sp,#0x10]
000aba  f8c1009c          STR      r0,[r1,#0x9c]  ; CLists
;;;494    					CLists.CPolar1 &= ~0x04;
000abe  4608              MOV      r0,r1
000ac0  f89000cd          LDRB     r0,[r0,#0xcd]  ; CLists
000ac4  f0200004          BIC      r0,r0,#4
000ac8  f88100cd          STRB     r0,[r1,#0xcd]
                  |L3.2764|
;;;495    				}
;;;496    					//参数写进FLASH
;;;497    				Flag_DAC_OFF=0;
000acc  4863              LDR      r0,|L3.3164|
000ace  6800              LDR      r0,[r0,#0]  ; flagB
000ad0  f0200008          BIC      r0,r0,#8
000ad4  4961              LDR      r1,|L3.3164|
000ad6  6008              STR      r0,[r1,#0]  ; flagB
;;;498    			}
000ad8  bf00              NOP      
                  |L3.2778|
;;;499    	/************************内阻校准低档**********************************/
;;;500    			if(UART_Buffer_Rece[1] == 0x0D)
000ada  4861              LDR      r0,|L3.3168|
000adc  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000ade  280d              CMP      r0,#0xd
000ae0  d110              BNE      |L3.2820|
;;;501    			{
;;;502    				Modify_A_READ=0;
000ae2  2000              MOVS     r0,#0
000ae4  495f              LDR      r1,|L3.3172|
000ae6  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;503    				Modify_A_ACT=0;
000ae8  4960              LDR      r1,|L3.3180|
000aea  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;504    				Modify_A_READ = Rmon_value;//测量电阻值
000aec  4862              LDR      r0,|L3.3192|
000aee  8800              LDRH     r0,[r0,#0]  ; Rmon_value
000af0  495c              LDR      r1,|L3.3172|
000af2  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;505    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
000af4  485a              LDR      r0,|L3.3168|
000af6  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000af8  4959              LDR      r1,|L3.3168|
000afa  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000afc  eb002001          ADD      r0,r0,r1,LSL #8
000b00  495a              LDR      r1,|L3.3180|
000b02  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.2820|
;;;506    			}
;;;507    			if (UART_Buffer_Rece[1] == 0x0E)			   
000b04  4856              LDR      r0,|L3.3168|
000b06  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000b08  280e              CMP      r0,#0xe
000b0a  d165              BNE      |L3.3032|
;;;508    			{
;;;509    				vu16 var16;
;;;510    				vu32 var32a;
;;;511    				vu32 var32b;		
;;;512    				vu16 var16a;
;;;513    				vu32 var32c;
;;;514    				vu32 var32d;
;;;515    				Modify_B_READ=0;
000b0c  2000              MOVS     r0,#0
000b0e  4959              LDR      r1,|L3.3188|
000b10  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;516    				Modify_B_ACT=0;
000b12  4950              LDR      r1,|L3.3156|
000b14  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;517    				Modify_B_READ =Rmon_value;//测量电阻值
000b16  4858              LDR      r0,|L3.3192|
000b18  8800              LDRH     r0,[r0,#0]  ; Rmon_value
000b1a  4956              LDR      r1,|L3.3188|
000b1c  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;518    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段
000b1e  4850              LDR      r0,|L3.3168|
000b20  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000b22  494f              LDR      r1,|L3.3168|
000b24  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000b26  eb002001          ADD      r0,r0,r1,LSL #8
000b2a  494a              LDR      r1,|L3.3156|
000b2c  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;519    				var32a = Modify_B_ACT;
000b2e  4608              MOV      r0,r1
000b30  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000b32  9004              STR      r0,[sp,#0x10]
;;;520    				var32a = var32a - Modify_A_ACT;
000b34  494d              LDR      r1,|L3.3180|
000b36  9804              LDR      r0,[sp,#0x10]
000b38  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000b3a  1a40              SUBS     r0,r0,r1
000b3c  9004              STR      r0,[sp,#0x10]
;;;521    				var32a = var32a << 12;
000b3e  9804              LDR      r0,[sp,#0x10]
000b40  0300              LSLS     r0,r0,#12
000b42  9004              STR      r0,[sp,#0x10]
;;;522    				var16 = Modify_B_READ - Modify_A_READ;
000b44  484b              LDR      r0,|L3.3188|
000b46  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000b48  4946              LDR      r1,|L3.3172|
000b4a  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
000b4c  1a40              SUBS     r0,r0,r1
000b4e  b280              UXTH     r0,r0
000b50  9005              STR      r0,[sp,#0x14]
;;;523    				var32a = var32a / var16;
000b52  f8bd1014          LDRH     r1,[sp,#0x14]
000b56  9804              LDR      r0,[sp,#0x10]
000b58  fbb0f0f1          UDIV     r0,r0,r1
000b5c  9004              STR      r0,[sp,#0x10]
;;;524    				CLists.CREG_CorrectionR_LOW = var32a;
000b5e  493c              LDR      r1,|L3.3152|
000b60  9804              LDR      r0,[sp,#0x10]
000b62  6788              STR      r0,[r1,#0x78]  ; CLists
;;;525    				var32a=0;
000b64  2000              MOVS     r0,#0
000b66  9004              STR      r0,[sp,#0x10]
;;;526    				var32a = Modify_B_ACT;
000b68  483a              LDR      r0,|L3.3156|
000b6a  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000b6c  9004              STR      r0,[sp,#0x10]
;;;527    				var32a = var32a << 12;
000b6e  9804              LDR      r0,[sp,#0x10]
000b70  0300              LSLS     r0,r0,#12
000b72  9004              STR      r0,[sp,#0x10]
;;;528    				var32b = Modify_B_READ;
000b74  483f              LDR      r0,|L3.3188|
000b76  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000b78  9003              STR      r0,[sp,#0xc]
;;;529    				var32b = var32b * CLists.CREG_CorrectionR_LOW;  //内阻测量参数低档
000b7a  4608              MOV      r0,r1
000b7c  6f80              LDR      r0,[r0,#0x78]  ; CLists
000b7e  9903              LDR      r1,[sp,#0xc]
000b80  4348              MULS     r0,r1,r0
000b82  9003              STR      r0,[sp,#0xc]
;;;530    				if (var32a < var32b)
000b84  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000b88  4288              CMP      r0,r1
000b8a  d20f              BCS      |L3.2988|
;;;531    				{
;;;532    					var32b = var32b - var32a;
000b8c  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000b90  1a40              SUBS     r0,r0,r1
000b92  9003              STR      r0,[sp,#0xc]
;;;533    					CLists.CREG_ReadR_Offset_LOW = var32b;         //内阻测量系数
000b94  492e              LDR      r1,|L3.3152|
000b96  9803              LDR      r0,[sp,#0xc]
000b98  f8c100bc          STR      r0,[r1,#0xbc]  ; CLists
;;;534    					CLists.CPolar4 |= 0x01;
000b9c  4608              MOV      r0,r1
000b9e  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
000ba2  f0400001          ORR      r0,r0,#1
000ba6  f88100d0          STRB     r0,[r1,#0xd0]
000baa  e00e              B        |L3.3018|
                  |L3.2988|
;;;535    				}
;;;536    				else 
;;;537    				{
;;;538    					var32a = var32a - var32b;
000bac  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000bb0  1a40              SUBS     r0,r0,r1
000bb2  9004              STR      r0,[sp,#0x10]
;;;539    					CLists.CREG_ReadR_Offset_LOW = var32a;
000bb4  4926              LDR      r1,|L3.3152|
000bb6  9804              LDR      r0,[sp,#0x10]
000bb8  f8c100bc          STR      r0,[r1,#0xbc]  ; CLists
;;;540    					CLists.CPolar4 &= ~0x01;
000bbc  4608              MOV      r0,r1
000bbe  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
000bc2  f0200001          BIC      r0,r0,#1
000bc6  f88100d0          STRB     r0,[r1,#0xd0]
                  |L3.3018|
;;;541    				}
;;;542    					//参数写进FLASH
;;;543    				Flag_DAC_OFF=0;
000bca  4824              LDR      r0,|L3.3164|
000bcc  6800              LDR      r0,[r0,#0]  ; flagB
000bce  f0200008          BIC      r0,r0,#8
000bd2  4922              LDR      r1,|L3.3164|
000bd4  6008              STR      r0,[r1,#0]  ; flagB
;;;544    			}		
000bd6  bf00              NOP      
                  |L3.3032|
;;;545    			/************************内阻高档校准**********************************/
;;;546    			if(UART_Buffer_Rece[1] == 0x0F)
000bd8  4821              LDR      r0,|L3.3168|
000bda  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000bdc  280f              CMP      r0,#0xf
000bde  d110              BNE      |L3.3074|
;;;547    			{
;;;548    				Modify_A_READ=0;
000be0  2000              MOVS     r0,#0
000be2  4920              LDR      r1,|L3.3172|
000be4  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;549    				Modify_A_ACT=0;
000be6  4921              LDR      r1,|L3.3180|
000be8  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;550    				Modify_A_READ = Rmon_value;//测量电阻值
000bea  4823              LDR      r0,|L3.3192|
000bec  8800              LDRH     r0,[r0,#0]  ; Rmon_value
000bee  491d              LDR      r1,|L3.3172|
000bf0  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;551    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
000bf2  481b              LDR      r0,|L3.3168|
000bf4  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000bf6  491a              LDR      r1,|L3.3168|
000bf8  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000bfa  eb002001          ADD      r0,r0,r1,LSL #8
000bfe  491b              LDR      r1,|L3.3180|
000c00  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.3074|
;;;552    			}
;;;553    			if (UART_Buffer_Rece[1] == 0x10)			   
000c02  4817              LDR      r0,|L3.3168|
000c04  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000c06  2810              CMP      r0,#0x10
000c08  d17c              BNE      |L3.3332|
;;;554    			{
;;;555    				vu16 var16;
;;;556    				vu32 var32a;
;;;557    				vu32 var32b;		
;;;558    				vu16 var16a;
;;;559    				vu32 var32c;
;;;560    				vu32 var32d;
;;;561    				Modify_B_READ=0;
000c0a  2000              MOVS     r0,#0
000c0c  4919              LDR      r1,|L3.3188|
000c0e  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;562    				Modify_B_ACT=0;
000c10  4910              LDR      r1,|L3.3156|
000c12  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;563    				Modify_B_READ =Rmon_value;//测量电阻值
000c14  4818              LDR      r0,|L3.3192|
000c16  8800              LDRH     r0,[r0,#0]  ; Rmon_value
000c18  4916              LDR      r1,|L3.3188|
000c1a  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;564    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段
000c1c  4810              LDR      r0,|L3.3168|
000c1e  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000c20  490f              LDR      r1,|L3.3168|
000c22  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000c24  eb002001          ADD      r0,r0,r1,LSL #8
000c28  490a              LDR      r1,|L3.3156|
000c2a  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;565    				var32a = Modify_B_ACT;
000c2c  4608              MOV      r0,r1
000c2e  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000c30  9004              STR      r0,[sp,#0x10]
;;;566    				var32a = var32a - Modify_A_ACT;
000c32  490e              LDR      r1,|L3.3180|
000c34  9804              LDR      r0,[sp,#0x10]
000c36  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000c38  1a40              SUBS     r0,r0,r1
000c3a  9004              STR      r0,[sp,#0x10]
;;;567    				var32a = var32a << 12;
000c3c  9804              LDR      r0,[sp,#0x10]
000c3e  0300              LSLS     r0,r0,#12
000c40  9004              STR      r0,[sp,#0x10]
;;;568    				var16 = Modify_B_READ - Modify_A_READ;
000c42  480c              LDR      r0,|L3.3188|
000c44  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000c46  4907              LDR      r1,|L3.3172|
000c48  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
000c4a  1a40              SUBS     r0,r0,r1
000c4c  b280              UXTH     r0,r0
000c4e  e015              B        |L3.3196|
                  |L3.3152|
                          DCD      CLists
                  |L3.3156|
                          DCD      Modify_B_ACT
                  |L3.3160|
                          DCD      Modify_D_READ
                  |L3.3164|
                          DCD      flagB
                  |L3.3168|
                          DCD      UART_Buffer_Rece
                  |L3.3172|
                          DCD      Modify_A_READ
                  |L3.3176|
                          DCD      Modify_C_READ
                  |L3.3180|
                          DCD      Modify_A_ACT
                  |L3.3184|
                          DCD      Contr_Laod
                  |L3.3188|
                          DCD      Modify_B_READ
                  |L3.3192|
                          DCD      Rmon_value
                  |L3.3196|
000c7c  9005              STR      r0,[sp,#0x14]
;;;569    				var32a = var32a / var16;
000c7e  f8bd1014          LDRH     r1,[sp,#0x14]
000c82  9804              LDR      r0,[sp,#0x10]
000c84  fbb0f0f1          UDIV     r0,r0,r1
000c88  9004              STR      r0,[sp,#0x10]
;;;570    				CLists.CREG_CorrectionR_HIG = var32a;
000c8a  49fe              LDR      r1,|L3.4228|
000c8c  9804              LDR      r0,[sp,#0x10]
000c8e  67c8              STR      r0,[r1,#0x7c]  ; CLists
;;;571    				var32a=0;
000c90  2000              MOVS     r0,#0
000c92  9004              STR      r0,[sp,#0x10]
;;;572    				var32a = Modify_B_ACT;
000c94  48fc              LDR      r0,|L3.4232|
000c96  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000c98  9004              STR      r0,[sp,#0x10]
;;;573    				var32a = var32a << 12;
000c9a  9804              LDR      r0,[sp,#0x10]
000c9c  0300              LSLS     r0,r0,#12
000c9e  9004              STR      r0,[sp,#0x10]
;;;574    				var32b = Modify_B_READ;
000ca0  48fa              LDR      r0,|L3.4236|
000ca2  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000ca4  9003              STR      r0,[sp,#0xc]
;;;575    				var32b = var32b * CLists.CREG_CorrectionR_HIG;    //内阻测量参数高档
000ca6  4608              MOV      r0,r1
000ca8  6fc0              LDR      r0,[r0,#0x7c]  ; CLists
000caa  9903              LDR      r1,[sp,#0xc]
000cac  4348              MULS     r0,r1,r0
000cae  9003              STR      r0,[sp,#0xc]
;;;576    				if (var32a < var32b)
000cb0  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000cb4  4288              CMP      r0,r1
000cb6  d20f              BCS      |L3.3288|
;;;577    				{
;;;578    					var32b = var32b - var32a;
000cb8  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000cbc  1a40              SUBS     r0,r0,r1
000cbe  9003              STR      r0,[sp,#0xc]
;;;579    					CLists.CREG_ReadR_Offset_HIG = var32b;     //内阻测量系数
000cc0  49f0              LDR      r1,|L3.4228|
000cc2  9803              LDR      r0,[sp,#0xc]
000cc4  f8c100c0          STR      r0,[r1,#0xc0]  ; CLists
;;;580    					CLists.CPolar4 |= 0x04;
000cc8  4608              MOV      r0,r1
000cca  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
000cce  f0400004          ORR      r0,r0,#4
000cd2  f88100d0          STRB     r0,[r1,#0xd0]
000cd6  e00e              B        |L3.3318|
                  |L3.3288|
;;;581    				}
;;;582    				else 
;;;583    				{
;;;584    					var32a = var32a - var32b;
000cd8  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000cdc  1a40              SUBS     r0,r0,r1
000cde  9004              STR      r0,[sp,#0x10]
;;;585    					CLists.CREG_ReadR_Offset_HIG = var32a;
000ce0  49e8              LDR      r1,|L3.4228|
000ce2  9804              LDR      r0,[sp,#0x10]
000ce4  f8c100c0          STR      r0,[r1,#0xc0]  ; CLists
;;;586    					CLists.CPolar4 &= ~0x04;
000ce8  4608              MOV      r0,r1
000cea  f89000d0          LDRB     r0,[r0,#0xd0]  ; CLists
000cee  f0200004          BIC      r0,r0,#4
000cf2  f88100d0          STRB     r0,[r1,#0xd0]
                  |L3.3318|
;;;587    				}
;;;588    					//参数写进FLASH
;;;589    				Flag_DAC_OFF=0;
000cf6  48e6              LDR      r0,|L3.4240|
000cf8  6800              LDR      r0,[r0,#0]  ; flagB
000cfa  f0200008          BIC      r0,r0,#8
000cfe  49e4              LDR      r1,|L3.4240|
000d00  6008              STR      r0,[r1,#0]  ; flagB
;;;590    			}	
000d02  bf00              NOP      
                  |L3.3332|
;;;591    			
;;;592    			/*******************************电源电压控制和测量校准******************************************/	
;;;593    			if (UART_Buffer_Rece[1] == 0x11)			   //电流测量校准
000d04  48e3              LDR      r0,|L3.4244|
000d06  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000d08  2811              CMP      r0,#0x11
000d0a  d116              BNE      |L3.3386|
;;;594    			{
;;;595    				Modify_A_READ=0;
000d0c  2000              MOVS     r0,#0
000d0e  49e2              LDR      r1,|L3.4248|
000d10  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;596    				Modify_C_READ=0;
000d12  49e2              LDR      r1,|L3.4252|
000d14  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;597    				Modify_A_ACT=0;
000d16  49e2              LDR      r1,|L3.4256|
000d18  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;598    				Modify_A_READ = Vmon_POWE_value;//测量电流
000d1a  48e2              LDR      r0,|L3.4260|
000d1c  8800              LDRH     r0,[r0,#0]  ; Vmon_POWE_value
000d1e  49de              LDR      r1,|L3.4248|
000d20  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;599    				Modify_C_READ = Contr_Voltage;//设置电流
000d22  48e1              LDR      r0,|L3.4264|
000d24  8800              LDRH     r0,[r0,#0]  ; Contr_Voltage
000d26  49dd              LDR      r1,|L3.4252|
000d28  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;600    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
000d2a  48da              LDR      r0,|L3.4244|
000d2c  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000d2e  49d9              LDR      r1,|L3.4244|
000d30  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000d32  eb002001          ADD      r0,r0,r1,LSL #8
000d36  49da              LDR      r1,|L3.4256|
000d38  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.3386|
;;;601    			}
;;;602    
;;;603    			if (UART_Buffer_Rece[1] == 0x12)			   //电流测量校准完成
000d3a  48d6              LDR      r0,|L3.4244|
000d3c  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000d3e  2812              CMP      r0,#0x12
000d40  d17e              BNE      |L3.3648|
;;;604    			{
;;;605    				vu16 var16;
;;;606    				vu32 var32a;
;;;607    				vu32 var32b;
;;;608    				
;;;609    				vu16 var16a;
;;;610    				vu32 var32c;
;;;611    				vu32 var32d;
;;;612    				
;;;613    				Modify_D_READ=0;
000d42  2000              MOVS     r0,#0
000d44  49d9              LDR      r1,|L3.4268|
000d46  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;614    				Modify_B_READ=0;
000d48  49d0              LDR      r1,|L3.4236|
000d4a  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;615    				Modify_B_ACT=0;
000d4c  49ce              LDR      r1,|L3.4232|
000d4e  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;616    				
;;;617    				Modify_D_READ = Contr_Voltage;
000d50  48d5              LDR      r0,|L3.4264|
000d52  8800              LDRH     r0,[r0,#0]  ; Contr_Voltage
000d54  49d5              LDR      r1,|L3.4268|
000d56  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;618    				Modify_B_READ = Vmon_POWE_value;
000d58  48d2              LDR      r0,|L3.4260|
000d5a  8800              LDRH     r0,[r0,#0]  ; Vmon_POWE_value
000d5c  49cb              LDR      r1,|L3.4236|
000d5e  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;619    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
000d60  48cc              LDR      r0,|L3.4244|
000d62  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000d64  49cb              LDR      r1,|L3.4244|
000d66  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000d68  eb002001          ADD      r0,r0,r1,LSL #8
000d6c  49c6              LDR      r1,|L3.4232|
000d6e  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;620    				var32a = Modify_B_ACT;
000d70  4608              MOV      r0,r1
000d72  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000d74  9004              STR      r0,[sp,#0x10]
;;;621    				var32a = var32a - Modify_A_ACT;
000d76  49ca              LDR      r1,|L3.4256|
000d78  9804              LDR      r0,[sp,#0x10]
000d7a  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000d7c  1a40              SUBS     r0,r0,r1
000d7e  9004              STR      r0,[sp,#0x10]
;;;622    				var32a = var32a << 12;
000d80  9804              LDR      r0,[sp,#0x10]
000d82  0300              LSLS     r0,r0,#12
000d84  9004              STR      r0,[sp,#0x10]
;;;623    				var16 = Modify_B_READ - Modify_A_READ;
000d86  48c1              LDR      r0,|L3.4236|
000d88  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000d8a  49c3              LDR      r1,|L3.4248|
000d8c  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
000d8e  1a40              SUBS     r0,r0,r1
000d90  b280              UXTH     r0,r0
000d92  9005              STR      r0,[sp,#0x14]
;;;624    				var32a = var32a / var16;
000d94  f8bd1014          LDRH     r1,[sp,#0x14]
000d98  9804              LDR      r0,[sp,#0x10]
000d9a  fbb0f0f1          UDIV     r0,r0,r1
000d9e  9004              STR      r0,[sp,#0x10]
;;;625    				CLists.CREG_POWER_CorrectionV = var32a;
000da0  49b8              LDR      r1,|L3.4228|
000da2  9804              LDR      r0,[sp,#0x10]
000da4  6648              STR      r0,[r1,#0x64]  ; CLists
;;;626    				var32a = Modify_B_ACT;
000da6  48b8              LDR      r0,|L3.4232|
000da8  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000daa  9004              STR      r0,[sp,#0x10]
;;;627    				var32a = var32a << 12;
000dac  9804              LDR      r0,[sp,#0x10]
000dae  0300              LSLS     r0,r0,#12
000db0  9004              STR      r0,[sp,#0x10]
;;;628    				var32b = Modify_B_READ;
000db2  48b6              LDR      r0,|L3.4236|
000db4  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000db6  9003              STR      r0,[sp,#0xc]
;;;629    				var32b = var32b * CLists.CREG_POWER_CorrectionV;    //电源测量电压参数
000db8  4608              MOV      r0,r1
000dba  6e40              LDR      r0,[r0,#0x64]  ; CLists
000dbc  9903              LDR      r1,[sp,#0xc]
000dbe  4348              MULS     r0,r1,r0
000dc0  9003              STR      r0,[sp,#0xc]
;;;630    				if (var32a < var32b)
000dc2  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000dc6  4288              CMP      r0,r1
000dc8  d20f              BCS      |L3.3562|
;;;631    				{
;;;632    					var32b = var32b - var32a;
000dca  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000dce  1a40              SUBS     r0,r0,r1
000dd0  9003              STR      r0,[sp,#0xc]
;;;633    					CLists.CREG_POWERV_Offset = var32b;     //电源CV模式电压测量参数  
000dd2  49ac              LDR      r1,|L3.4228|
000dd4  9803              LDR      r0,[sp,#0xc]
000dd6  f8c100a8          STR      r0,[r1,#0xa8]  ; CLists
;;;634    					CLists.CPolar5 |= 0x01;
000dda  4608              MOV      r0,r1
000ddc  f89000d1          LDRB     r0,[r0,#0xd1]  ; CLists
000de0  f0400001          ORR      r0,r0,#1
000de4  f88100d1          STRB     r0,[r1,#0xd1]
000de8  e00e              B        |L3.3592|
                  |L3.3562|
;;;635    				}
;;;636    				else 
;;;637    				{
;;;638    					var32a = var32a - var32b;
000dea  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000dee  1a40              SUBS     r0,r0,r1
000df0  9004              STR      r0,[sp,#0x10]
;;;639    					CLists.CREG_POWERV_Offset = var32a;
000df2  49a4              LDR      r1,|L3.4228|
000df4  9804              LDR      r0,[sp,#0x10]
000df6  f8c100a8          STR      r0,[r1,#0xa8]  ; CLists
;;;640    					CLists.CPolar5 &= ~0x01;					
000dfa  4608              MOV      r0,r1
000dfc  f89000d1          LDRB     r0,[r0,#0xd1]  ; CLists
000e00  f0200001          BIC      r0,r0,#1
000e04  f88100d1          STRB     r0,[r1,#0xd1]
                  |L3.3592|
;;;641    				}
;;;642    				var32c = Modify_B_ACT; //设置电压校准
000e08  489f              LDR      r0,|L3.4232|
000e0a  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000e0c  9001              STR      r0,[sp,#4]
;;;643    				var32c = var32c - Modify_A_ACT;
000e0e  49a4              LDR      r1,|L3.4256|
000e10  9801              LDR      r0,[sp,#4]
000e12  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000e14  1a40              SUBS     r0,r0,r1
000e16  9001              STR      r0,[sp,#4]
;;;644    				var32c = var32c << 12;
000e18  9801              LDR      r0,[sp,#4]
000e1a  0300              LSLS     r0,r0,#12
000e1c  9001              STR      r0,[sp,#4]
;;;645    				var16a=Modify_D_READ-Modify_C_READ;
000e1e  48a3              LDR      r0,|L3.4268|
000e20  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000e22  499e              LDR      r1,|L3.4252|
000e24  6809              LDR      r1,[r1,#0]  ; Modify_C_READ
000e26  1a40              SUBS     r0,r0,r1
000e28  b280              UXTH     r0,r0
000e2a  9002              STR      r0,[sp,#8]
;;;646    				var16a=var16a*2;
000e2c  f8bd0008          LDRH     r0,[sp,#8]
000e30  f64f71ff          MOV      r1,#0xffff
000e34  ea010040          AND      r0,r1,r0,LSL #1
000e38  9002              STR      r0,[sp,#8]
;;;647    				var32c=var32c/var16a;
000e3a  f8bd1008          LDRH     r1,[sp,#8]
000e3e  e000              B        |L3.3650|
                  |L3.3648|
000e40  e03f              B        |L3.3778|
                  |L3.3650|
000e42  9801              LDR      r0,[sp,#4]
000e44  fbb0f0f1          UDIV     r0,r0,r1
000e48  9001              STR      r0,[sp,#4]
;;;648    				CLists.CSET_POWER_CorrectionV = var32c;
000e4a  498e              LDR      r1,|L3.4228|
000e4c  9801              LDR      r0,[sp,#4]
000e4e  6708              STR      r0,[r1,#0x70]  ; CLists
;;;649    				var32c = Modify_B_ACT;
000e50  488d              LDR      r0,|L3.4232|
000e52  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000e54  9001              STR      r0,[sp,#4]
;;;650    				var32c = var32c << 12;
000e56  9801              LDR      r0,[sp,#4]
000e58  0300              LSLS     r0,r0,#12
000e5a  9001              STR      r0,[sp,#4]
;;;651    				var32d = CLists.CSET_POWER_CorrectionV;    //电源电压控制参数
000e5c  4608              MOV      r0,r1
000e5e  6f00              LDR      r0,[r0,#0x70]  ; CLists
000e60  9000              STR      r0,[sp,#0]
;;;652    				var32d = var32d * (Modify_D_READ*2);
000e62  4892              LDR      r0,|L3.4268|
000e64  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000e66  0040              LSLS     r0,r0,#1
000e68  9900              LDR      r1,[sp,#0]
000e6a  4348              MULS     r0,r1,r0
000e6c  9000              STR      r0,[sp,#0]
;;;653    				if (var32c < var32d)
000e6e  e9dd1000          LDRD     r1,r0,[sp,#0]
000e72  4288              CMP      r0,r1
000e74  d20f              BCS      |L3.3734|
;;;654    				{
;;;655    					var32d = var32d - var32c;
000e76  e9dd0100          LDRD     r0,r1,[sp,#0]
000e7a  1a40              SUBS     r0,r0,r1
000e7c  9000              STR      r0,[sp,#0]
;;;656    					CLists.CSET_POWERV_Offset = var32d;    //电源CV模式电压控制参数    
000e7e  4981              LDR      r1,|L3.4228|
000e80  9800              LDR      r0,[sp,#0]
000e82  f8c100b4          STR      r0,[r1,#0xb4]  ; CLists
;;;657    					CLists.CPolar5 |= 0x04;
000e86  4608              MOV      r0,r1
000e88  f89000d1          LDRB     r0,[r0,#0xd1]  ; CLists
000e8c  f0400004          ORR      r0,r0,#4
000e90  f88100d1          STRB     r0,[r1,#0xd1]
000e94  e00e              B        |L3.3764|
                  |L3.3734|
;;;658    				}
;;;659    				else 
;;;660    				{
;;;661    					var32c = var32c - var32d;
000e96  e9dd1000          LDRD     r1,r0,[sp,#0]
000e9a  1a40              SUBS     r0,r0,r1
000e9c  9001              STR      r0,[sp,#4]
;;;662    					CLists.CSET_POWERV_Offset = var32c;
000e9e  4979              LDR      r1,|L3.4228|
000ea0  9801              LDR      r0,[sp,#4]
000ea2  f8c100b4          STR      r0,[r1,#0xb4]  ; CLists
;;;663    					CLists.CPolar5 &= ~0x04;
000ea6  4608              MOV      r0,r1
000ea8  f89000d1          LDRB     r0,[r0,#0xd1]  ; CLists
000eac  f0200004          BIC      r0,r0,#4
000eb0  f88100d1          STRB     r0,[r1,#0xd1]
                  |L3.3764|
;;;664    				}
;;;665    					
;;;666    				Flag_DAC_OFF=0;
000eb4  4876              LDR      r0,|L3.4240|
000eb6  6800              LDR      r0,[r0,#0]  ; flagB
000eb8  f0200008          BIC      r0,r0,#8
000ebc  4974              LDR      r1,|L3.4240|
000ebe  6008              STR      r0,[r1,#0]  ; flagB
;;;667    			}
000ec0  bf00              NOP      
                  |L3.3778|
;;;668    	/*******************************电源CC模式电流测量和控制校准******************************************/	
;;;669    			if (UART_Buffer_Rece[1] == 0x13)			   //电流测量校准
000ec2  4874              LDR      r0,|L3.4244|
000ec4  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000ec6  2813              CMP      r0,#0x13
000ec8  d116              BNE      |L3.3832|
;;;670    			{
;;;671    				Modify_A_READ=0;
000eca  2000              MOVS     r0,#0
000ecc  4972              LDR      r1,|L3.4248|
000ece  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;672    				Modify_C_READ=0;
000ed0  4972              LDR      r1,|L3.4252|
000ed2  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;673    				Modify_A_ACT=0;
000ed4  4972              LDR      r1,|L3.4256|
000ed6  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;674    				Modify_A_READ = Imon_POWE_value;//测量电流
000ed8  4875              LDR      r0,|L3.4272|
000eda  8800              LDRH     r0,[r0,#0]  ; Imon_POWE_value
000edc  496e              LDR      r1,|L3.4248|
000ede  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;675    				Modify_C_READ = Contr_Current;//设置电流
000ee0  4874              LDR      r0,|L3.4276|
000ee2  8800              LDRH     r0,[r0,#0]  ; Contr_Current
000ee4  496d              LDR      r1,|L3.4252|
000ee6  6008              STR      r0,[r1,#0]  ; Modify_C_READ
;;;676    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
000ee8  486a              LDR      r0,|L3.4244|
000eea  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000eec  4969              LDR      r1,|L3.4244|
000eee  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000ef0  eb002001          ADD      r0,r0,r1,LSL #8
000ef4  496a              LDR      r1,|L3.4256|
000ef6  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.3832|
;;;677    			}
;;;678    			if (UART_Buffer_Rece[1] == 0x14)			   //电流测量校准完成
000ef8  4866              LDR      r0,|L3.4244|
000efa  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
000efc  2814              CMP      r0,#0x14
000efe  d17c              BNE      |L3.4090|
;;;679    			{
;;;680    				vu16 var16;
;;;681    				vu32 var32a;
;;;682    				vu32 var32b;
;;;683    				
;;;684    				vu16 var16a;
;;;685    				vu32 var32c;
;;;686    				vu32 var32d;
;;;687    				
;;;688    				Modify_D_READ=0;
000f00  2000              MOVS     r0,#0
000f02  496a              LDR      r1,|L3.4268|
000f04  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;689    				Modify_B_READ=0;
000f06  4961              LDR      r1,|L3.4236|
000f08  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;690    				Modify_B_ACT=0;
000f0a  495f              LDR      r1,|L3.4232|
000f0c  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;691    				
;;;692    				Modify_D_READ = Contr_Current;
000f0e  4869              LDR      r0,|L3.4276|
000f10  8800              LDRH     r0,[r0,#0]  ; Contr_Current
000f12  4966              LDR      r1,|L3.4268|
000f14  6008              STR      r0,[r1,#0]  ; Modify_D_READ
;;;693    				Modify_B_READ = Imon_POWE_value;
000f16  4866              LDR      r0,|L3.4272|
000f18  8800              LDRH     r0,[r0,#0]  ; Imon_POWE_value
000f1a  495c              LDR      r1,|L3.4236|
000f1c  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;694    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
000f1e  485d              LDR      r0,|L3.4244|
000f20  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
000f22  495c              LDR      r1,|L3.4244|
000f24  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
000f26  eb002001          ADD      r0,r0,r1,LSL #8
000f2a  4957              LDR      r1,|L3.4232|
000f2c  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;695    				var32a = Modify_B_ACT;
000f2e  4608              MOV      r0,r1
000f30  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000f32  9004              STR      r0,[sp,#0x10]
;;;696    				var32a = var32a - Modify_A_ACT;
000f34  495a              LDR      r1,|L3.4256|
000f36  9804              LDR      r0,[sp,#0x10]
000f38  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000f3a  1a40              SUBS     r0,r0,r1
000f3c  9004              STR      r0,[sp,#0x10]
;;;697    				var32a = var32a << 12;
000f3e  9804              LDR      r0,[sp,#0x10]
000f40  0300              LSLS     r0,r0,#12
000f42  9004              STR      r0,[sp,#0x10]
;;;698    				var16 = Modify_B_READ - Modify_A_READ;
000f44  4851              LDR      r0,|L3.4236|
000f46  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000f48  4953              LDR      r1,|L3.4248|
000f4a  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
000f4c  1a40              SUBS     r0,r0,r1
000f4e  b280              UXTH     r0,r0
000f50  9005              STR      r0,[sp,#0x14]
;;;699    				var32a = var32a / var16;
000f52  f8bd1014          LDRH     r1,[sp,#0x14]
000f56  9804              LDR      r0,[sp,#0x10]
000f58  fbb0f0f1          UDIV     r0,r0,r1
000f5c  9004              STR      r0,[sp,#0x10]
;;;700    				CLists.CREG_POWER_CorrectionA_CC = var32a;
000f5e  4949              LDR      r1,|L3.4228|
000f60  9804              LDR      r0,[sp,#0x10]
000f62  6688              STR      r0,[r1,#0x68]  ; CLists
;;;701    				var32a = Modify_B_ACT;
000f64  4848              LDR      r0,|L3.4232|
000f66  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000f68  9004              STR      r0,[sp,#0x10]
;;;702    				var32a = var32a << 12;
000f6a  9804              LDR      r0,[sp,#0x10]
000f6c  0300              LSLS     r0,r0,#12
000f6e  9004              STR      r0,[sp,#0x10]
;;;703    				var32b = Modify_B_READ;
000f70  4846              LDR      r0,|L3.4236|
000f72  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
000f74  9003              STR      r0,[sp,#0xc]
;;;704    				var32b = var32b * CLists.CREG_POWER_CorrectionA_CC;    //电源CC模式电流测量参数
000f76  4608              MOV      r0,r1
000f78  6e80              LDR      r0,[r0,#0x68]  ; CLists
000f7a  9903              LDR      r1,[sp,#0xc]
000f7c  4348              MULS     r0,r1,r0
000f7e  9003              STR      r0,[sp,#0xc]
;;;705    				if (var32a < var32b)
000f80  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000f84  4288              CMP      r0,r1
000f86  d20f              BCS      |L3.4008|
;;;706    				{
;;;707    					var32b = var32b - var32a;
000f88  e9dd0103          LDRD     r0,r1,[sp,#0xc]
000f8c  1a40              SUBS     r0,r0,r1
000f8e  9003              STR      r0,[sp,#0xc]
;;;708    					CLists.CREG_POWERA_Offset_CC = var32b;    //电源CC模式电流测量参数 
000f90  493c              LDR      r1,|L3.4228|
000f92  9803              LDR      r0,[sp,#0xc]
000f94  f8c100ac          STR      r0,[r1,#0xac]  ; CLists
;;;709    					CLists.CPolar6 |= 0x01;
000f98  4608              MOV      r0,r1
000f9a  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
000f9e  f0400001          ORR      r0,r0,#1
000fa2  f88100d2          STRB     r0,[r1,#0xd2]
000fa6  e00e              B        |L3.4038|
                  |L3.4008|
;;;710    				}
;;;711    				else 
;;;712    				{
;;;713    					var32a = var32a - var32b;
000fa8  e9dd1003          LDRD     r1,r0,[sp,#0xc]
000fac  1a40              SUBS     r0,r0,r1
000fae  9004              STR      r0,[sp,#0x10]
;;;714    					CLists.CREG_POWERA_Offset_CC = var32a;
000fb0  4934              LDR      r1,|L3.4228|
000fb2  9804              LDR      r0,[sp,#0x10]
000fb4  f8c100ac          STR      r0,[r1,#0xac]  ; CLists
;;;715    					CLists.CPolar6 &= ~0x01;					//电流测量系数和零点校准完成
000fb8  4608              MOV      r0,r1
000fba  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
000fbe  f0200001          BIC      r0,r0,#1
000fc2  f88100d2          STRB     r0,[r1,#0xd2]
                  |L3.4038|
;;;716    				}
;;;717    				var32c = Modify_B_ACT; //设置电流校准
000fc6  4830              LDR      r0,|L3.4232|
000fc8  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
000fca  9001              STR      r0,[sp,#4]
;;;718    				var32c = var32c - Modify_A_ACT;
000fcc  4934              LDR      r1,|L3.4256|
000fce  9801              LDR      r0,[sp,#4]
000fd0  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
000fd2  1a40              SUBS     r0,r0,r1
000fd4  9001              STR      r0,[sp,#4]
;;;719    				var32c = var32c << 12;
000fd6  9801              LDR      r0,[sp,#4]
000fd8  0300              LSLS     r0,r0,#12
000fda  9001              STR      r0,[sp,#4]
;;;720    				var16a=Modify_D_READ-Modify_C_READ;
000fdc  4833              LDR      r0,|L3.4268|
000fde  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
000fe0  492e              LDR      r1,|L3.4252|
000fe2  6809              LDR      r1,[r1,#0]  ; Modify_C_READ
000fe4  1a40              SUBS     r0,r0,r1
000fe6  b280              UXTH     r0,r0
000fe8  9002              STR      r0,[sp,#8]
;;;721    				var16a=var16a*2;
000fea  f8bd0008          LDRH     r0,[sp,#8]
000fee  f64f71ff          MOV      r1,#0xffff
000ff2  ea010040          AND      r0,r1,r0,LSL #1
000ff6  9002              STR      r0,[sp,#8]
;;;722    				var32c=var32c/var16a;
000ff8  e000              B        |L3.4092|
                  |L3.4090|
000ffa  e041              B        |L3.4224|
                  |L3.4092|
000ffc  f8bd1008          LDRH     r1,[sp,#8]
001000  9801              LDR      r0,[sp,#4]
001002  fbb0f0f1          UDIV     r0,r0,r1
001006  9001              STR      r0,[sp,#4]
;;;723    				CLists.CSET_POWER_CorrectionA = var32c;
001008  491e              LDR      r1,|L3.4228|
00100a  9801              LDR      r0,[sp,#4]
00100c  6748              STR      r0,[r1,#0x74]  ; CLists
;;;724    				var32c = Modify_B_ACT;
00100e  481e              LDR      r0,|L3.4232|
001010  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
001012  9001              STR      r0,[sp,#4]
;;;725    				var32c = var32c << 12;
001014  9801              LDR      r0,[sp,#4]
001016  0300              LSLS     r0,r0,#12
001018  9001              STR      r0,[sp,#4]
;;;726    				var32d = CLists.CSET_POWER_CorrectionA;    //电源电流控制参数
00101a  4608              MOV      r0,r1
00101c  6f40              LDR      r0,[r0,#0x74]  ; CLists
00101e  9000              STR      r0,[sp,#0]
;;;727    				var32d = var32d * (Modify_D_READ*2);
001020  4822              LDR      r0,|L3.4268|
001022  6800              LDR      r0,[r0,#0]  ; Modify_D_READ
001024  0040              LSLS     r0,r0,#1
001026  9900              LDR      r1,[sp,#0]
001028  4348              MULS     r0,r1,r0
00102a  9000              STR      r0,[sp,#0]
;;;728    				if (var32c < var32d)
00102c  e9dd1000          LDRD     r1,r0,[sp,#0]
001030  4288              CMP      r0,r1
001032  d20f              BCS      |L3.4180|
;;;729    				{
;;;730    					var32d = var32d - var32c;
001034  e9dd0100          LDRD     r0,r1,[sp,#0]
001038  1a40              SUBS     r0,r0,r1
00103a  9000              STR      r0,[sp,#0]
;;;731    					CLists.CSET_POWERA_Offset = var32d;    //电源CC模式电流控制参数 
00103c  4911              LDR      r1,|L3.4228|
00103e  9800              LDR      r0,[sp,#0]
001040  f8c100b8          STR      r0,[r1,#0xb8]  ; CLists
;;;732    					CLists.CPolar6 |= 0x04;
001044  4608              MOV      r0,r1
001046  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
00104a  f0400004          ORR      r0,r0,#4
00104e  f88100d2          STRB     r0,[r1,#0xd2]
001052  e00e              B        |L3.4210|
                  |L3.4180|
;;;733    				}
;;;734    				else 
;;;735    				{
;;;736    					var32c = var32c - var32d;
001054  e9dd1000          LDRD     r1,r0,[sp,#0]
001058  1a40              SUBS     r0,r0,r1
00105a  9001              STR      r0,[sp,#4]
;;;737    					CLists.CSET_POWERA_Offset = var32c;
00105c  4909              LDR      r1,|L3.4228|
00105e  9801              LDR      r0,[sp,#4]
001060  f8c100b8          STR      r0,[r1,#0xb8]  ; CLists
;;;738    					CLists.CPolar6 &= ~0x04;
001064  4608              MOV      r0,r1
001066  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
00106a  f0200004          BIC      r0,r0,#4
00106e  f88100d2          STRB     r0,[r1,#0xd2]
                  |L3.4210|
;;;739    				}
;;;740    				
;;;741    				Flag_DAC_OFF=0;
001072  4807              LDR      r0,|L3.4240|
001074  6800              LDR      r0,[r0,#0]  ; flagB
001076  f0200008          BIC      r0,r0,#8
00107a  4905              LDR      r1,|L3.4240|
00107c  6008              STR      r0,[r1,#0]  ; flagB
;;;742    			}
00107e  bf00              NOP      
                  |L3.4224|
;;;743    	
;;;744    	/****************电源CV电流测量校准**********************************/
;;;745    			if (UART_Buffer_Rece[1] == 0x15)			  
001080  4804              LDR      r0,|L3.4244|
001082  e019              B        |L3.4280|
                  |L3.4228|
                          DCD      CLists
                  |L3.4232|
                          DCD      Modify_B_ACT
                  |L3.4236|
                          DCD      Modify_B_READ
                  |L3.4240|
                          DCD      flagB
                  |L3.4244|
                          DCD      UART_Buffer_Rece
                  |L3.4248|
                          DCD      Modify_A_READ
                  |L3.4252|
                          DCD      Modify_C_READ
                  |L3.4256|
                          DCD      Modify_A_ACT
                  |L3.4260|
                          DCD      Vmon_POWE_value
                  |L3.4264|
                          DCD      Contr_Voltage
                  |L3.4268|
                          DCD      Modify_D_READ
                  |L3.4272|
                          DCD      Imon_POWE_value
                  |L3.4276|
                          DCD      Contr_Current
                  |L3.4280|
0010b8  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0010ba  2815              CMP      r0,#0x15
0010bc  d110              BNE      |L3.4320|
;;;746    			{ 
;;;747    				Modify_A_READ=0;
0010be  2000              MOVS     r0,#0
0010c0  49e5              LDR      r1,|L3.5208|
0010c2  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;748    				Modify_A_ACT=0;
0010c4  49e5              LDR      r1,|L3.5212|
0010c6  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;749    				Modify_A_READ = Imon_POWE_value;
0010c8  48e5              LDR      r0,|L3.5216|
0010ca  8800              LDRH     r0,[r0,#0]  ; Imon_POWE_value
0010cc  49e2              LDR      r1,|L3.5208|
0010ce  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;750    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
0010d0  48e4              LDR      r0,|L3.5220|
0010d2  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0010d4  49e3              LDR      r1,|L3.5220|
0010d6  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0010d8  eb002001          ADD      r0,r0,r1,LSL #8
0010dc  49df              LDR      r1,|L3.5212|
0010de  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.4320|
;;;751    			}
;;;752    
;;;753    			if (UART_Buffer_Rece[1] == 0x16)			   
0010e0  48e0              LDR      r0,|L3.5220|
0010e2  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0010e4  2816              CMP      r0,#0x16
0010e6  d163              BNE      |L3.4528|
;;;754    			{
;;;755    				vu16 var16;
;;;756    				vu32 var32a;
;;;757    				vu32 var32b;
;;;758    				
;;;759    				vu16 var16a;
;;;760    				vu32 var32c;
;;;761    				vu32 var32d;
;;;762    				
;;;763    				Modify_B_READ=0;
0010e8  2000              MOVS     r0,#0
0010ea  49df              LDR      r1,|L3.5224|
0010ec  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;764    				Modify_B_ACT=0;
0010ee  49df              LDR      r1,|L3.5228|
0010f0  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;765    				Modify_B_READ = Imon_POWE_value;
0010f2  48db              LDR      r0,|L3.5216|
0010f4  8800              LDRH     r0,[r0,#0]  ; Imon_POWE_value
0010f6  49dc              LDR      r1,|L3.5224|
0010f8  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;766    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
0010fa  48da              LDR      r0,|L3.5220|
0010fc  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0010fe  49d9              LDR      r1,|L3.5220|
001100  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
001102  eb002001          ADD      r0,r0,r1,LSL #8
001106  49d9              LDR      r1,|L3.5228|
001108  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;767    				var32a = Modify_B_ACT;
00110a  4608              MOV      r0,r1
00110c  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
00110e  9004              STR      r0,[sp,#0x10]
;;;768    				var32a = var32a - Modify_A_ACT;
001110  49d2              LDR      r1,|L3.5212|
001112  9804              LDR      r0,[sp,#0x10]
001114  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
001116  1a40              SUBS     r0,r0,r1
001118  9004              STR      r0,[sp,#0x10]
;;;769    				var32a = var32a << 12;
00111a  9804              LDR      r0,[sp,#0x10]
00111c  0300              LSLS     r0,r0,#12
00111e  9004              STR      r0,[sp,#0x10]
;;;770    				var16 = Modify_B_READ - Modify_A_READ;
001120  48d1              LDR      r0,|L3.5224|
001122  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
001124  49cc              LDR      r1,|L3.5208|
001126  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
001128  1a40              SUBS     r0,r0,r1
00112a  b280              UXTH     r0,r0
00112c  9005              STR      r0,[sp,#0x14]
;;;771    				var32a = var32a / var16;
00112e  f8bd1014          LDRH     r1,[sp,#0x14]
001132  9804              LDR      r0,[sp,#0x10]
001134  fbb0f0f1          UDIV     r0,r0,r1
001138  9004              STR      r0,[sp,#0x10]
;;;772    				CLists.CREG_POWER_CorrectionA_CV = var32a;
00113a  49cd              LDR      r1,|L3.5232|
00113c  9804              LDR      r0,[sp,#0x10]
00113e  66c8              STR      r0,[r1,#0x6c]  ; CLists
;;;773    				var32a = Modify_B_ACT;
001140  48ca              LDR      r0,|L3.5228|
001142  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
001144  9004              STR      r0,[sp,#0x10]
;;;774    				var32a = var32a << 12;
001146  9804              LDR      r0,[sp,#0x10]
001148  0300              LSLS     r0,r0,#12
00114a  9004              STR      r0,[sp,#0x10]
;;;775    				var32b = Modify_B_READ;
00114c  48c6              LDR      r0,|L3.5224|
00114e  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
001150  9003              STR      r0,[sp,#0xc]
;;;776    				var32b = var32b * CLists.CREG_POWER_CorrectionA_CV;   //电源CV模式电流测量参数
001152  4608              MOV      r0,r1
001154  6ec0              LDR      r0,[r0,#0x6c]  ; CLists
001156  9903              LDR      r1,[sp,#0xc]
001158  4348              MULS     r0,r1,r0
00115a  9003              STR      r0,[sp,#0xc]
;;;777    				if (var32a < var32b)
00115c  e9dd1003          LDRD     r1,r0,[sp,#0xc]
001160  4288              CMP      r0,r1
001162  d20f              BCS      |L3.4484|
;;;778    				{
;;;779    					var32b = var32b - var32a;
001164  e9dd0103          LDRD     r0,r1,[sp,#0xc]
001168  1a40              SUBS     r0,r0,r1
00116a  9003              STR      r0,[sp,#0xc]
;;;780    					CLists.CREG_POWERA_Offset_CV = var32b;   //电源CC模式电流测量参数
00116c  49c0              LDR      r1,|L3.5232|
00116e  9803              LDR      r0,[sp,#0xc]
001170  f8c100b0          STR      r0,[r1,#0xb0]  ; CLists
;;;781    					CLists.CPolar6 |= 0x08;
001174  4608              MOV      r0,r1
001176  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
00117a  f0400008          ORR      r0,r0,#8
00117e  f88100d2          STRB     r0,[r1,#0xd2]
001182  e00e              B        |L3.4514|
                  |L3.4484|
;;;782    				}
;;;783    				else 
;;;784    				{
;;;785    					var32a = var32a - var32b;
001184  e9dd1003          LDRD     r1,r0,[sp,#0xc]
001188  1a40              SUBS     r0,r0,r1
00118a  9004              STR      r0,[sp,#0x10]
;;;786    					CLists.CREG_POWERA_Offset_CV = var32a;
00118c  49b8              LDR      r1,|L3.5232|
00118e  9804              LDR      r0,[sp,#0x10]
001190  f8c100b0          STR      r0,[r1,#0xb0]  ; CLists
;;;787    					CLists.CPolar6 &= ~0x08;					
001194  4608              MOV      r0,r1
001196  f89000d2          LDRB     r0,[r0,#0xd2]  ; CLists
00119a  f0200008          BIC      r0,r0,#8
00119e  f88100d2          STRB     r0,[r1,#0xd2]
                  |L3.4514|
;;;788    				}
;;;789    					
;;;790    				Flag_DAC_OFF=0;
0011a2  48b4              LDR      r0,|L3.5236|
0011a4  6800              LDR      r0,[r0,#0]  ; flagB
0011a6  f0200008          BIC      r0,r0,#8
0011aa  49b2              LDR      r1,|L3.5236|
0011ac  6008              STR      r0,[r1,#0]  ; flagB
;;;791    			}
0011ae  bf00              NOP      
                  |L3.4528|
;;;792    	/****************************识别电阻1校准*****************************************/
;;;793    			if(UART_Buffer_Rece[1] == 0x17)
0011b0  48ac              LDR      r0,|L3.5220|
0011b2  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0011b4  2817              CMP      r0,#0x17
0011b6  d11a              BNE      |L3.4590|
;;;794    			{
;;;795    				Modify_A_READ=0;
0011b8  2000              MOVS     r0,#0
0011ba  49a7              LDR      r1,|L3.5208|
0011bc  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;796    				Modify_A_ACT=0;
0011be  49a7              LDR      r1,|L3.5212|
0011c0  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;797    				//Modify_A_READ = R1mon_value;//测量电压值
;;;798    				Modify_A_READ=(R1mon_value*1000)/(65535-R1mon_value);
0011c2  48ad              LDR      r0,|L3.5240|
0011c4  8800              LDRH     r0,[r0,#0]  ; R1mon_value
0011c6  f44f717a          MOV      r1,#0x3e8
0011ca  4348              MULS     r0,r1,r0
0011cc  49aa              LDR      r1,|L3.5240|
0011ce  8809              LDRH     r1,[r1,#0]  ; R1mon_value
0011d0  f64f72ff          MOV      r2,#0xffff
0011d4  1a51              SUBS     r1,r2,r1
0011d6  fb90f0f1          SDIV     r0,r0,r1
0011da  499f              LDR      r1,|L3.5208|
0011dc  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;799    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
0011de  48a1              LDR      r0,|L3.5220|
0011e0  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0011e2  49a0              LDR      r1,|L3.5220|
0011e4  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0011e6  eb002001          ADD      r0,r0,r1,LSL #8
0011ea  499c              LDR      r1,|L3.5212|
0011ec  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.4590|
;;;800    			}
;;;801    			if (UART_Buffer_Rece[1] == 0x18)			   //电压测量校准完成
0011ee  489d              LDR      r0,|L3.5220|
0011f0  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0011f2  2818              CMP      r0,#0x18
0011f4  d171              BNE      |L3.4826|
;;;802    			{
;;;803    				vu16 var16;
;;;804    				vu32 var32a;
;;;805    				vu32 var32b;
;;;806    				
;;;807    				vu16 var16a;
;;;808    				vu32 var32c;
;;;809    				vu32 var32d;
;;;810    				Modify_B_READ=0;
0011f6  2000              MOVS     r0,#0
0011f8  499b              LDR      r1,|L3.5224|
0011fa  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;811    				Modify_B_ACT=0;
0011fc  499b              LDR      r1,|L3.5228|
0011fe  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;812    				//Modify_B_READ =R1mon_value;//测量电压值
;;;813    				Modify_B_READ=(R1mon_value*1000)/(65535-R1mon_value);
001200  489d              LDR      r0,|L3.5240|
001202  8800              LDRH     r0,[r0,#0]  ; R1mon_value
001204  f44f717a          MOV      r1,#0x3e8
001208  4348              MULS     r0,r1,r0
00120a  499b              LDR      r1,|L3.5240|
00120c  8809              LDRH     r1,[r1,#0]  ; R1mon_value
00120e  f64f72ff          MOV      r2,#0xffff
001212  1a51              SUBS     r1,r2,r1
001214  fb90f0f1          SDIV     r0,r0,r1
001218  4993              LDR      r1,|L3.5224|
00121a  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;814    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段
00121c  4891              LDR      r0,|L3.5220|
00121e  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
001220  4990              LDR      r1,|L3.5220|
001222  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
001224  eb002001          ADD      r0,r0,r1,LSL #8
001228  4990              LDR      r1,|L3.5228|
00122a  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;815    				var32a = Modify_B_ACT;
00122c  4608              MOV      r0,r1
00122e  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
001230  9004              STR      r0,[sp,#0x10]
;;;816    				var32a = var32a - Modify_A_ACT;
001232  498a              LDR      r1,|L3.5212|
001234  9804              LDR      r0,[sp,#0x10]
001236  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
001238  1a40              SUBS     r0,r0,r1
00123a  9004              STR      r0,[sp,#0x10]
;;;817    				var32a = var32a << 12;
00123c  9804              LDR      r0,[sp,#0x10]
00123e  0300              LSLS     r0,r0,#12
001240  9004              STR      r0,[sp,#0x10]
;;;818    				var16 = Modify_B_READ - Modify_A_READ;
001242  4889              LDR      r0,|L3.5224|
001244  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
001246  4984              LDR      r1,|L3.5208|
001248  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
00124a  1a40              SUBS     r0,r0,r1
00124c  b280              UXTH     r0,r0
00124e  9005              STR      r0,[sp,#0x14]
;;;819    				var32a = var32a / var16;
001250  f8bd1014          LDRH     r1,[sp,#0x14]
001254  9804              LDR      r0,[sp,#0x10]
001256  fbb0f0f1          UDIV     r0,r0,r1
00125a  9004              STR      r0,[sp,#0x10]
;;;820    				CLists.CREG_CorrectionR1 = var32a;     //识别电阻1参数
00125c  4984              LDR      r1,|L3.5232|
00125e  9804              LDR      r0,[sp,#0x10]
001260  f8c10080          STR      r0,[r1,#0x80]  ; CLists
;;;821    				var32a=0;
001264  2000              MOVS     r0,#0
001266  9004              STR      r0,[sp,#0x10]
;;;822    				var32a = Modify_B_ACT;
001268  4880              LDR      r0,|L3.5228|
00126a  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
00126c  9004              STR      r0,[sp,#0x10]
;;;823    				var32a = var32a << 12;
00126e  9804              LDR      r0,[sp,#0x10]
001270  0300              LSLS     r0,r0,#12
001272  9004              STR      r0,[sp,#0x10]
;;;824    				var32b = Modify_B_READ;
001274  487c              LDR      r0,|L3.5224|
001276  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
001278  9003              STR      r0,[sp,#0xc]
;;;825    				var32b = var32b * CLists.CREG_CorrectionR1;
00127a  4608              MOV      r0,r1
00127c  f8d00080          LDR      r0,[r0,#0x80]  ; CLists
001280  9903              LDR      r1,[sp,#0xc]
001282  4348              MULS     r0,r1,r0
001284  9003              STR      r0,[sp,#0xc]
;;;826    				if (var32a < var32b)
001286  e9dd1003          LDRD     r1,r0,[sp,#0xc]
00128a  4288              CMP      r0,r1
00128c  d20f              BCS      |L3.4782|
;;;827    				{
;;;828    					var32b = var32b - var32a;
00128e  e9dd0103          LDRD     r0,r1,[sp,#0xc]
001292  1a40              SUBS     r0,r0,r1
001294  9003              STR      r0,[sp,#0xc]
;;;829    					CLists.CREG_ReadR1_Offset = var32b;    //内阻测量系数
001296  4976              LDR      r1,|L3.5232|
001298  9803              LDR      r0,[sp,#0xc]
00129a  f8c100c4          STR      r0,[r1,#0xc4]  ; CLists
;;;830    					CLists.CPolar7 |= 0x01;
00129e  4608              MOV      r0,r1
0012a0  f89000d3          LDRB     r0,[r0,#0xd3]  ; CLists
0012a4  f0400001          ORR      r0,r0,#1
0012a8  f88100d3          STRB     r0,[r1,#0xd3]
0012ac  e00e              B        |L3.4812|
                  |L3.4782|
;;;831    				}
;;;832    				else 
;;;833    				{
;;;834    					var32a = var32a - var32b;
0012ae  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0012b2  1a40              SUBS     r0,r0,r1
0012b4  9004              STR      r0,[sp,#0x10]
;;;835    					CLists.CREG_ReadR1_Offset = var32a;
0012b6  496e              LDR      r1,|L3.5232|
0012b8  9804              LDR      r0,[sp,#0x10]
0012ba  f8c100c4          STR      r0,[r1,#0xc4]  ; CLists
;;;836    					CLists.CPolar7 &= ~0x01;
0012be  4608              MOV      r0,r1
0012c0  f89000d3          LDRB     r0,[r0,#0xd3]  ; CLists
0012c4  f0200001          BIC      r0,r0,#1
0012c8  f88100d3          STRB     r0,[r1,#0xd3]
                  |L3.4812|
;;;837    				}
;;;838    					//参数写进FLASH
;;;839    				Flag_DAC_OFF=0;
0012cc  4869              LDR      r0,|L3.5236|
0012ce  6800              LDR      r0,[r0,#0]  ; flagB
0012d0  f0200008          BIC      r0,r0,#8
0012d4  4967              LDR      r1,|L3.5236|
0012d6  6008              STR      r0,[r1,#0]  ; flagB
;;;840    			}	
0012d8  bf00              NOP      
                  |L3.4826|
;;;841    			/***************************识别电阻2校准**************************************/
;;;842    			if(UART_Buffer_Rece[1] == 0x19)
0012da  4862              LDR      r0,|L3.5220|
0012dc  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0012de  2819              CMP      r0,#0x19
0012e0  d110              BNE      |L3.4868|
;;;843    			{
;;;844    				Modify_A_READ=0;
0012e2  2000              MOVS     r0,#0
0012e4  495c              LDR      r1,|L3.5208|
0012e6  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;845    				Modify_A_ACT=0;
0012e8  495c              LDR      r1,|L3.5212|
0012ea  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
;;;846    				Modify_A_READ = R2mon_value;//测量电压值
0012ec  4863              LDR      r0,|L3.5244|
0012ee  8800              LDRH     r0,[r0,#0]  ; R2mon_value
0012f0  4959              LDR      r1,|L3.5208|
0012f2  6008              STR      r0,[r1,#0]  ; Modify_A_READ
;;;847    				Modify_A_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取低段
0012f4  485b              LDR      r0,|L3.5220|
0012f6  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0012f8  495a              LDR      r1,|L3.5220|
0012fa  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0012fc  eb002001          ADD      r0,r0,r1,LSL #8
001300  4956              LDR      r1,|L3.5212|
001302  6008              STR      r0,[r1,#0]  ; Modify_A_ACT
                  |L3.4868|
;;;848    			}
;;;849    			if (UART_Buffer_Rece[1] == 0x1A)			   //电压测量校准完成
001304  4857              LDR      r0,|L3.5220|
001306  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
001308  281a              CMP      r0,#0x1a
00130a  d167              BNE      |L3.5084|
;;;850    			{
;;;851    				vu16 var16;
;;;852    				vu32 var32a;
;;;853    				vu32 var32b;
;;;854    				
;;;855    				vu16 var16a;
;;;856    				vu32 var32c;
;;;857    				vu32 var32d;
;;;858    				Modify_B_READ=0;
00130c  2000              MOVS     r0,#0
00130e  4956              LDR      r1,|L3.5224|
001310  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;859    				Modify_B_ACT=0;
001312  4956              LDR      r1,|L3.5228|
001314  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;860    				Modify_B_READ =R2mon_value;//测量电压值
001316  4859              LDR      r0,|L3.5244|
001318  8800              LDRH     r0,[r0,#0]  ; R2mon_value
00131a  4953              LDR      r1,|L3.5224|
00131c  6008              STR      r0,[r1,#0]  ; Modify_B_READ
;;;861    				Modify_B_ACT = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];//读取高段
00131e  4851              LDR      r0,|L3.5220|
001320  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
001322  4950              LDR      r1,|L3.5220|
001324  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
001326  eb002001          ADD      r0,r0,r1,LSL #8
00132a  4950              LDR      r1,|L3.5228|
00132c  6008              STR      r0,[r1,#0]  ; Modify_B_ACT
;;;862    				var32a = Modify_B_ACT;
00132e  4608              MOV      r0,r1
001330  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
001332  9004              STR      r0,[sp,#0x10]
;;;863    				var32a = var32a - Modify_A_ACT;
001334  4949              LDR      r1,|L3.5212|
001336  9804              LDR      r0,[sp,#0x10]
001338  6809              LDR      r1,[r1,#0]  ; Modify_A_ACT
00133a  1a40              SUBS     r0,r0,r1
00133c  9004              STR      r0,[sp,#0x10]
;;;864    				var32a = var32a << 12;
00133e  9804              LDR      r0,[sp,#0x10]
001340  0300              LSLS     r0,r0,#12
001342  9004              STR      r0,[sp,#0x10]
;;;865    				var16 = Modify_B_READ - Modify_A_READ;
001344  4848              LDR      r0,|L3.5224|
001346  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
001348  4943              LDR      r1,|L3.5208|
00134a  6809              LDR      r1,[r1,#0]  ; Modify_A_READ
00134c  1a40              SUBS     r0,r0,r1
00134e  b280              UXTH     r0,r0
001350  9005              STR      r0,[sp,#0x14]
;;;866    				var32a = var32a / var16;
001352  f8bd1014          LDRH     r1,[sp,#0x14]
001356  9804              LDR      r0,[sp,#0x10]
001358  fbb0f0f1          UDIV     r0,r0,r1
00135c  9004              STR      r0,[sp,#0x10]
;;;867    				CLists.CREG_CorrectionR2 = var32a;
00135e  4944              LDR      r1,|L3.5232|
001360  9804              LDR      r0,[sp,#0x10]
001362  f8c10084          STR      r0,[r1,#0x84]  ; CLists
;;;868    				var32a=0;
001366  2000              MOVS     r0,#0
001368  9004              STR      r0,[sp,#0x10]
;;;869    				var32a = Modify_B_ACT;
00136a  4840              LDR      r0,|L3.5228|
00136c  6800              LDR      r0,[r0,#0]  ; Modify_B_ACT
00136e  9004              STR      r0,[sp,#0x10]
;;;870    				var32a = var32a << 12;
001370  9804              LDR      r0,[sp,#0x10]
001372  0300              LSLS     r0,r0,#12
001374  9004              STR      r0,[sp,#0x10]
;;;871    				var32b = Modify_B_READ;
001376  483c              LDR      r0,|L3.5224|
001378  6800              LDR      r0,[r0,#0]  ; Modify_B_READ
00137a  9003              STR      r0,[sp,#0xc]
;;;872    				var32b = var32b * CLists.CREG_CorrectionR2;    	//识别电阻2参数    
00137c  4608              MOV      r0,r1
00137e  f8d00084          LDR      r0,[r0,#0x84]  ; CLists
001382  9903              LDR      r1,[sp,#0xc]
001384  4348              MULS     r0,r1,r0
001386  9003              STR      r0,[sp,#0xc]
;;;873    				if (var32a < var32b)
001388  e9dd1003          LDRD     r1,r0,[sp,#0xc]
00138c  4288              CMP      r0,r1
00138e  d20f              BCS      |L3.5040|
;;;874    				{
;;;875    					var32b = var32b - var32a;
001390  e9dd0103          LDRD     r0,r1,[sp,#0xc]
001394  1a40              SUBS     r0,r0,r1
001396  9003              STR      r0,[sp,#0xc]
;;;876    					CLists.CREG_ReadR2_Offset = var32b;    //内阻测量系数  
001398  4935              LDR      r1,|L3.5232|
00139a  9803              LDR      r0,[sp,#0xc]
00139c  f8c100c8          STR      r0,[r1,#0xc8]  ; CLists
;;;877    					CLists.CPolar7 |= 0x04;
0013a0  4608              MOV      r0,r1
0013a2  f89000d3          LDRB     r0,[r0,#0xd3]  ; CLists
0013a6  f0400004          ORR      r0,r0,#4
0013aa  f88100d3          STRB     r0,[r1,#0xd3]
0013ae  e00e              B        |L3.5070|
                  |L3.5040|
;;;878    				}
;;;879    				else 
;;;880    				{
;;;881    					var32a = var32a - var32b;
0013b0  e9dd1003          LDRD     r1,r0,[sp,#0xc]
0013b4  1a40              SUBS     r0,r0,r1
0013b6  9004              STR      r0,[sp,#0x10]
;;;882    					CLists.CREG_ReadR2_Offset = var32a;
0013b8  492d              LDR      r1,|L3.5232|
0013ba  9804              LDR      r0,[sp,#0x10]
0013bc  f8c100c8          STR      r0,[r1,#0xc8]  ; CLists
;;;883    					CLists.CPolar7 &= ~0x04;
0013c0  4608              MOV      r0,r1
0013c2  f89000d3          LDRB     r0,[r0,#0xd3]  ; CLists
0013c6  f0200004          BIC      r0,r0,#4
0013ca  f88100d3          STRB     r0,[r1,#0xd3]
                  |L3.5070|
;;;884    				}
;;;885    					//参数写进FLASH
;;;886    				Flag_DAC_OFF=0;
0013ce  4829              LDR      r0,|L3.5236|
0013d0  6800              LDR      r0,[r0,#0]  ; flagB
0013d2  f0200008          BIC      r0,r0,#8
0013d6  4927              LDR      r1,|L3.5236|
0013d8  6008              STR      r0,[r1,#0]  ; flagB
;;;887    			}	
0013da  bf00              NOP      
                  |L3.5084|
;;;888    	
;;;889    			Write_Flash_Bytes();
0013dc  f7fffffe          BL       Write_Flash_Bytes
;;;890    			
;;;891    	/***********接受DAC*******************************************/
;;;892    			if (UART_Buffer_Rece[1] == 0x1B)			   
0013e0  4820              LDR      r0,|L3.5220|
0013e2  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
0013e4  281b              CMP      r0,#0x1b
0013e6  d10e              BNE      |L3.5126|
;;;893    			{
;;;894    				Contr_Laod = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
0013e8  481e              LDR      r0,|L3.5220|
0013ea  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
0013ec  491d              LDR      r1,|L3.5220|
0013ee  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
0013f0  eb002001          ADD      r0,r0,r1,LSL #8
0013f4  4922              LDR      r1,|L3.5248|
0013f6  8008              STRH     r0,[r1,#0]
;;;895    				Flag_DAC_OFF=1;
0013f8  481e              LDR      r0,|L3.5236|
0013fa  6800              LDR      r0,[r0,#0]  ; flagB
0013fc  f0200008          BIC      r0,r0,#8
001400  3008              ADDS     r0,r0,#8
001402  491c              LDR      r1,|L3.5236|
001404  6008              STR      r0,[r1,#0]  ; flagB
                  |L3.5126|
;;;896    			}
;;;897    			if (UART_Buffer_Rece[1] == 0x1C)			   
001406  4817              LDR      r0,|L3.5220|
001408  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
00140a  281c              CMP      r0,#0x1c
00140c  d10e              BNE      |L3.5164|
;;;898    			{
;;;899    				Contr_Voltage = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
00140e  4815              LDR      r0,|L3.5220|
001410  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
001412  4914              LDR      r1,|L3.5220|
001414  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
001416  eb002001          ADD      r0,r0,r1,LSL #8
00141a  491a              LDR      r1,|L3.5252|
00141c  8008              STRH     r0,[r1,#0]
;;;900    				Flag_DAC_OFF=1;
00141e  4815              LDR      r0,|L3.5236|
001420  6800              LDR      r0,[r0,#0]  ; flagB
001422  f0200008          BIC      r0,r0,#8
001426  3008              ADDS     r0,r0,#8
001428  4912              LDR      r1,|L3.5236|
00142a  6008              STR      r0,[r1,#0]  ; flagB
                  |L3.5164|
;;;901    			}
;;;902    			if (UART_Buffer_Rece[1] == 0x1D)			   
00142c  480d              LDR      r0,|L3.5220|
00142e  7840              LDRB     r0,[r0,#1]  ; UART_Buffer_Rece
001430  281d              CMP      r0,#0x1d
001432  d10e              BNE      |L3.5202|
;;;903    			{
;;;904    				Contr_Current = (UART_Buffer_Rece[3] << 8) + UART_Buffer_Rece[4];
001434  480b              LDR      r0,|L3.5220|
001436  7900              LDRB     r0,[r0,#4]  ; UART_Buffer_Rece
001438  490a              LDR      r1,|L3.5220|
00143a  78c9              LDRB     r1,[r1,#3]  ; UART_Buffer_Rece
00143c  eb002001          ADD      r0,r0,r1,LSL #8
001440  4911              LDR      r1,|L3.5256|
001442  8008              STRH     r0,[r1,#0]
;;;905    				Flag_DAC_OFF=1;
001444  480b              LDR      r0,|L3.5236|
001446  6800              LDR      r0,[r0,#0]  ; flagB
001448  f0200008          BIC      r0,r0,#8
00144c  3008              ADDS     r0,r0,#8
00144e  4909              LDR      r1,|L3.5236|
001450  6008              STR      r0,[r1,#0]  ; flagB
                  |L3.5202|
;;;906    			}
;;;907    		}
;;;908    //===================================================================================
;;;909    	}
001452  bf00              NOP      
                  |L3.5204|
;;;910    }
001454  b007              ADD      sp,sp,#0x1c
001456  bd00              POP      {pc}
;;;911    //===============================AD值转换成测量值============================================//
                          ENDP

                  |L3.5208|
                          DCD      Modify_A_READ
                  |L3.5212|
                          DCD      Modify_A_ACT
                  |L3.5216|
                          DCD      Imon_POWE_value
                  |L3.5220|
                          DCD      UART_Buffer_Rece
                  |L3.5224|
                          DCD      Modify_B_READ
                  |L3.5228|
                          DCD      Modify_B_ACT
                  |L3.5232|
                          DCD      CLists
                  |L3.5236|
                          DCD      flagB
                  |L3.5240|
                          DCD      R1mon_value
                  |L3.5244|
                          DCD      R2mon_value
                  |L3.5248|
                          DCD      Contr_Laod
                  |L3.5252|
                          DCD      Contr_Voltage
                  |L3.5256|
                          DCD      Contr_Current

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Correct_Parametet
                          %        68
                  Correct_Strong
                          %        68
                  Run_Control
                          %        68

                          AREA ||.data||, DATA, ALIGN=2

                  ADJ_Write
000000  0000              DCB      0x00,0x00
                  DAC_Flag
000002  0000              DCB      0x00,0x00
                  Modify_A_READ
                          DCD      0x00000000
                  Modify_C_READ
                          DCD      0x00000000
                  Modify_A_ACT
                          DCD      0x00000000
                  Modify_B_READ
                          DCD      0x00000000
                  Modify_D_READ
                          DCD      0x00000000
                  Modify_B_ACT
                          DCD      0x00000000
                  correct_por
                          %        8
                  ADDR
000024  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\drive\\modbus.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_modbus_c_bae18981____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_modbus_c_bae18981____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_modbus_c_bae18981____REVSH|
#line 144
|__asm___8_modbus_c_bae18981____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
